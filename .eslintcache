[{"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/index.js":"1","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/reportWebVitals.js":"2","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/serviceWorkerRegistration.js":"3","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/store/store.js":"4","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/App.jsx":"5","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/store/reducers/userReducer.js":"6","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/store/reducers/boardReducer.js":"7","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/routes.js":"8","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/store/actions/boardActions.js":"9","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/Header.jsx":"10","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/CardDetails.jsx":"11","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/pages/Login.jsx":"12","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/pages/Home.jsx":"13","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/pages/About.jsx":"14","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/services/boardService.js":"15","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/pages/CardlyApp.jsx":"16","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/pages/Board.jsx":"17","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/services/misc/utilService.js":"18","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/store/actions/cardActions.js":"19","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx":"20","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx":"21","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx":"22","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx":"23","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx":"24","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/store/actions/stackActions.js":"25","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/MembersPopup.jsx":"26","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/DueDatePopup.jsx":"27","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CheckListPopup.jsx":"28","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/LabelsPopup.jsx":"29","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/AttachmentPopup.jsx":"30","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CoverPopup.jsx":"31","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/CardDetailsButton.jsx":"32","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/BoardPreview.jsx":"33","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/AddStack.jsx":"34","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/StackList.jsx":"35","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/MemberRow.jsx":"36","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/StackPreview.jsx":"37","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/EditStack.jsx":"38","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/CardList.jsx":"39","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/AddCard.jsx":"40","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/CardPreview.jsx":"41","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/EditCard.jsx":"42"},{"size":988,"mtime":1610559629398,"results":"43","hashOfConfig":"44"},{"size":364,"mtime":1610559629399,"results":"45","hashOfConfig":"44"},{"size":5064,"mtime":1610559629399,"results":"46","hashOfConfig":"44"},{"size":504,"mtime":1610559629401,"results":"47","hashOfConfig":"44"},{"size":1094,"mtime":1610655905408,"results":"48","hashOfConfig":"44"},{"size":426,"mtime":1610559629401,"results":"49","hashOfConfig":"44"},{"size":612,"mtime":1610710227613,"results":"50","hashOfConfig":"44"},{"size":670,"mtime":1610562492186,"results":"51","hashOfConfig":"44"},{"size":581,"mtime":1610655905414,"results":"52","hashOfConfig":"44"},{"size":2541,"mtime":1610655905412,"results":"53","hashOfConfig":"44"},{"size":5357,"mtime":1610957824298,"results":"54","hashOfConfig":"44"},{"size":169,"mtime":1610559629399,"results":"55","hashOfConfig":"44"},{"size":723,"mtime":1610796436955,"results":"56","hashOfConfig":"44"},{"size":114,"mtime":1610559629399,"results":"57","hashOfConfig":"44"},{"size":4692,"mtime":1610907878765,"results":"58","hashOfConfig":"44"},{"size":1866,"mtime":1610907832016,"results":"59","hashOfConfig":"44"},{"size":2803,"mtime":1610907832015,"results":"60","hashOfConfig":"44"},{"size":655,"mtime":1610559629400,"results":"61","hashOfConfig":"44"},{"size":1659,"mtime":1610918053693,"results":"62","hashOfConfig":"44"},{"size":466,"mtime":1610881406706,"results":"63","hashOfConfig":"44"},{"size":2956,"mtime":1610959718718,"results":"64","hashOfConfig":"44"},{"size":3238,"mtime":1610833925724,"results":"65","hashOfConfig":"44"},{"size":1263,"mtime":1610908059368,"results":"66","hashOfConfig":"44"},{"size":2729,"mtime":1610921900437,"results":"67","hashOfConfig":"44"},{"size":1124,"mtime":1610907832016,"results":"68","hashOfConfig":"44"},{"size":659,"mtime":1610649937780,"results":"69","hashOfConfig":"44"},{"size":615,"mtime":1610725721816,"results":"70","hashOfConfig":"44"},{"size":826,"mtime":1610739879245,"results":"71","hashOfConfig":"44"},{"size":1755,"mtime":1610736556617,"results":"72","hashOfConfig":"44"},{"size":772,"mtime":1610725757277,"results":"73","hashOfConfig":"44"},{"size":1914,"mtime":1610884354981,"results":"74","hashOfConfig":"44"},{"size":396,"mtime":1610908012223,"results":"75","hashOfConfig":"44"},{"size":691,"mtime":1610907832014,"results":"76","hashOfConfig":"44"},{"size":1230,"mtime":1610907832014,"results":"77","hashOfConfig":"44"},{"size":1599,"mtime":1610907832015,"results":"78","hashOfConfig":"44"},{"size":409,"mtime":1610625021005,"results":"79","hashOfConfig":"44"},{"size":3566,"mtime":1610907970523,"results":"80","hashOfConfig":"44"},{"size":966,"mtime":1610907832015,"results":"81","hashOfConfig":"44"},{"size":749,"mtime":1610833925722,"results":"82","hashOfConfig":"44"},{"size":1152,"mtime":1610907832014,"results":"83","hashOfConfig":"44"},{"size":3594,"mtime":1610916571561,"results":"84","hashOfConfig":"44"},{"size":1016,"mtime":1610907832015,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"awbewl",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/index.js",[],["177","178"],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/reportWebVitals.js",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/serviceWorkerRegistration.js",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/store/store.js",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/App.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/store/reducers/userReducer.js",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/store/reducers/boardReducer.js",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/routes.js",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/store/actions/boardActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/Header.jsx",["179"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport InfoIcon from '@material-ui/icons/Info';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nexport class Header extends Component {\n\n  state = {\n\n  }\n\n  onOpenSearch() {\n    const searchClass = ('not-searched') ? 'searching-now' : 'not-searched'\n  }\n\n  render() {\n    return (\n      <div className=\"header-wrapper\">\n        <div className=\"header-left\">\n          <Link to=\"/\" >\n            <button className=\"btn1\">\n              <span className=\"btn1-span\">\n                <span className=\"header-icon\">\n                <HomeIcon></HomeIcon>\n                </span>\n              </span>\n            </button>\n          </Link>\n          <Link to=\"/Cardly\">\n            <button className=\"btn1\">\n              <span className=\"header-icon\">\n                <DashboardIcon></DashboardIcon>\n              </span>\n              <span className=\"header-icon-word\">Boards</span>\n            </button>\n          </Link>\n          <form className=\"header-input flex\">\n            <label hidden>Search Bar</label>\n            <input type=\"text\" />\n            <div className={this.searchClass} onClick={this.onOpenSearch}>\n              <div className=\"header-icon\">\n                <SearchIcon></SearchIcon>\n              </div>\n            </div>\n          </form>\n        </div>\n        <button className=\"logo-wrapper\">\n          <Link to=\"/\">\n            <span className=\"logo\">Cardly</span>\n          </Link>\n        </button>\n        <div className=\"header-right\">\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n              <AddIcon></AddIcon>\n              </span>\n            </div>\n          </button>\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n            <span className=\"header-icon\">\n              <InfoIcon></InfoIcon>\n              </span>\n            </div>\n          </button>\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n            <span className=\"header-icon\">\n              <NotificationsIcon></NotificationsIcon>\n              </span>\n            </div>\n          </button>\n          <button className=\"header-username\">AS</button>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/CardDetails.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/pages/Login.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/pages/Home.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/pages/About.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/services/boardService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/pages/CardlyApp.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/pages/Board.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/services/misc/utilService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/store/actions/cardActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx",["180","181"],"import React, { Component } from 'react';\nimport { utilService } from '../../../services/misc/utilService.js';\nimport LibraryAddCheckOutlinedIcon from '@material-ui/icons/LibraryAddCheckOutlined';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nexport class CardChecklist extends Component {\n\n    state = {\n        show: false,\n        newTodo: '',\n        todos: []\n    }\n\n    componentDidMount() {\n        let todos = []\n        this.props.checklists.map(todoList => {\n            todos.push(todoList)\n        })\n        this.setState({ todos })\n    }\n\n    toggleAddItem() {\n        let { show } = this.state\n        show = !show\n        this.setState({ show })\n    }\n\n    handleInput = (ev) => {\n        let { newTodo } = this.state\n        newTodo = ev.target.value\n        this.setState({ newTodo })\n    }\n\n    addTodo = (currChecklist) => {\n        currChecklist.todos.push({ id: utilService.makeId(), txt: this.state.newTodo, isDone: false, createdAt: Date.now() })\n        this.setState(this.state.todos = currChecklist.todos)\n    }\n\n    render() {\n        const { checklists } = this.props\n        const { show } = this.state\n        return (<div>\n            {checklists.map(checklist => {\n                return <section key={checklist.id} className=\"checklist\">\n                    <div className=\"flex space-between column\">\n                        <div className=\"cl-subtitle flex column\">\n                            <LibraryAddCheckOutlinedIcon />\n                            <h3 className=\"cl-subtitle-txt flex align-center\"> {checklist.title}</h3>\n                            <button className=\"checklist-del-btn\" onClick={() => { this.props.onRemove(checklist.id) }}>Delete</button>\n                        </div>\n                        {checklist.todos.map(todo => {\n                            return <div key={todo.id} className=\"todo-row flex space-between\">\n                                <div>\n                                    <input type=\"checkbox\" ></input>\n                                    <span>{todo.txt}</span>\n                                </div>\n                                <DeleteIcon className=\"todo-delete-icon\"></DeleteIcon>\n                            </div>\n                        })}\n                        <button onClick={() => this.toggleAddItem()} >Add an Item</button>\n                        {show && <div>\n                            <input onChange={this.handleInput} placeholder=\"Add an item\" ></input>\n                            <button onClick={() => this.addTodo(checklist)}>Add</button>\n                        </div>\n                        }\n                    </div>\n                </section>\n\n            })}\n        </div>\n        )\n    }\n}\n\n\n\n\n\n","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/store/actions/stackActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/MembersPopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/DueDatePopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CheckListPopup.jsx",["182"],"import React, { Component } from 'react';\n\nexport class CheckListPopup extends Component {\n\n    state = {\n        value: 'Checklist'\n    }\n\n    handleInput = (ev) => {\n        const value = ev.target.value\n        this.setState({ value })\n    }\n\n\n    render() {\n        let { value } = this.state\n        return (\n            <section>\n                <div className=\"pop-up-checklist\">\n                    <p className=\"pop-up-header\">Add Checklist</p>\n                    <hr></hr>\n                    <div>Title</div>\n                    <input autoFocus onChange={this.handleInput} defaultValue=\"Checklist\"></input>\n                    <button onClick={() => { this.props.onCheckListSelect(this.state.value) }} className=\"pop-up-checklist-btn\">Add</button>\n                </div>\n            </section>\n        )\n    }\n}\n\n","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/LabelsPopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/AttachmentPopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CoverPopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/CardDetailsButton.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/BoardPreview.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/AddStack.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/StackList.jsx",["183"],"import React, { Component } from 'react';\nimport { StackPreview } from './StackPreview.jsx';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { connect } from 'react-redux';\nimport { updateDragCard } from '../store/actions/cardActions.js';\n\nexport class _StackList extends Component {\n  dragEnd = (result) => {\n    const { selectedBoard } = this.props;\n    const { stacks } = this.props.board;\n    const { destination, source, draggableId } = result;\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    if (result.destination.droppableId === result.source.droppableId) {\n      this.props.updateDragCard(result, stacks, selectedBoard);\n    }\n  };\n\n  render() {\n    const { stacks } = this.props.board;\n\n    if (!stacks) return <h1>Loading ...(stacks)</h1>;\n    return (\n      <div>\n        <div className=\"stack-list-container flex \">\n          <DragDropContext onDragEnd={this.dragEnd}>\n            {this.props.board.stacks.map((stack) => {\n              return (\n                <StackPreview\n                  boardId={this.props.boardId}\n                  key={stack.id}\n                  stack={stack}\n                />\n              );\n            })}\n          </DragDropContext>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n  };\n};\n\nconst mapDispatchToProps = {\n  updateDragCard,\n};\n\nexport const StackList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StackList);\n","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/cardDetailsCmps/MemberRow.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/StackPreview.jsx",["184"],"import React, { Component } from 'react';\nimport { CardList } from './CardList';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { connect } from 'react-redux';\nimport { removeStack, saveStack } from '../store/actions/stackActions.js';\nimport { addCard } from '../store/actions/cardActions';\nimport { setSelectedBoard } from '../store/actions/boardActions';\nimport { EditStack } from './EditStack.jsx';\nimport AddIcon from '@material-ui/icons/Add';\nimport { AddCard } from './AddCard';\n\nexport class _StackPreview extends Component {\n  state = {\n    isEditShow: false,\n    isAddShow: false,\n  };\n\n  onRemoveStack = () => {\n    const { stack, selectedBoard, removeStack } = this.props;\n    removeStack(stack.id, selectedBoard._id, selectedBoard);\n  };\n\n  onEdit = () => {\n    this.setState({ isEditShow: true });\n  };\n\n  onSaveStack = (stack) => {\n    const { selectedBoard } = this.props;\n    console.log('selectedBoard is:', this.props.selectedBoard);\n    this.props.saveStack(stack, selectedBoard);\n    this.setState({ isEditShow: false });\n  };\n\n  // componentDidUpdate() {\n  //   this.loadBoard();\n  // }\n\n  // loadBoard = () => {\n  //   const { selectedBoard } = this.props;\n  //   this.props.setSelectedBoard(selectedBoard);\n  // };\n\n  onAddCard = () => {\n    this.setState({ isAddShow: true });\n  };\n\n  onCloseAddSection = () => {\n    this.setState({ isAddShow: false });\n  };\n\n  onAddNewCard = (cardToadd) => {\n    const { stack, selectedBoard } = this.props;\n    this.onCloseAddSection();\n    this.props.addCard(cardToadd, stack, selectedBoard);\n  };\n\n  render() {\n    const { stack } = this.props;\n    return (\n      <div className=\"stack-preview-card card-list\">\n        <div className=\"stack-title flex\">\n\n          {this.state.isEditShow ? (\n            <EditStack\n              className=\"stack-preview-edit flex\"\n              saveStack={this.onSaveStack}\n              stack={stack}\n            />\n          ) : (\n              <div className=\"flex space-between align-center\">\n                <h4 onClick={this.onEdit} className=\"stack-title-words\">\n                  {stack.title}\n                </h4>\n                {/* <div onClick={this.onEdit}>\n                  <EditIcon className=\"stack-preview-edit-icon\"></EditIcon>\n                </div> */}\n                <div onClick={this.onRemoveStack} className=\"flex\">\n                  <DeleteIcon className=\"stack-preview-delete-icon\"></DeleteIcon>\n                </div>\n              </div>\n            )}\n\n        </div>\n        <CardList stack={stack} cards={stack.cards} />\n        {this.state.isAddShow ? (\n          <AddCard\n            addNewCard={this.onAddNewCard}\n            closeAddSection={this.onCloseAddSection}\n          />\n        ) : (\n            <div\n              onClick={this.onAddCard}\n              className=\"add-new-card flex align-center\"\n            >\n              <div className=\"add-icon flex justify-center align-center\">\n                <AddIcon></AddIcon>\n              </div>\n              <span className=\"add-text flex justify-center align-center\">\n                Add Another Card\n            </span>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  removeStack,\n  setSelectedBoard,\n  saveStack,\n  addCard,\n};\n\nexport const StackPreview = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StackPreview);\n","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/EditStack.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/CardList.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/AddCard.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/CardPreview.jsx",["185"],"import React, { Component } from 'react';\nimport { CardDetails } from './CardDetails';\nimport { CardLabels } from \"./cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx\"\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { removeCard, saveCard } from '../store/actions/cardActions.js';\nimport { connect } from 'react-redux';\nimport { EditCard } from './EditCard';\nimport { Draggable } from 'react-beautiful-dnd';\n\nexport class _CardPreview extends Component {\n  state = {\n    isCardDetailsSelected: false,\n    isEditCardModalShow: false,\n    card: {},\n    labels: [],\n  };\n  componentDidMount() {\n    const { card } = this.props\n    this.setState({ card })\n    this.setState(this.state.labels = this.props.card.labels)\n\n  }\n\n  onShowCardDetails = () => {\n    this.setState({ isCardDetailsSelected: true });\n  };\n\n  closeModal = (ev) => {\n    ev.stopPropagation();\n    this.setState({ isCardDetailsSelected: false });\n  };\n\n  onRemoveCard = (cardId) => {\n    const { selectedBoard, stack } = this.props;\n    this.props.removeCard(cardId, stack, selectedBoard);\n  };\n\n  onEditCard = () => {\n    this.setState({ isEditCardModalShow: true });\n  };\n\n  onSaveEditedCard = (card) => {\n    const { selectedBoard, stack } = this.props;\n    this.props.saveCard(card, stack, selectedBoard);\n    this.setState({ isEditCardModalShow: false });\n  };\n\n  render() {\n    const { card, stack, index } = this.props;\n    const { labels } = this.state\n    const { coverColor } = this.state.card\n    const { isCardDetailsSelected, isEditCardModalShow } = this.state;\n    if (!card || !stack) return <h1>loading..</h1>\n    return (\n      <>\n        <Draggable draggableId={card.id} index={index}>\n          {(provided) => (\n            <div\n              className=\"card-preview\"\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card-preview-color\" style={{ background: `${coverColor}` }}></div>\n              {labels.length !== 0 && <CardLabels labels={labels} />}\n              <div className=\"card-preview-line flex space-between\">\n                {!isEditCardModalShow ? (\n                  <div className=\"card-preview-icons flex space-between\">\n                    <div onClick={this.onShowCardDetails}>{card.title}</div>\n                    <div className=\"icons-container flex\">\n                      <div onClick={this.onEditCard}>\n                        <span><EditIcon className=\"card-preview-edit-icon\"></EditIcon></span>\n                      </div>\n                      <div onClick={() => this.onRemoveCard(card.id)}>\n                        <span><DeleteIcon className=\"card-preview-edit-icon\"></DeleteIcon></span>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                    <EditCard\n                      saveEditedCard={this.onSaveEditedCard}\n                      card={card}\n                    ></EditCard>\n                  )}\n              </div>\n            </div>\n          )}\n        </Draggable>\n        {isCardDetailsSelected && (\n          <CardDetails stack={stack} card={card} onCloseModal={this.closeModal} />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  removeCard,\n  saveCard,\n};\n\nexport const CardPreview = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_CardPreview);\n","/Users/adimagori/Development/Coding Academy/Final project/Cardly/src/cmps/EditCard.jsx",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":17,"column":11,"nodeType":"192","messageId":"193","endLine":17,"endColumn":22},{"ruleId":"194","severity":1,"message":"195","line":17,"column":44,"nodeType":"196","messageId":"197","endLine":17,"endColumn":46},{"ruleId":"198","severity":1,"message":"199","line":37,"column":23,"nodeType":"200","endLine":37,"endColumn":33},{"ruleId":"190","severity":1,"message":"201","line":16,"column":15,"nodeType":"192","messageId":"193","endLine":16,"endColumn":20},{"ruleId":"190","severity":1,"message":"202","line":11,"column":34,"nodeType":"192","messageId":"193","endLine":11,"endColumn":45},{"ruleId":"190","severity":1,"message":"203","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":16},{"ruleId":"198","severity":1,"message":"199","line":21,"column":19,"nodeType":"200","endLine":21,"endColumn":29},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'searchClass' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'value' is assigned a value but never used.","'draggableId' is assigned a value but never used.","'EditIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]