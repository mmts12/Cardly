<<<<<<< HEAD
[{"/Users/moonay23/Dev/sprint 4/Cardly/src/index.js":"1","/Users/moonay23/Dev/sprint 4/Cardly/src/serviceWorkerRegistration.js":"2","/Users/moonay23/Dev/sprint 4/Cardly/src/reportWebVitals.js":"3","/Users/moonay23/Dev/sprint 4/Cardly/src/store/store.js":"4","/Users/moonay23/Dev/sprint 4/Cardly/src/App.jsx":"5","/Users/moonay23/Dev/sprint 4/Cardly/src/store/reducers/boardReducer.js":"6","/Users/moonay23/Dev/sprint 4/Cardly/src/store/reducers/userReducer.js":"7","/Users/moonay23/Dev/sprint 4/Cardly/src/routes.js":"8","/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/boardActions.js":"9","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/Header.jsx":"10","/Users/moonay23/Dev/sprint 4/Cardly/src/services/boardService.js":"11","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardDetails.jsx":"12","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Home.jsx":"13","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/About.jsx":"14","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Login.jsx":"15","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/CardlyApp.jsx":"16","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/SignUp.jsx":"17","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Board.jsx":"18","/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/userActions.js":"19","/Users/moonay23/Dev/sprint 4/Cardly/src/services/eventBusService.js":"20","/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/cardActions.js":"21","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddBoard.jsx":"22","/Users/moonay23/Dev/sprint 4/Cardly/src/services/misc/utilService.js":"23","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx":"24","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx":"25","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx":"26","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx":"27","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx":"28","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardImg.jsx":"29","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx":"30","/Users/moonay23/Dev/sprint 4/Cardly/src/services/userService.js":"31","/Users/moonay23/Dev/sprint 4/Cardly/src/services/misc/socketService.js":"32","/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/stackActions.js":"33","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/BoardPreview.jsx":"34","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/CardDetailsButton.jsx":"35","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddStack.jsx":"36","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StatusBar.jsx":"37","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/DueDatePopup.jsx":"38","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/AttachmentPopup.jsx":"39","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CheckListPopup.jsx":"40","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/MembersPopup.jsx":"41","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CoverPopup.jsx":"42","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/LabelsPopup.jsx":"43","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StackList.jsx":"44","/Users/moonay23/Dev/sprint 4/Cardly/src/services/storageSession.js":"45","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/ChecklistPreview.jsx":"46","/Users/moonay23/Dev/sprint 4/Cardly/src/services/httpService.js":"47","/Users/moonay23/Dev/sprint 4/Cardly/src/services/cloudinaryService.js":"48","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/MembersList.jsx":"49","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StackPreview.jsx":"50","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/EditStack.jsx":"51","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/TodoPreview.jsx":"52","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/LinearProgressWithLabel.jsx":"53","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddCard.jsx":"54","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardList.jsx":"55","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardPreview.jsx":"56","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/EditCard.jsx":"57"},{"size":988,"mtime":1610544545093,"results":"58","hashOfConfig":"59"},{"size":5064,"mtime":1610544545094,"results":"60","hashOfConfig":"59"},{"size":364,"mtime":1610544545094,"results":"61","hashOfConfig":"59"},{"size":504,"mtime":1610544545096,"results":"62","hashOfConfig":"59"},{"size":1094,"mtime":1610655510624,"results":"63","hashOfConfig":"59"},{"size":925,"mtime":1611141087175,"results":"64","hashOfConfig":"59"},{"size":673,"mtime":1611052131883,"results":"65","hashOfConfig":"59"},{"size":774,"mtime":1611053824602,"results":"66","hashOfConfig":"59"},{"size":1600,"mtime":1611141087175,"results":"67","hashOfConfig":"59"},{"size":3734,"mtime":1611316104052,"results":"68","hashOfConfig":"59"},{"size":6381,"mtime":1611256645158,"results":"69","hashOfConfig":"59"},{"size":9428,"mtime":1611256645155,"results":"70","hashOfConfig":"59"},{"size":945,"mtime":1611241767983,"results":"71","hashOfConfig":"59"},{"size":114,"mtime":1610544545093,"results":"72","hashOfConfig":"59"},{"size":4345,"mtime":1611131132954,"results":"73","hashOfConfig":"59"},{"size":2069,"mtime":1611246684334,"results":"74","hashOfConfig":"59"},{"size":5370,"mtime":1611052131881,"results":"75","hashOfConfig":"59"},{"size":3394,"mtime":1611324538402,"results":"76","hashOfConfig":"59"},{"size":1699,"mtime":1611052131883,"results":"77","hashOfConfig":"59"},{"size":395,"mtime":1611080805465,"results":"78","hashOfConfig":"59"},{"size":2309,"mtime":1611233312732,"results":"79","hashOfConfig":"59"},{"size":3220,"mtime":1611324221966,"results":"80","hashOfConfig":"59"},{"size":655,"mtime":1610544545095,"results":"81","hashOfConfig":"59"},{"size":4129,"mtime":1611168298626,"results":"82","hashOfConfig":"59"},{"size":1123,"mtime":1610980835711,"results":"83","hashOfConfig":"59"},{"size":3499,"mtime":1611168298625,"results":"84","hashOfConfig":"59"},{"size":466,"mtime":1610908335455,"results":"85","hashOfConfig":"59"},{"size":881,"mtime":1611315525443,"results":"86","hashOfConfig":"59"},{"size":676,"mtime":1611258227917,"results":"87","hashOfConfig":"59"},{"size":1935,"mtime":1611256645157,"results":"88","hashOfConfig":"59"},{"size":1558,"mtime":1611052131883,"results":"89","hashOfConfig":"59"},{"size":1570,"mtime":1611233312731,"results":"90","hashOfConfig":"59"},{"size":1733,"mtime":1611256645158,"results":"91","hashOfConfig":"59"},{"size":894,"mtime":1611152650283,"results":"92","hashOfConfig":"59"},{"size":396,"mtime":1610908335454,"results":"93","hashOfConfig":"59"},{"size":1385,"mtime":1611141087172,"results":"94","hashOfConfig":"59"},{"size":1458,"mtime":1611316665457,"results":"95","hashOfConfig":"59"},{"size":678,"mtime":1611168298627,"results":"96","hashOfConfig":"59"},{"size":1915,"mtime":1611053824601,"results":"97","hashOfConfig":"59"},{"size":867,"mtime":1610999864705,"results":"98","hashOfConfig":"59"},{"size":849,"mtime":1611080805464,"results":"99","hashOfConfig":"59"},{"size":1941,"mtime":1611001655611,"results":"100","hashOfConfig":"59"},{"size":1935,"mtime":1610999720839,"results":"101","hashOfConfig":"59"},{"size":2571,"mtime":1611256645156,"results":"102","hashOfConfig":"59"},{"size":540,"mtime":1611080805465,"results":"103","hashOfConfig":"59"},{"size":2889,"mtime":1611256645157,"results":"104","hashOfConfig":"59"},{"size":1039,"mtime":1611052131882,"results":"105","hashOfConfig":"59"},{"size":616,"mtime":1611053824603,"results":"106","hashOfConfig":"59"},{"size":1086,"mtime":1611071614740,"results":"107","hashOfConfig":"59"},{"size":4435,"mtime":1611256645156,"results":"108","hashOfConfig":"59"},{"size":996,"mtime":1610959895493,"results":"109","hashOfConfig":"59"},{"size":744,"mtime":1611256645157,"results":"110","hashOfConfig":"59"},{"size":668,"mtime":1611256645157,"results":"111","hashOfConfig":"59"},{"size":1072,"mtime":1610959895490,"results":"112","hashOfConfig":"59"},{"size":784,"mtime":1611256645155,"results":"113","hashOfConfig":"59"},{"size":4806,"mtime":1611257243583,"results":"114","hashOfConfig":"59"},{"size":1045,"mtime":1610959895492,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"1y4hatr",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"118"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"118"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"118"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"118"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"118"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"118"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"118"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"118"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"118"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"118"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"118"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"118"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"/Users/moonay23/Dev/sprint 4/Cardly/src/index.js",[],["246","247"],"/Users/moonay23/Dev/sprint 4/Cardly/src/serviceWorkerRegistration.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/reportWebVitals.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/store.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/App.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/reducers/boardReducer.js",["248"],"const initialState = {\n    boards: [],\n    selectedBoard: {}\n}\n\nexport function boardReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_BOARDS':\n            return { ...state, boards: action.boards }\n        case 'ADD_BOARD':\n            return { ...state, boards: [, ...state.boards, action.boardAdded], selectedBoard: action.boardAdded }\n        case 'SET_BOARD':\n            return { ...state, selectedBoard: action.board }\n        case 'DELETE_BOARD':\n            return {\n                ...state,\n                boards: state.boards.filter(board => board._id !== action.boardId)\n            }\n        case 'UPDATE_BOARD':\n            return {\n                ...state,\n                boards: state.boards.map(board => (board._id === action.board._id) ? action.board : board),\n                selectedBoard: action.board\n            }\n        default:\n            return state\n    }\n}","/Users/moonay23/Dev/sprint 4/Cardly/src/store/reducers/userReducer.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/routes.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/boardActions.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/Header.jsx",["249","250","251","252"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport InfoIcon from '@material-ui/icons/Info';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { connect } from 'react-redux';\nimport { logout } from './../store/actions/userActions.js';\n\nexport class _Header extends Component {\n  state = {};\n\n  onOpenSearch() {\n    const searchClass = 'not-searched' ? 'searching-now' : 'not-searched';\n  }\n\n  render() {\n    const { loggedInUser } = this.props;\n    let initials = 'G';\n    if (loggedInUser) {\n      initials =\n        loggedInUser.fullname.substring(0, 1) +\n        loggedInUser.fullname.charAt(loggedInUser.fullname.indexOf(' ') + 1);\n    }\n    return (\n      <div className=\"header-wrapper\">\n        <div className=\"header-left\">\n          <Link to=\"/\">\n            <button className=\"btn1\">\n              <span className=\"btn1-span\">\n                <span className=\"header-icon\">\n                  <HomeIcon></HomeIcon>\n                </span>\n              </span>\n            </button>\n          </Link>\n          <Link to=\"/Cardly\">\n            <button className=\"btn1\">\n              <span className=\"header-icon\">\n                <DashboardIcon></DashboardIcon>\n              </span>\n              <span className=\"header-icon-word\">Boards</span>\n            </button>\n          </Link>\n          {/* <form className=\"header-input flex\">\n            <label hidden>Search Bar</label>\n            <input type=\"text\" />\n            <div className={this.searchClass} onClick={this.onOpenSearch}>\n              <div className=\"header-icon\">\n                <SearchIcon></SearchIcon>\n              </div>\n            </div>\n          </form> */}\n        </div>\n        <button className=\"logo-wrapper\">\n          <Link to=\"/\">\n            <span className=\"logo\">Cardly</span>\n          </Link>\n        </button>\n        <div className=\"header-right\">\n          {/* <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <AddIcon></AddIcon>\n              </span>\n            </div>\n          </button> */}\n          {/* <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <InfoIcon></InfoIcon>\n              </span>\n            </div>\n          </button> */}\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <NotificationsIcon></NotificationsIcon>\n              </span>\n            </div>\n          </button>\n\n          {loggedInUser ? (\n            <div className=\"flex\">\n              {/* Welcome {loggedInUser.fullname} */}\n              <Link to=\"/\">\n                <button className=\"btn1\" onClick={this.props.logout}>\n                  {' '}\n                  <span className=\"header-icon-word\">Logout</span>\n                </button>\n              </Link>\n            </div>\n          ) : (\n            <Link to=\"/login\">\n              <button className=\"btn1\">\n                <span className=\"header-icon-word\">Login</span>\n              </button>\n            </Link>\n          )}\n          <button className=\"header-username pointer\">{initials}</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedInUser: state.userModule.loggedInUser,\n  };\n};\nconst mapDispatchToProps = {\n  logout,\n};\n\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/services/boardService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardDetails.jsx",["253"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { eventBus } from '../services/eventBusService.js';\nimport { utilService } from '../services/misc/utilService.js';\nimport { CardSideBar } from './cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx';\nimport { CardDescription } from './cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx';\nimport { CardActivity } from './cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx';\nimport { CardLabels } from './cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx';\nimport { CardChecklist } from './cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx';\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx';\nimport { saveCard } from '../store/actions/cardActions.js';\nimport { CardImg } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/CardImg.jsx';\nimport { loadUsers } from '../store/actions/userActions.js';\nimport { userService } from '../services/userService';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport class _CardDetails extends Component {\n  state = {\n    card: {\n      comments: [],\n      labels: [],\n      checklists: [],\n      coverColor: '',\n      members: [],\n    },\n    boardUsers: [],\n    loggedUser: {},\n  };\n\n  componentDidMount() {\n    const { card } = this.props;\n    const boardUsers = this.props.selectedBoard.members;\n    let loggedUser = userService.getLoggedinUser();\n    if (!loggedUser) {\n      loggedUser = { fullname: 'Guest' };\n      console.log('loggedUser is:', loggedUser);\n    }\n    this.setState({ loggedUser });\n    this.setState({ card });\n    this.setState({ boardUsers });\n  }\n\n  onMemberAdd = (user) => {\n    let { card } = this.state;\n    let { loggedUser } = this.state;\n\n    const memberIndx = card.members.findIndex(\n      (member) => member._id === user._id\n    );\n    if (memberIndx === -1) {\n      card.members.push(user);\n      card.comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${loggedUser.fullname} added ${user.fullname} to this card`,\n      });\n    } else {\n      card.comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${loggedUser.fullname} removed ${user.fullname} from this card`,\n      });\n      card.members.splice(memberIndx, 1);\n    }\n    this.setState({ card }, () => {\n      this.props.saveCard(\n        this.state.card,\n        this.props.stack,\n        this.props.selectedBoard\n      );\n    });\n  };\n\n  setLabelOnCard = (color) => {\n    const { card } = this.state;\n    let { comments } = card;\n    // const { loggedUser } = this.state;\n    const colorIndx = card.labels.findIndex(\n      (labelColor) => labelColor === color\n    );\n    if (colorIndx === -1) {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} added card label color`,\n      });\n      card.labels.push(color);\n    } else {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} removed card label color`,\n      });\n      card.labels.splice(colorIndx, 1);\n    }\n    this.setState({ card, comments }, () => {\n      console.log('this.state.card is:', this.state.card);\n      this.props.saveCard(\n        this.state.card,\n        this.props.stack,\n        this.props.selectedBoard\n      );\n    });\n  };\n\n  setCardColor = (color) => {\n    let { card } = this.state;\n    let { comments } = card;\n    if (card.coverColor === color) {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} removed card cover color`,\n      });\n      card.coverColor = '';\n    } else {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} added card cover color`,\n      });\n      card.coverColor = color;\n    }\n\n    this.setState({ card, comments }, () => {\n      this.props.saveCard(\n        this.state.card,\n        this.props.stack,\n        this.props.selectedBoard\n      );\n    });\n  };\n\n  addChecklist = (checklistName) => {\n    const { card } = this.state;\n    let { comments } = card;\n    let checkListItem = {\n      id: utilService.makeId(),\n      title: checklistName,\n      todos: [],\n      createdAt: Date.now(),\n    };\n    comments.unshift({\n      id: utilService.makeId(),\n      createdAt: Date.now(),\n      txt: `${this.state.loggedUser.fullname} added checklist - ${checklistName}`,\n    });\n    card.checklists.push(checkListItem);\n    this.setState({ card });\n  };\n\n  updateChecklist = (checklist) => {\n    const { card } = this.state;\n    const checklistsToAdd = card.checklists.map((currChecklist) =>\n      currChecklist.id === checklist.id ? checklist : currChecklist\n    );\n    card.checklists = checklistsToAdd;\n    this.props.saveCard(card, this.props.stack, this.props.selectedBoard);\n  };\n\n  onRemoveTodo = (todoId, checklists) => {\n    const { card } = this.state;\n    const copyChecklists = { ...checklists };\n    const { todos } = copyChecklists;\n    const filteredTodos = todos.filter((todo) => todo.id !== todoId);\n    copyChecklists.todos = filteredTodos;\n    const filteredChecklists = card.checklists.map((currChecklist) =>\n      currChecklist.id === copyChecklists.id ? copyChecklists : currChecklist\n    );\n    card.checklists = filteredChecklists;\n    this.props.saveCard(card, this.props.stack, this.props.selectedBoard);\n  };\n\n  onClosePopUps = () => {\n    // eventBus.emit('close');\n  };\n\n  deleteChecklist = (checklistId) => {\n    const { card } = this.state;\n    let { comments } = card;\n    const currChecklistIdx = card.checklists.findIndex(\n      (cl) => cl.id === checklistId\n    );\n    const checklistName = card.checklists[currChecklistIdx].title;\n    card.checklists.splice(currChecklistIdx, 1);\n    comments.unshift({\n      id: utilService.makeId(),\n      createdAt: Date.now(),\n      txt: `${this.state.loggedUser.fullname} deleted checklist - ${checklistName}`,\n    });\n\n    this.setState({ card });\n    this.props.saveCard(card, this.props.stack, this.props.selectedBoard);\n  };\n\n  addComment = (comment) => {\n    const { card } = this.state;\n    card.comments.unshift({\n      id: utilService.makeId(),\n      createdBy: this.state.loggedUser,\n      createdAt: Date.now(),\n      txt: `${this.state.loggedUser.fullname} added comment - ${comment}`,\n    });\n    this.setState({ card });\n  };\n\n  render() {\n    const { card, onCloseModal, stack } = this.props;\n    const { checklists } = this.state.card;\n    const labels = this.state.card.labels;\n    const cardMembers = this.state.card.members;\n    return (\n      <>\n        <div className=\"modal-bg\" onClick={(ev) => onCloseModal(ev)}></div>\n        <main>\n          <section\n            onClick={this.onClosePopUps}\n            className=\"card-details-container\"\n          >\n            <CloseIcon\n              className=\"close-cd\"\n              onClick={(ev) => onCloseModal(ev)}\n            />\n            <div\n              className=\"card-details-cover\"\n              style={{ background: `${this.state.card.coverColor}` }}\n            ></div>\n            <div className=\"card-details-body\">\n              <div className=\"card-details-top\">\n                <h2 className=\"card-details-title\">{card.title}</h2>\n                <p className=\"card-details-list\">\n                  in list <span className=\"list-fake-link\">{stack.title}</span>\n                </p>\n              </div>\n              <div className=\"details-list-container flex\">\n                <div className=\"column-container flex column\">\n                  {/* CARD LABELS */}\n                  {labels.length !== 0 && (\n                    <CardLabels className=\"labels-txt\" labels={labels} />\n                  )}\n                  {cardMembers.length !== 0 && (\n                    <MembersAvatar users={cardMembers} />\n                  )}\n                  <CardDescription card={card} />\n                  {card.imgUrl && <CardImg card={card} />}\n                  {checklists.length !== 0 && (\n                    <CardChecklist\n                      updateChecklist={this.updateChecklist}\n                      onRemoveTodo={this.onRemoveTodo}\n                      onRemove={this.deleteChecklist}\n                      checklists={checklists}\n                    />\n                  )}\n\n                  <CardActivity card={card} onCommentAdd={this.addComment} />\n                </div>\n                <div className=\"sidebar-container\">\n                  <CardSideBar\n                    card={card}\n                    stack={stack}\n                    onMemberAdd={this.onMemberAdd}\n                    boardUsers={this.state.boardUsers}\n                    onCheckListSelect={this.addChecklist}\n                    onCoverColorSelect={this.setCardColor}\n                    onLabelColorSelect={this.setLabelOnCard}\n                  />\n                </div>\n              </div>\n            </div>\n          </section>\n        </main>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    users: state.userModule.users,\n  };\n};\n\nconst mapDispatchToProps = {\n  saveCard,\n  loadUsers,\n};\n\nexport const CardDetails = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_CardDetails);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Home.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/pages/About.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Login.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/pages/CardlyApp.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/pages/SignUp.jsx",["254","255"],"import React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { signup } from '../store/actions/userActions.js';\n\nexport class _SignUp extends Component {\n  state = {\n    user: {\n      firstname: '',\n      lastname: '',\n      username: '',\n      password: '',\n      isGuest: false,\n      cards: [],\n      imgUrl: '',\n    },\n    msg: '',\n  };\n  handleInput = (ev) => {\n    ev.preventDefault();\n    const { user } = this.state;\n    const name = ev.target.name;\n    const value = ev.target.value;\n    user[name] = value;\n    this.setState({ user });\n  };\n\n  onSubmit = (ev) => {\n    ev.preventDefault();\n    const { user } = this.state;\n    const fullname = user.firstname + ' ' + user.lastname;\n    delete user.firstname;\n    delete user.lastname;\n    user.fullname = fullname;\n    const { username, password } = user;\n    if (!username || !password || !fullname) {\n      return this.setState({ msg: 'All inputs are required' }, () =>\n        console.log(this.state.msg)\n      );\n    }\n    this.props.signup(user).then(() => this.props.history.push('/cardly'));\n  };\n  render() {\n    const classes = makeStyles((theme) => ({\n      paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      },\n      avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n      },\n      form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n      },\n      submit: {\n        margin: theme.spacing(3, 0, 2),\n      },\n    }));\n    return (\n      <div className=\"main-signup\">\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <div className=\"flex column center\">\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <form className={classes.form} onSubmit={this.onSubmit} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"fname\"\n                    name=\"firstname\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstname\"\n                    label=\"First Name\"\n                    autoFocus\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"lastname\"\n                    label=\"Last Name\"\n                    name=\"lastname\"\n                    autoComplete=\"lname\"\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"username\"\n                    name=\"username\"\n                    autoComplete=\"username\"\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={this.handleInput}\n                  />\n                  {this.state.msg && <label>{this.state.msg}</label>}\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign Up\n              </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"#/login\" variant=\"body2\">\n                    Already have an account? Log in\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          <Box mt={5}></Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = {\n  signup,\n};\n\nexport const SignUp = connect(mapStateToProps, mapDispatchToProps)(_SignUp);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Board.jsx",["256","257"],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/userActions.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/services/eventBusService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/cardActions.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddBoard.jsx",["258"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addBoard } from '../store/actions/boardActions';\nimport { utilService } from './../services/misc/utilService';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nexport class _AddBoard extends Component {\n  state = {\n    board: {\n      activities: [],\n      createdAt: Date.now(),\n      createdBy: {},\n      members: [],\n      stacks: [{ id: utilService.makeId(), cards: [], style: {}, title: '' }],\n      style: {\n        bgc: '',\n        mode: '',\n      },\n      title: '',\n    },\n  };\n\n  handleInput = (ev) => {\n    const { board } = this.state;\n    const { value } = ev.target;\n    board.title = value;\n    this.setState({ board });\n  };\n\n  async onSelectNewBoard(bgc) {\n    const { board } = this.state;\n    if (!board.title) return;\n    board.style.bgc = bgc;\n    this.setState({ board });\n    this.props.addBoard(board);\n    this.props.onCloseAddBoardSection();\n  }\n\n  render() {\n    const bgc = {\n      colors: ['#2e6cb0', '#889BC0', '#A36890', '#F0EFBD'],\n      imgsUrl: [\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1611243032/forest_bjdy6y.png',\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553512/img1_uyzefw.jpg',\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553514/img4_ohr2cl.png',\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553508/img3_g44phk.png',\n      ],\n    };\n    const { onCloseAddBoardSection } = this.props;\n    return (\n      <section className=\"add-board-background\">\n        <div className=\"add-new-board\">\n          <button className=\"clear-btn no-growth flex justify-center align-center\" onClick={onCloseAddBoardSection}><ClearIcon></ClearIcon></button>\n          <form className=\"add-board-form flex align-center justify-center\">\n            <label className=\"add-board-title\">Title:</label>\n            <input\n              className=\"add-board-input\"\n              type=\"text\"\n              name=\"\"\n              onChange={this.handleInput}\n              id=\"\"\n              value={this.state.board.title}\n            />\n          </form>\n          <div className=\" grid\">\n            {bgc.colors.map((color) => {\n              return (\n                <div\n                  onClick={() => this.onSelectNewBoard(color)}\n                  key={color}\n                  className=\"bgc-add-board pointer\"\n                  style={{ backgroundColor: color }}\n                ></div>\n              );\n            })}\n            {bgc.imgsUrl.map((img) => {\n              return (\n                <div\n                  onClick={() => this.onSelectNewBoard(img)}\n                  key={img}\n                  className=\"add-new-board-img pointer\"\n                >\n                  <img src={img} />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        {/* <button>Add </button> */}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    boards: state.boardModule.boards,\n    loggedInUser: state.userModule.loggedInUser,\n  };\n};\n\nconst mapDispatchToProps = {\n  addBoard,\n};\n\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/services/misc/utilService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx",["259"],"import React, { Component } from 'react';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport { clientsClaim } from 'workbox-core';\nimport { Avatar } from '@material-ui/core';\n\n\n\nexport class CardActivity extends Component {\n\n    state = {\n        comment: '',\n        isActivitySelected: false,\n    }\n\n    componentDidMount() {\n        this.setState({ comment: this.props.comment })\n    }\n\n\n    handleChange = (ev) => {\n        let { comment } = this.state\n        comment = ev.target.value\n        this.setState({ comment })\n    }\n\n    onEditActivity = () => {\n        const { isActivitySelected } = this.state\n        isActivitySelected ? this.setState({ isActivitySelected: false }) : this.setState({ isActivitySelected: true })\n    }\n\n    convertToDate = (timestamp) => {\n        let date = new Date(timestamp).toLocaleString();\n        const dateCopy = date.split('/')\n        const day = dateCopy[0];\n        const month = dateCopy[1];\n        const year = dateCopy[2];\n        return (`${day}/${month}/${year}`)\n    }\n\n    render() {\n        const { card } = this.props\n        return <section className=\"cd-cmp flex column\">\n            <div className=\"card-act-title\">\n                <FormatListBulletedIcon className=\"act-icon\" />\n                <h3 className=\"cd-subtitle-words\">Activity</h3>\n            </div>\n            <div className=\"cd-subtitle-txt\">\n                <div className=\"cd-subtitle-txt\">\n                    <div className=\"card-act-textarea\">\n                        <textarea onChange={this.handleChange} className=\"act-textarea\" placeholder=\"Write a comment...\" ></textarea>\n                    </div>\n                    <div className=\"act-original-save flex space-between align-center\">\n                        <button className=\"save-btn\" onClick={() => this.props.onCommentAdd(this.state.comment)} >Save</button>\n                        <div className=\"activity-bar-icons\" >\n                            <AttachFileIcon className=\"activity-icon\" />\n                            <AlternateEmailIcon className=\"activity-icon\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {card.comments.map(comment => {\n                const fullname = (comment.createdBy) ? comment.createdBy.fullname : '';\n                const initials = fullname.substring(0, 1) + fullname.charAt(fullname.indexOf(' ') + 1)\n                const date = this.convertToDate(comment.createdAt)\n                // console.log('date is:', date);\n                return <div key={comment.id} >\n                    <div className=\"card-activity-container flex\">\n                        {\n                            !initials.length ? <Avatar size=\"10\" src=\"frontend/src/assets/imgs/avatar-person.svg\"></Avatar> :\n                                <Avatar size=\"10\" >{initials}</Avatar>\n                        }\n                        <div className=\"card-activity-row\">\n                            <input className=\"card-details-activity-textarea\" onClick={this.onEditActivity} onChange={this.handleChange} value={comment.txt}></input>\n                            <div className=\"card-activity-date\">{date}</div>\n                        </div>\n                    </div>\n                </div>\n            }\n            )\n            }\n\n        </section >\n    }\n}\n\n\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardImg.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx",["260"],"import React, { Component } from 'react';\nimport { utilService } from '../../../services/misc/utilService.js';\nimport { ChecklistPreview } from './ChecklistPreview.jsx';\nimport { eventBus } from './../../../services/eventBusService';\n\nexport class CardChecklist extends Component {\n  state = {\n    newTodo: '',\n    todos: [],\n    closeAddTodoSection: false,\n  };\n\n  componentDidMount() {\n    let todos = [];\n    this.props.checklists.map((todoList) => {\n      todos.push(todoList);\n    });\n    this.setState({ todos });\n  }\n\n  handleInput = (ev) => {\n    let { newTodo } = this.state;\n    newTodo = ev.target.value;\n    this.setState({ newTodo });\n  };\n\n  addTodo = (currChecklist) => {\n    currChecklist.todos.push({\n      id: utilService.makeId(),\n      txt: this.state.newTodo,\n      isDone: false,\n      createdAt: Date.now(),\n    });\n    this.setState({ todos: currChecklist.todos });\n    this.props.updateChecklist(currChecklist);\n    eventBus.emit('closeAddSection', false);\n  };\n\n  handleCheckboxTodo = (todoId, checklist) => {\n    const { ...copyChecklist } = checklist;\n    const todoToUpdate = copyChecklist.todos.find((todo) => todo.id === todoId);\n    todoToUpdate.isDone = !todoToUpdate.isDone;\n    const checklistToUpdate = copyChecklist.todos.map((todo) =>\n      todo.id === todoToUpdate.id ? todoToUpdate : todo\n    );\n\n    this.props.updateChecklist(checklistToUpdate);\n  };\n\n  render() {\n    const { checklists } = this.props;\n    return (\n      <div>\n        {checklists.map((checklist) => {\n          return (\n            <ChecklistPreview\n              handleCheckboxTodo={this.handleCheckboxTodo}\n              key={checklist.id}\n              checklist={checklist}\n              onRemoveTodo={this.props.onRemoveTodo}\n              handleInput={this.handleInput}\n              addTodo={this.addTodo}\n              onRemove={this.props.onRemove}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","/Users/moonay23/Dev/sprint 4/Cardly/src/services/userService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/services/misc/socketService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/stackActions.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/BoardPreview.jsx",["261"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nexport class BoardPreview extends Component {\n  render() {\n    const { board, onRemove } = this.props;\n    const { bgc } = board.style;\n\n    return (\n      <div className=\"board-preview\">\n        {/* <button onClick={() => onRemove(board._id)}>X</button> */}\n        <div\n          className=\"board-preview-image\"\n          style={\n            bgc.startsWith('#')\n              ? { backgroundColor: bgc }\n              : { backgroundImage: `url(${bgc})` }\n          }\n        >\n          <Link to={`./cardly/${board._id}`}>\n            <div className=\"board-preview-card\">\n              <h3 className=\"board-preview-title\">{board.title}</h3>\n            </div>\n          </Link>\n        </div>\n        {/* <div class=\"board-preview-description\">Board Description and Members</div> */}\n      </div>\n    );\n  }\n}\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/CardDetailsButton.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddStack.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StatusBar.jsx",["262","263"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n// import { setSelectedBoard } from '../store/actions/boardActions';\n\nexport class _StatusBar extends React.Component {\n  state = {\n    selectedBoard: {},\n  };\n  componentDidMount() {\n    const { selectedBoard } = this.props;\n    this.setState({ selectedBoard });\n  }\n\n  render() {\n    const { selectedBoard } = this.props;\n    let members = '';\n    if (!selectedBoard) return <h5>Loading...</h5>;\n    if (selectedBoard.members) {\n      members = selectedBoard.members;\n    }\n    return (\n      <section>\n        <div className='status-bar-container flex space-between align-center' >\n          <div className=\"flex align-center\">\n            <h2 style={{ color: 'white' }} className=\"status-board-title\">{selectedBoard.title}</h2>\n            {members.length !== 0 && <MembersAvatar users={selectedBoard.members} />}\n          </div>\n          <button className=\"btn1 diff-bgc\" onClick={this.onMenuSelect}><span className=\"btn1-span\">Show Menu</span></button>\n\n        </div>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n  };\n};\n\nconst mapDispatchToProps = {};\n\nexport const StatusBar = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StatusBar);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/DueDatePopup.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/AttachmentPopup.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CheckListPopup.jsx",["264"],"import React, { Component } from 'react';\n\nexport class CheckListPopup extends Component {\n\n    state = {\n        value: 'Checklist'\n    }\n\n    handleInput = (ev) => {\n        const value = ev.target.value\n        this.setState({ value })\n    }\n\n\n    render() {\n        let { value } = this.state\n        return (\n            <section>\n                <div className=\"pop-up-checklist\">\n                    <p className=\"pop-up-header\">Add Checklist</p>\n                    <hr></hr>\n                    <div className=\"pop-up-title\">Title</div>\n                    <input autoFocus onChange={this.handleInput} defaultValue=\"Checklist\" className=\"checklist-input\"></input>\n                    <button onClick={() => { this.props.onCheckListSelect(this.state.value) }} className=\"save-btn\">Add</button>\n                </div>\n            </section>\n        )\n    }\n}\n\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/MembersPopup.jsx",["265"],"import React, { Component } from 'react';\nimport { MembersList } from '../MembersList.jsx'\n\n\nexport class MembersPopup extends Component {\n\n    state = {\n\n    }\n\n\n\n    componentDidMount() {\n        //    users = getUsers()\n    }\n\n\n    render() {\n        const { isTeamShows } = this.state\n        const boardUsers = this.props.boardUsers;\n        return (\n            <section className=\"members-container\">\n                <div className=\"pop-up-members\">\n                    <p className=\"pop-up-header\"> Members</p>\n                    <hr></hr>\n                    <input autoFocus placeholder=\"Search members\" className=\"members-input\"></input>\n                    <p>BOARD MEMBERS</p>\n                    <MembersList onMemberAdd={this.props.onMemberAdd} users={boardUsers} />\n                </div>\n            </section >\n        )\n    }\n}\n\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CoverPopup.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/LabelsPopup.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StackList.jsx",["266","267"],"import React, { Component } from 'react';\nimport { StackPreview } from './StackPreview.jsx';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { connect } from 'react-redux';\nimport { moveStack } from '../store/actions/stackActions';\nimport {\n  updateDragCard,\n  updateDragCardToOtherList,\n} from '../store/actions/cardActions.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport class _StackList extends Component {\n  dragEnd = (result) => {\n    const { selectedBoard, moveStack } = this.props;\n    const { stacks } = this.props.selectedBoard;\n    const { destination, source, draggableId, type } = result;\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n\n    if (type === 'card') {\n      if (result.destination.droppableId === result.source.droppableId) {\n        this.props.updateDragCard(result, stacks, selectedBoard);\n      }\n      if (result.destination.droppableId !== result.source.droppableId) {\n        this.props.updateDragCardToOtherList(result, stacks, selectedBoard);\n      }\n    } else {\n      console.log('stack moved');\n      this.props.moveStack(result, stacks, selectedBoard);\n    }\n  };\n\n  render() {\n    const { stacks } = this.props.board;\n    if (!stacks) return <CircularProgress />;\n    return (\n      <div>\n        <DragDropContext onDragEnd={this.dragEnd}>\n          <Droppable\n            droppableId=\"all stacks\"\n            direction=\"horizontal\"\n            type=\"column\"\n          >\n            {(provided) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"stack-list-container flex \"\n              >\n                {this.props.board.stacks.map((stack, index) => {\n                  return (\n                    <StackPreview\n                      index={index}\n                      boardId={this.props.boardId}\n                      key={stack.id}\n                      stack={stack}\n                    />\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n  };\n};\n\nconst mapDispatchToProps = {\n  updateDragCard,\n  updateDragCardToOtherList,\n  moveStack,\n};\n\nexport const StackList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StackList);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/services/storageSession.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/ChecklistPreview.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/services/httpService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/services/cloudinaryService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/MembersList.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StackPreview.jsx",["268","269"],"import React, { Component } from 'react';\nimport { CardList } from './CardList';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { connect } from 'react-redux';\nimport { removeStack, saveStack } from '../store/actions/stackActions.js';\nimport { addCard } from '../store/actions/cardActions';\nimport { updateBoard, setSelectedBoard } from '../store/actions/boardActions';\nimport { EditStack } from './EditStack.jsx';\nimport AddIcon from '@material-ui/icons/Add';\nimport { AddCard } from './AddCard';\n// import { boardService } from './../services/boardService';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { boardService } from './../services/boardService';\nimport { socketService } from '../services/misc/socketService';\n\nexport class _StackPreview extends Component {\n  state = {\n    isEditShow: false,\n    isAddShow: false,\n  };\n  componentDidMount() {\n    // const savedMsgs = socketService.getMsgsFromStorage() || [];\n    //   this.setState({ msgs: savedMsgs });\n    // socketService.setup()\n    // socketService.on('board updateBoard', this.onEmitSocket)\n  }\n  componentWillUnmount() {}\n\n  // onEmitSocket = () => {\n  //   console.log('RUMPUS')\n  // }\n\n  onRemoveStack = () => {\n    const { stack, selectedBoard, removeStack } = this.props;\n    removeStack(stack.id, selectedBoard._id, selectedBoard);\n  };\n\n  onEdit = () => {\n    this.setState({ isEditShow: true });\n  };\n\n  onSaveStack = (stack) => {\n    const { selectedBoard } = this.props;\n    console.log('selectedBoard is:', this.props.selectedBoard);\n    this.props.saveStack(stack, selectedBoard);\n    this.setState({ isEditShow: false });\n  };\n\n  // componentDidUpdate() {\n  //   this.loadBoard();\n  // }\n\n  // loadBoard = () => {\n  //   const { selectedBoard } = this.props;\n  //   this.props.setSelectedBoard(selectedBoard);\n  // };\n\n  onAddCard = () => {\n    this.setState({ isAddShow: true });\n  };\n\n  onCloseAddSection = () => {\n    this.setState({ isAddShow: false });\n  };\n\n  onAddNewCard = (cardToadd) => {\n    const { stack, selectedBoard } = this.props;\n    this.onCloseAddSection();\n    // const board = boardService.addCard(cardToadd, stack, selectedBoard);\n    // console.log(board);\n    this.props.addCard(cardToadd, stack, selectedBoard);\n  };\n\n  render() {\n    const { stack } = this.props;\n    return (\n      <Draggable draggableId={stack.id} index={this.props.index}>\n        {(provided) => (\n          <div\n            {...provided.draggableProps}\n            ref={provided.innerRef}\n            {...provided.dragHandleProps}\n            className=\"stack-preview-card card-list\"\n          >\n            <div className=\"stack-title flex\">\n              {this.state.isEditShow ? (\n                <EditStack\n                  className=\"stack-preview-edit flex\"\n                  saveStack={this.onSaveStack}\n                  stack={stack}\n                />\n              ) : (\n                <div className=\"flex space-between align-center\">\n                  <h4 onClick={this.onEdit} className=\"stack-title-words\">\n                    {stack.title}\n                  </h4>\n                  <div onClick={this.onRemoveStack} className=\"flex\">\n                    <DeleteIcon className=\"stack-preview-delete-icon\"></DeleteIcon>\n                  </div>\n                </div>\n              )}\n            </div>\n            <CardList stack={stack} cards={stack.cards} />\n            {this.state.isAddShow ? (\n              <AddCard\n                addNewCard={this.onAddNewCard}\n                closeAddSection={this.onCloseAddSection}\n              />\n            ) : (\n              <div\n                onClick={this.onAddCard}\n                className=\"add-new-card flex align-center\"\n              >\n                <div className=\"add-icon flex justify-center align-center\">\n                  <AddIcon></AddIcon>\n                </div>\n                <span className=\"add-text flex justify-center align-center\">\n                  Add Another Card\n                </span>\n              </div>\n            )}\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  removeStack,\n  setSelectedBoard,\n  saveStack,\n  addCard,\n  updateBoard,\n};\n\nexport const StackPreview = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StackPreview);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/EditStack.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/TodoPreview.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/LinearProgressWithLabel.jsx",["270","271"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport function LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddCard.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardList.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardPreview.jsx",["272","273","274","275"],"import React, { Component } from 'react';\nimport { CardDetails } from './CardDetails';\nimport { CardLabels } from './cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { removeCard, saveCard } from '../store/actions/cardActions.js';\nimport { connect } from 'react-redux';\nimport { EditCard } from './EditCard';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx';\n// import { socketService } from '../services/misc/socketService';\n// import { updateBoard } from '../store/actions/boardActions';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport class _CardPreview extends Component {\n  state = {\n    isCardDetailsSelected: false,\n    isEditCardModalShow: false,\n    card: {},\n    labels: [],\n  };\n\n  componentDidMount() {\n    const { card } = this.props\n    this.setState({ card })\n    this.setState(this.state.labels = this.props.card.labels)\n\n  }\n\n\n\n  onShowCardDetails = () => {\n    if (!this.state.isEditCardModalShow)\n      this.setState({ isCardDetailsSelected: true });\n  };\n\n  closeModal = (ev) => {\n    // ev.preventDefault();\n    ev.stopPropagation();\n    this.setState({ isCardDetailsSelected: false });\n  };\n\n  onRemoveCard = (cardId) => {\n    const { selectedBoard, stack } = this.props;\n    this.props.removeCard(cardId, stack, selectedBoard);\n  };\n\n  onEditCard = (ev) => {\n    ev.stopPropagation()\n    this.setState({ isEditCardModalShow: true });\n  };\n\n  onSaveEditedCard = (card) => {\n    const { selectedBoard, stack } = this.props;\n    this.props.saveCard(card, stack, selectedBoard);\n    this.setState({ isEditCardModalShow: false });\n  };\n\n  render() {\n    const { card, stack, index } = this.props;\n    const { labels, onLoadImg } = this.state;\n    const { coverColor } = this.state.card;\n    const { isCardDetailsSelected, isEditCardModalShow } = this.state;\n    if (!card || !stack) return <h1>loading..</h1>;\n    const classes = makeStyles((theme) => ({\n      root: {\n        display: 'flex',\n        '& > * + *': {\n          marginLeft: theme.spacing(2),\n        },\n      },\n    }));\n    return (\n      <>\n        <Draggable draggableId={card.id} index={index}>\n          {(provided) => (\n            <div\n              className=\"card-preview\"\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef} >\n              { card.imgUrl ?\n                // {coverColor !== '' && (\n                <img src={card.imgUrl} alt=\"\" /> :\n                <div className=\"card-preview-color\" style={{ background: `${coverColor}` }}></div>\n                // )}\n              }\n              {labels.length !== 0 && <CardLabels labels={labels} />}\n\n              <div onClick={this.onShowCardDetails} className=\"card-preview-line flex space-between\">\n                {!isEditCardModalShow ? (\n                  <div className=\"card-preview-icons flex space-between\">\n                    <div>{card.title}</div>\n                    {/* {card.imgUrl && (\n                      <div>\n                        <img src={card.imgUrl} alt=\"\" />\n                      </div>\n                    )} */}\n\n                    <div className=\"icons-container flex\">\n                      <div onClick={this.onEditCard}>\n                        <span>\n                          <EditIcon className=\"card-preview-edit-icon\"></EditIcon>\n                        </span>\n                      </div>\n                      <div onClick={() => this.onRemoveCard(card.id)}>\n                        <span>\n                          <DeleteIcon className=\"card-preview-edit-icon\"></DeleteIcon>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                    <EditCard\n                      saveEditedCard={this.onSaveEditedCard}\n                      card={card}\n                    ></EditCard>\n                  )}\n              </div>\n              {card.members.length !== 0 && <MembersAvatar users={card.members} />}\n            </div>\n          )}\n        </Draggable>\n        {isCardDetailsSelected && (\n          <CardDetails\n            stack={stack}\n            card={card}\n            onCloseModal={this.closeModal}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  removeCard,\n  saveCard,\n};\n\nexport const CardPreview = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_CardPreview);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/EditCard.jsx",[],{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","severity":1,"message":"281","line":11,"column":40,"nodeType":"282","messageId":"283","endLine":11,"endColumn":78},{"ruleId":"284","severity":1,"message":"285","line":5,"column":8,"nodeType":"286","messageId":"287","endLine":5,"endColumn":18},{"ruleId":"284","severity":1,"message":"288","line":6,"column":8,"nodeType":"286","messageId":"287","endLine":6,"endColumn":15},{"ruleId":"284","severity":1,"message":"289","line":7,"column":8,"nodeType":"286","messageId":"287","endLine":7,"endColumn":16},{"ruleId":"284","severity":1,"message":"290","line":16,"column":11,"nodeType":"286","messageId":"287","endLine":16,"endColumn":22},{"ruleId":"284","severity":1,"message":"291","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":18},{"ruleId":"284","severity":1,"message":"292","line":6,"column":8,"nodeType":"286","messageId":"287","endLine":6,"endColumn":24},{"ruleId":"284","severity":1,"message":"293","line":7,"column":8,"nodeType":"286","messageId":"287","endLine":7,"endColumn":16},{"ruleId":"284","severity":1,"message":"294","line":54,"column":11,"nodeType":"286","messageId":"287","endLine":54,"endColumn":18},{"ruleId":"284","severity":1,"message":"295","line":71,"column":11,"nodeType":"286","messageId":"287","endLine":71,"endColumn":21},{"ruleId":"296","severity":1,"message":"297","line":83,"column":19,"nodeType":"298","endLine":83,"endColumn":36},{"ruleId":"284","severity":1,"message":"299","line":5,"column":10,"nodeType":"286","messageId":"287","endLine":5,"endColumn":22},{"ruleId":"300","severity":1,"message":"301","line":15,"column":42,"nodeType":"302","messageId":"303","endLine":15,"endColumn":44},{"ruleId":"284","severity":1,"message":"304","line":5,"column":20,"nodeType":"286","messageId":"287","endLine":5,"endColumn":28},{"ruleId":"284","severity":1,"message":"305","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":26},{"ruleId":"284","severity":1,"message":"306","line":4,"column":8,"nodeType":"286","messageId":"287","endLine":4,"endColumn":16},{"ruleId":"284","severity":1,"message":"307","line":16,"column":15,"nodeType":"286","messageId":"287","endLine":16,"endColumn":20},{"ruleId":"284","severity":1,"message":"308","line":19,"column":17,"nodeType":"286","messageId":"287","endLine":19,"endColumn":28},{"ruleId":"284","severity":1,"message":"309","line":14,"column":28,"nodeType":"286","messageId":"287","endLine":14,"endColumn":37},{"ruleId":"284","severity":1,"message":"310","line":16,"column":34,"nodeType":"286","messageId":"287","endLine":16,"endColumn":45},{"ruleId":"284","severity":1,"message":"311","line":13,"column":10,"nodeType":"286","messageId":"287","endLine":13,"endColumn":22},{"ruleId":"284","severity":1,"message":"312","line":14,"column":10,"nodeType":"286","messageId":"287","endLine":14,"endColumn":23},{"ruleId":"284","severity":1,"message":"313","line":2,"column":8,"nodeType":"286","messageId":"287","endLine":2,"endColumn":17},{"ruleId":"284","severity":1,"message":"314","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":20},{"ruleId":"284","severity":1,"message":"315","line":15,"column":8,"nodeType":"286","messageId":"287","endLine":15,"endColumn":24},{"ruleId":"316","severity":1,"message":"317","line":28,"column":19,"nodeType":"318","endLine":28,"endColumn":29},{"ruleId":"284","severity":1,"message":"319","line":63,"column":21,"nodeType":"286","messageId":"287","endLine":63,"endColumn":30},{"ruleId":"284","severity":1,"message":"294","line":67,"column":11,"nodeType":"286","messageId":"287","endLine":67,"endColumn":18},"no-native-reassign",["320"],"no-negated-in-lhs",["321"],"no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","no-unused-vars","'SearchIcon' is defined but never used.","Identifier","unusedVar","'AddIcon' is defined but never used.","'InfoIcon' is defined but never used.","'searchClass' is assigned a value but never used.","'eventBus' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'classes' is assigned a value but never used.","'boardTitle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'clientsClaim' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'onRemove' is assigned a value but never used.","'Component' is defined but never used.","'MenuIcon' is defined but never used.","'value' is assigned a value but never used.","'isTeamShows' is assigned a value but never used.","'moveStack' is assigned a value but never used.","'draggableId' is assigned a value but never used.","'boardService' is defined but never used.","'socketService' is defined but never used.","'PropTypes' is defined but never used.","'makeStyles' is defined but never used.","'CircularProgress' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'onLoadImg' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\index.js":"1","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\store.js":"4","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\App.jsx":"5","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\reducers\\userReducer.js":"6","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\reducers\\boardReducer.js":"7","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\routes.js":"8","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\boardActions.js":"9","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\Header.jsx":"10","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\misc\\socketService.js":"11","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\boardService.js":"12","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\CardDetails.jsx":"13","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\Home.jsx":"14","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\Login.jsx":"15","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\Board.jsx":"16","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\CardlyApp.jsx":"17","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\About.jsx":"18","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\SignUp.jsx":"19","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\userActions.js":"20","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\eventBusService.js":"21","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\misc\\utilService.js":"22","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\cardActions.js":"23","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\AddBoard.jsx":"24","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardActivity.jsx":"25","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardLabels.jsx":"26","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardChecklist.jsx":"27","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardDescription.jsx":"28","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardSideBar.jsx":"29","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\MembersAvatar.jsx":"30","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardImg.jsx":"31","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\userService.js":"32","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\stackActions.js":"33","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\ChecklistPreview.jsx":"34","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\BoardPreview.jsx":"35","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\StackList.jsx":"36","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\CardDetailsButton.jsx":"37","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\AddStack.jsx":"38","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\StatusBar.jsx":"39","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\AttachmentPopup.jsx":"40","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\storageSession.js":"41","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\LabelsPopup.jsx":"42","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\MembersPopup.jsx":"43","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\DueDatePopup.jsx":"44","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\CoverPopup.jsx":"45","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\CheckListPopup.jsx":"46","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\StackPreview.jsx":"47","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\httpService.js":"48","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\MembersList.jsx":"49","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\EditStack.jsx":"50","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\LinearProgressWithLabel.jsx":"51","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\TodoPreview.jsx":"52","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\CardList.jsx":"53","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\AddCard.jsx":"54","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\CardPreview.jsx":"55","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\EditCard.jsx":"56","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\cloudinaryService.js":"57"},{"size":988,"mtime":1610540025241,"results":"58","hashOfConfig":"59"},{"size":364,"mtime":499162500000,"results":"60","hashOfConfig":"59"},{"size":5064,"mtime":499162500000,"results":"61","hashOfConfig":"59"},{"size":518,"mtime":1610624055378,"results":"62","hashOfConfig":"59"},{"size":1143,"mtime":1610654481415,"results":"63","hashOfConfig":"59"},{"size":697,"mtime":1610987957508,"results":"64","hashOfConfig":"59"},{"size":952,"mtime":1611133902578,"results":"65","hashOfConfig":"59"},{"size":812,"mtime":1611054200285,"results":"66","hashOfConfig":"59"},{"size":1791,"mtime":1611265000949,"results":"67","hashOfConfig":"59"},{"size":3852,"mtime":1611325510014,"results":"68","hashOfConfig":"59"},{"size":1637,"mtime":1611254904860,"results":"69","hashOfConfig":"59"},{"size":6399,"mtime":1611309189932,"results":"70","hashOfConfig":"59"},{"size":10118,"mtime":1611318228403,"results":"71","hashOfConfig":"59"},{"size":971,"mtime":1611254904858,"results":"72","hashOfConfig":"59"},{"size":4504,"mtime":1611141037380,"results":"73","hashOfConfig":"59"},{"size":3533,"mtime":1611308618299,"results":"74","hashOfConfig":"59"},{"size":2153,"mtime":1611254904858,"results":"75","hashOfConfig":"59"},{"size":123,"mtime":1610534575308,"results":"76","hashOfConfig":"59"},{"size":5543,"mtime":1610996021600,"results":"77","hashOfConfig":"59"},{"size":1760,"mtime":1610987967658,"results":"78","hashOfConfig":"59"},{"size":410,"mtime":1611080751603,"results":"79","hashOfConfig":"59"},{"size":681,"mtime":1610539907962,"results":"80","hashOfConfig":"59"},{"size":2386,"mtime":1611318184354,"results":"81","hashOfConfig":"59"},{"size":3326,"mtime":1611325510010,"results":"82","hashOfConfig":"59"},{"size":3588,"mtime":1611169039772,"results":"83","hashOfConfig":"59"},{"size":483,"mtime":1610908339655,"results":"84","hashOfConfig":"59"},{"size":2005,"mtime":1611255189804,"results":"85","hashOfConfig":"59"},{"size":1173,"mtime":1611325510016,"results":"86","hashOfConfig":"59"},{"size":4561,"mtime":1611325510017,"results":"87","hashOfConfig":"59"},{"size":917,"mtime":1611325510018,"results":"88","hashOfConfig":"59"},{"size":763,"mtime":1611325864963,"results":"89","hashOfConfig":"59"},{"size":1620,"mtime":1610988150643,"results":"90","hashOfConfig":"59"},{"size":1849,"mtime":1611264865623,"results":"91","hashOfConfig":"59"},{"size":2924,"mtime":1611257761271,"results":"92","hashOfConfig":"59"},{"size":923,"mtime":1611152646021,"results":"93","hashOfConfig":"59"},{"size":2601,"mtime":1611266231478,"results":"94","hashOfConfig":"59"},{"size":413,"mtime":1610908339651,"results":"95","hashOfConfig":"59"},{"size":1551,"mtime":1611325510013,"results":"96","hashOfConfig":"59"},{"size":1507,"mtime":1611325510014,"results":"97","hashOfConfig":"59"},{"size":2572,"mtime":1611325823667,"results":"98","hashOfConfig":"59"},{"size":566,"mtime":1611080751604,"results":"99","hashOfConfig":"59"},{"size":2309,"mtime":1611325510022,"results":"100","hashOfConfig":"59"},{"size":1149,"mtime":1611325510023,"results":"101","hashOfConfig":"59"},{"size":1047,"mtime":1611325510022,"results":"102","hashOfConfig":"59"},{"size":2315,"mtime":1611325510021,"results":"103","hashOfConfig":"59"},{"size":1243,"mtime":1611325510020,"results":"104","hashOfConfig":"59"},{"size":4583,"mtime":1611266158941,"results":"105","hashOfConfig":"59"},{"size":1081,"mtime":1610988148122,"results":"106","hashOfConfig":"59"},{"size":1124,"mtime":1611080751597,"results":"107","hashOfConfig":"59"},{"size":1041,"mtime":1610912531270,"results":"108","hashOfConfig":"59"},{"size":689,"mtime":1611257549276,"results":"109","hashOfConfig":"59"},{"size":773,"mtime":1611255275191,"results":"110","hashOfConfig":"59"},{"size":813,"mtime":1611254904901,"results":"111","hashOfConfig":"59"},{"size":1201,"mtime":1611325510011,"results":"112","hashOfConfig":"59"},{"size":4704,"mtime":1611325510052,"results":"113","hashOfConfig":"59"},{"size":1093,"mtime":1610918504996,"results":"114","hashOfConfig":"59"},{"size":616,"mtime":1611002443365,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"1ue5d5c",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"118"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"118"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"118"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"118"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"118"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"118"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"118"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"118"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"118"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"118"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"118"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"118"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\index.js",[],["245","246"],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\store.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\App.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\reducers\\boardReducer.js",["247"],"const initialState = {\r\n    boards: [],\r\n    selectedBoard: {}\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return { ...state, boards: action.boards }\r\n        case 'ADD_BOARD':\r\n            return { ...state, boards: [, ...state.boards, action.boardAdded], selectedBoard: action.boardAdded }\r\n        case 'SET_BOARD':\r\n            return { ...state, selectedBoard: action.board }\r\n        case 'DELETE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id !== action.boardId)\r\n            }\r\n        case 'UPDATE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.map(board => (board._id === action.board._id) ? action.board : board),\r\n                selectedBoard: action.board\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\routes.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\boardActions.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\Header.jsx",["248","249","250","251"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from './../store/actions/userActions.js';\r\n\r\nexport class _Header extends Component {\r\n  state = {};\r\n\r\n  onOpenSearch() {\r\n    const searchClass = 'not-searched' ? 'searching-now' : 'not-searched';\r\n  }\r\n\r\n  render() {\r\n    const { loggedInUser } = this.props;\r\n    let initials = 'G';\r\n    if (loggedInUser) {\r\n      initials =\r\n        loggedInUser.fullname.substring(0, 1) +\r\n        loggedInUser.fullname.charAt(loggedInUser.fullname.indexOf(' ') + 1);\r\n    }\r\n    return (\r\n      <div className=\"header-wrapper\">\r\n        <div className=\"header-left\">\r\n          <Link to=\"/\">\r\n            <button className=\"btn1\">\r\n              <span className=\"btn1-span\">\r\n                <span className=\"header-icon\">\r\n                  <HomeIcon></HomeIcon>\r\n                </span>\r\n              </span>\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/Cardly\">\r\n            <button className=\"btn1\">\r\n              <span className=\"header-icon\">\r\n                <DashboardIcon></DashboardIcon>\r\n              </span>\r\n              <span className=\"header-icon-word\">Boards</span>\r\n            </button>\r\n          </Link>\r\n          {/* <form className=\"header-input flex\">\r\n            <label hidden>Search Bar</label>\r\n            <input type=\"text\" />\r\n            <div className={this.searchClass} onClick={this.onOpenSearch}>\r\n              <div className=\"header-icon\">\r\n                <SearchIcon></SearchIcon>\r\n              </div>\r\n            </div>\r\n          </form> */}\r\n        </div>\r\n        <button className=\"logo-wrapper\">\r\n          <Link to=\"/\">\r\n            <span className=\"logo\">Cardly</span>\r\n          </Link>\r\n        </button>\r\n        <div className=\"header-right\">\r\n          {/* <button className=\"btn1\">\r\n            <div className=\"btn1-span\">\r\n              <span className=\"header-icon\">\r\n                <AddIcon></AddIcon>\r\n              </span>\r\n            </div>\r\n          </button> */}\r\n          {/* <button className=\"btn1\">\r\n            <div className=\"btn1-span\">\r\n              <span className=\"header-icon\">\r\n                <InfoIcon></InfoIcon>\r\n              </span>\r\n            </div>\r\n          </button> */}\r\n          <button className=\"btn1\">\r\n            <div className=\"btn1-span\">\r\n              <span className=\"header-icon\">\r\n                <NotificationsIcon></NotificationsIcon>\r\n              </span>\r\n            </div>\r\n          </button>\r\n\r\n          {loggedInUser ? (\r\n            <div className=\"flex\">\r\n              {/* Welcome {loggedInUser.fullname} */}\r\n              <Link to=\"/\">\r\n                <button className=\"btn1\" onClick={this.props.logout}>\r\n                  {' '}\r\n                  <span className=\"header-icon-word\">Logout</span>\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <Link to=\"/login\">\r\n              <button className=\"btn1\">\r\n                <span className=\"header-icon-word\">Login</span>\r\n              </button>\r\n            </Link>\r\n          )}\r\n          <button className=\"header-username pointer\">{initials}</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedInUser: state.userModule.loggedInUser,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  logout,\r\n};\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\misc\\socketService.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\boardService.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\CardDetails.jsx",["252"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { eventBus } from '../services/eventBusService.js';\r\nimport { utilService } from '../services/misc/utilService.js';\r\nimport { CardSideBar } from './cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx';\r\nimport { CardDescription } from './cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx';\r\nimport { CardActivity } from './cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx';\r\nimport { CardLabels } from './cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx';\r\nimport { CardChecklist } from './cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx';\r\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx';\r\nimport { saveCard } from '../store/actions/cardActions.js';\r\nimport { CardImg } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/CardImg.jsx';\r\nimport { loadUsers } from '../store/actions/userActions.js';\r\nimport { userService } from '../services/userService';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport class _CardDetails extends Component {\r\n  state = {\r\n    card: {\r\n      comments: [],\r\n      labels: [],\r\n      checklists: [],\r\n      coverColor: '',\r\n      members: [],\r\n    },\r\n    boardUsers: [],\r\n    loggedUser: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { card } = this.props;\r\n    const boardUsers = this.props.selectedBoard.members;\r\n    let loggedUser = userService.getLoggedinUser();\r\n    if (!loggedUser) {\r\n      loggedUser = { fullname: 'Guest' };\r\n      console.log('loggedUser is:', loggedUser);\r\n    }\r\n    this.setState({ loggedUser });\r\n    this.setState({ card });\r\n    this.setState({ boardUsers });\r\n  }\r\n\r\n  onMemberAdd = (user) => {\r\n    let { card } = this.state;\r\n    let { loggedUser } = this.state;\r\n\r\n    const memberIndx = card.members.findIndex(\r\n      (member) => member._id === user._id\r\n    );\r\n    if (memberIndx === -1) {\r\n      card.members.push(user);\r\n      card.comments.unshift({\r\n        id: utilService.makeId(),\r\n        createdAt: Date.now(),\r\n        txt: `${loggedUser.fullname} added ${user.fullname} to this card`,\r\n      });\r\n    } else {\r\n      card.comments.unshift({\r\n        id: utilService.makeId(),\r\n        createdAt: Date.now(),\r\n        txt: `${loggedUser.fullname} removed ${user.fullname} from this card`,\r\n      });\r\n      card.members.splice(memberIndx, 1);\r\n    }\r\n    this.setState({ card }, () => {\r\n      this.props.saveCard(\r\n        this.state.card,\r\n        this.props.stack,\r\n        this.props.selectedBoard\r\n      );\r\n    });\r\n  };\r\n\r\n  setLabelOnCard = (color) => {\r\n    const { card } = this.state;\r\n    let { comments } = card;\r\n    // const { loggedUser } = this.state;\r\n    const colorIndx = card.labels.findIndex(\r\n      (labelColor) => labelColor === color\r\n    );\r\n    if (colorIndx === -1) {\r\n      comments.unshift({\r\n        id: utilService.makeId(),\r\n        createdAt: Date.now(),\r\n        txt: `${this.state.loggedUser.fullname} added card label color`,\r\n      });\r\n      card.labels.push(color);\r\n    } else {\r\n      comments.unshift({\r\n        id: utilService.makeId(),\r\n        createdAt: Date.now(),\r\n        txt: `${this.state.loggedUser.fullname} removed card label color`,\r\n      });\r\n      card.labels.splice(colorIndx, 1);\r\n    }\r\n    this.setState({ card, comments }, () => {\r\n      console.log('this.state.card is:', this.state.card);\r\n      this.props.saveCard(\r\n        this.state.card,\r\n        this.props.stack,\r\n        this.props.selectedBoard\r\n      );\r\n    });\r\n  };\r\n\r\n  setCardColor = (color) => {\r\n    let { card } = this.state;\r\n    let { comments } = card;\r\n    if (card.coverColor === color) {\r\n      comments.unshift({\r\n        id: utilService.makeId(),\r\n        createdAt: Date.now(),\r\n        txt: `${this.state.loggedUser.fullname} removed card cover color`,\r\n      });\r\n      card.coverColor = '';\r\n    } else {\r\n      comments.unshift({\r\n        id: utilService.makeId(),\r\n        createdAt: Date.now(),\r\n        txt: `${this.state.loggedUser.fullname} added card cover color`,\r\n      });\r\n      card.coverColor = color;\r\n    }\r\n    this.setState({ card, comments }, () => {\r\n      this.props.saveCard(\r\n        this.state.card,\r\n        this.props.stack,\r\n        this.props.selectedBoard\r\n      );\r\n    });\r\n  };\r\n\r\n  addChecklist = (checklistName) => {\r\n    const { card } = this.state;\r\n    let { comments } = card;\r\n    let checkListItem = {\r\n      id: utilService.makeId(),\r\n      title: checklistName,\r\n      todos: [],\r\n      createdAt: Date.now(),\r\n    };\r\n    comments.unshift({\r\n      id: utilService.makeId(),\r\n      createdAt: Date.now(),\r\n      txt: `${this.state.loggedUser.fullname} added checklist - ${checklistName}`,\r\n    });\r\n    card.checklists.push(checkListItem);\r\n    this.setState({ card });\r\n  };\r\n\r\n  updateChecklist = (checklist) => {\r\n    const { card } = this.state;\r\n    const checklistsToAdd = card.checklists.map((currChecklist) =>\r\n      currChecklist.id === checklist.id ? checklist : currChecklist\r\n    );\r\n    card.checklists = checklistsToAdd;\r\n    this.props.saveCard(card, this.props.stack, this.props.selectedBoard);\r\n  };\r\n\r\n  onRemoveTodo = (todoId, checklists) => {\r\n    const { card } = this.state;\r\n    const copyChecklists = { ...checklists };\r\n    const { todos } = copyChecklists;\r\n    const filteredTodos = todos.filter((todo) => todo.id !== todoId);\r\n    copyChecklists.todos = filteredTodos;\r\n    const filteredChecklists = card.checklists.map((currChecklist) =>\r\n      currChecklist.id === copyChecklists.id ? copyChecklists : currChecklist\r\n    );\r\n    card.checklists = filteredChecklists;\r\n    this.props.saveCard(card, this.props.stack, this.props.selectedBoard);\r\n  };\r\n\r\n  onClosePopUps = () => {\r\n    // eventBus.emit('close');\r\n  };\r\n\r\n  deleteChecklist = (checklistId) => {\r\n    const { card } = this.state;\r\n    const { stack, selectedBoard } = this.props;\r\n    let { comments } = card;\r\n    const currChecklistIdx = card.checklists.findIndex(\r\n      (cl) => cl.id === checklistId\r\n    );\r\n    const checklistName = card.checklists[currChecklistIdx].title;\r\n    card.checklists.splice(currChecklistIdx, 1);\r\n    comments.unshift({\r\n      id: utilService.makeId(),\r\n      createdAt: Date.now(),\r\n      txt: `${this.state.loggedUser.fullname} deleted checklist - ${checklistName}`,\r\n    });\r\n\r\n    this.setState({ card });\r\n    this.props.saveCard(card, stack, selectedBoard);\r\n  };\r\n\r\n  addComment = (comment) => {\r\n    const { card } = this.state;\r\n    card.comments.unshift({\r\n      id: utilService.makeId(),\r\n      createdBy: this.state.loggedUser,\r\n      createdAt: Date.now(),\r\n      txt: `${this.state.loggedUser.fullname} added comment - ${comment}`,\r\n    });\r\n    this.setState({ card });\r\n  };\r\n\r\n  onRemoveImage = (card) => {\r\n    const { stack, selectedBoard } = this.props;\r\n    console.log('Remove IMG');\r\n    const copyCard = { ...card };\r\n    copyCard.imgUrl = '';\r\n    console.log(copyCard);\r\n    this.props.saveCard(copyCard, stack, selectedBoard);\r\n  };\r\n\r\n  render() {\r\n    const { card, onCloseModal, stack } = this.props;\r\n    const { checklists } = this.state.card;\r\n    const labels = this.state.card.labels;\r\n    const cardMembers = this.state.card.members;\r\n    return (\r\n      <>\r\n        <div className=\"modal-bg\" onClick={(ev) => onCloseModal(ev)}></div>\r\n        <main>\r\n          <section\r\n            onClick={this.onClosePopUps}\r\n            className=\"card-details-container\"\r\n          >\r\n            <div\r\n              className=\"card-details-cover\"\r\n              style={{ background: `${this.state.card.coverColor}` }}\r\n            >\r\n              <CloseIcon\r\n                className=\"close-cd\"\r\n                onClick={(ev) => onCloseModal(ev)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"card-details-body\">\r\n              <div className=\"card-details-top\">\r\n                <h2 className=\"card-details-title\">{card.title}</h2>\r\n                <p className=\"card-details-list\">\r\n                  in list <span className=\"list-fake-link\">{stack.title}</span>\r\n                </p>\r\n              </div>\r\n              <div className=\"details-list-container flex\">\r\n                <div className=\"column-container flex column\">\r\n                  {/* CARD LABELS */}\r\n                  {labels.length !== 0 && (\r\n                    <CardLabels className=\"labels-txt\" labels={labels} />\r\n                  )}\r\n                  {cardMembers.length !== 0 && (\r\n                    <MembersAvatar users={cardMembers} />\r\n                  )}\r\n                  <CardDescription card={card} />\r\n                  {card.imgUrl && (\r\n                    <CardImg onRemoveImage={this.onRemoveImage} card={card} />\r\n                  )}\r\n                  {checklists.length !== 0 && (\r\n                    <CardChecklist\r\n                      updateChecklist={this.updateChecklist}\r\n                      onRemoveTodo={this.onRemoveTodo}\r\n                      onRemove={this.deleteChecklist}\r\n                      checklists={checklists}\r\n                    />\r\n                  )}\r\n\r\n                  <CardActivity card={card} onCommentAdd={this.addComment} />\r\n                </div>\r\n                <div className=\"sidebar-container\">\r\n                  <CardSideBar\r\n                    card={card}\r\n                    stack={stack}\r\n                    onMemberAdd={this.onMemberAdd}\r\n                    boardUsers={this.state.boardUsers}\r\n                    onCheckListSelect={this.addChecklist}\r\n                    onCoverColorSelect={this.setCardColor}\r\n                    onLabelColorSelect={this.setLabelOnCard}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedBoard: state.boardModule.selectedBoard,\r\n    users: state.userModule.users,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  saveCard,\r\n  loadUsers,\r\n};\r\n\r\nexport const CardDetails = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_CardDetails);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\Home.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\Login.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\Board.jsx",["253"],"import React, { Component } from 'react';\r\nimport { StackList } from './../cmps/StackList';\r\nimport { setSelectedBoard, updateBoard } from '../store/actions/boardActions';\r\nimport { addStack } from '../store/actions/stackActions';\r\nimport { connect } from 'react-redux';\r\nimport { AddStack } from '../cmps/AddStack';\r\nimport { StatusBar } from '../cmps/StatusBar';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { socketService } from '../services/misc/socketService';\r\n\r\nexport class _Board extends Component {\r\n  state = {\r\n    isAddStack: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadBoard();\r\n    socketService.setup(); //on the road\r\n    socketService.emit('join board', this.props.match.params.id); //notify server i joined the lane\r\n    socketService.on('update board', this.handleUpdateBoard); // let me know on every change\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socketService.terminate();\r\n  }\r\n\r\n  handleUpdateBoard = (board) => {\r\n    this.props.updateBoard(board); //call action\r\n  };\r\n\r\n  loadBoard() {\r\n    const boardId = this.props.match.params.id;\r\n    this.props.setSelectedBoard(boardId);\r\n  }\r\n\r\n  onAddSection = () => {\r\n    this.setState({ isAddStack: true });\r\n  };\r\n\r\n  onCloseAddSection = () => {\r\n    this.setState({ isAddStack: false });\r\n  };\r\n\r\n  onAddNewStack = (stack) => {\r\n    const { selectedBoard } = this.props;\r\n    this.props\r\n      .addStack(stack, selectedBoard)\r\n      .then(() => this.setState({ isAddStack: false }));\r\n  };\r\n\r\n  render() {\r\n    // const classes = makeStyles((theme) => ({\r\n    //   root: {\r\n    //     display: 'flex',\r\n    //     '& > * + *': {\r\n    //       marginLeft: theme.spacing(2),\r\n    //     },\r\n    //   },\r\n    // }));\r\n    const { selectedBoard } = this.props;\r\n    let style = { backgroundColor: 'white' };\r\n    if (!selectedBoard) return <CircularProgress />;\r\n    if (selectedBoard.style) {\r\n      const bgc = selectedBoard.style.bgc;\r\n      style = bgc.startsWith('#')\r\n        ? { backgroundColor: bgc }\r\n        : { backgroundImage: `url(${bgc})` };\r\n    }\r\n    // const boardTitle = selectedBoard ? selectedBoard.title : '';\r\n    return (\r\n      <section className=\"board-container\" style={style}>\r\n        <StatusBar />\r\n\r\n        <div className=\"board-inner mt flex column  \">\r\n          <div className=\"stack-container flex \">\r\n            {selectedBoard && <StackList board={selectedBoard} />}\r\n            <div className=\"add-new-stack\">\r\n              <button\r\n                className=\"board-open-modal-btn\"\r\n                onClick={this.onAddSection}\r\n              >\r\n                <span className=\"board-icon\">\r\n                  <AddIcon></AddIcon>\r\n                </span>\r\n                <span className=\"btn1-span\">Add another list</span>\r\n              </button>\r\n              {this.state.isAddStack && (\r\n                <AddStack\r\n                  addNewStack={this.onAddNewStack}\r\n                  closeAddSection={this.onCloseAddSection}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedBoard: state.boardModule.selectedBoard,\r\n    boards: state.boardModule.boards,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setSelectedBoard,\r\n  addStack,\r\n  updateBoard,\r\n};\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\CardlyApp.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\About.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\SignUp.jsx",["254","255"],"import React, { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../store/actions/userActions.js';\r\n\r\nexport class _SignUp extends Component {\r\n  state = {\r\n    user: {\r\n      firstname: '',\r\n      lastname: '',\r\n      username: '',\r\n      password: '',\r\n      isGuest: false,\r\n      cards: [],\r\n      imgUrl: '',\r\n    },\r\n    msg: '',\r\n  };\r\n  handleInput = (ev) => {\r\n    ev.preventDefault();\r\n    const { user } = this.state;\r\n    const name = ev.target.name;\r\n    const value = ev.target.value;\r\n    user[name] = value;\r\n    this.setState({ user });\r\n  };\r\n\r\n  onSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    const { user } = this.state;\r\n    const fullname = user.firstname + ' ' + user.lastname;\r\n    delete user.firstname;\r\n    delete user.lastname;\r\n    user.fullname = fullname;\r\n    const { username, password } = user;\r\n    if (!username || !password || !fullname) {\r\n      return this.setState({ msg: 'All inputs are required' }, () =>\r\n        console.log(this.state.msg)\r\n      );\r\n    }\r\n    this.props.signup(user).then(() => this.props.history.push('/cardly'));\r\n  };\r\n  render() {\r\n    const classes = makeStyles((theme) => ({\r\n      paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n    }));\r\n    return (\r\n      <div className=\"main-signup\">\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"flex column center\">\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={this.onSubmit} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"fname\"\r\n                    name=\"firstname\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstname\"\r\n                    label=\"First Name\"\r\n                    autoFocus\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"lastname\"\r\n                    label=\"Last Name\"\r\n                    name=\"lastname\"\r\n                    autoComplete=\"lname\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"username\"\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                  {this.state.msg && <label>{this.state.msg}</label>}\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Link href=\"#/login\" variant=\"body2\">\r\n                    Already have an account? Log in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <Box mt={5}></Box>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  signup,\r\n};\r\n\r\nexport const SignUp = connect(mapStateToProps, mapDispatchToProps)(_SignUp);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\eventBusService.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\misc\\utilService.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\cardActions.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\AddBoard.jsx",["256"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addBoard } from '../store/actions/boardActions';\r\nimport { utilService } from './../services/misc/utilService';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nexport class _AddBoard extends Component {\r\n  state = {\r\n    board: {\r\n      activities: [],\r\n      createdAt: Date.now(),\r\n      createdBy: {},\r\n      members: [],\r\n      stacks: [{ id: utilService.makeId(), cards: [], style: {}, title: '' }],\r\n      style: {\r\n        bgc: '',\r\n        mode: '',\r\n      },\r\n      title: '',\r\n    },\r\n  };\r\n\r\n  handleInput = (ev) => {\r\n    const { board } = this.state;\r\n    const { value } = ev.target;\r\n    board.title = value;\r\n    this.setState({ board });\r\n  };\r\n\r\n  async onSelectNewBoard(bgc) {\r\n    const { board } = this.state;\r\n    if (!board.title) return;\r\n    board.style.bgc = bgc;\r\n    this.setState({ board });\r\n    this.props.addBoard(board);\r\n    this.props.onCloseAddBoardSection();\r\n  }\r\n\r\n  render() {\r\n    const bgc = {\r\n      colors: ['#2e6cb0', '#889BC0', '#A36890', '#F0EFBD'],\r\n      imgsUrl: [\r\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1611243032/forest_bjdy6y.png',\r\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553512/img1_uyzefw.jpg',\r\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553514/img4_ohr2cl.png',\r\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553508/img3_g44phk.png',\r\n      ],\r\n    };\r\n    const { onCloseAddBoardSection } = this.props;\r\n    return (\r\n      <section className=\"add-board-background\">\r\n        <div className=\"add-new-board\">\r\n          <button className=\"clear-btn no-growth flex justify-center align-center\" onClick={onCloseAddBoardSection}><ClearIcon></ClearIcon></button>\r\n          <form className=\"add-board-form flex align-center justify-center\">\r\n            <label className=\"add-board-title\">Title:</label>\r\n            <input\r\n              className=\"add-board-input\"\r\n              type=\"text\"\r\n              name=\"\"\r\n              onChange={this.handleInput}\r\n              id=\"\"\r\n              value={this.state.board.title}\r\n            />\r\n          </form>\r\n          <div className=\" grid\">\r\n            {bgc.colors.map((color) => {\r\n              return (\r\n                <div\r\n                  onClick={() => this.onSelectNewBoard(color)}\r\n                  key={color}\r\n                  className=\"bgc-add-board pointer\"\r\n                  style={{ backgroundColor: color }}\r\n                ></div>\r\n              );\r\n            })}\r\n            {bgc.imgsUrl.map((img) => {\r\n              return (\r\n                <div\r\n                  onClick={() => this.onSelectNewBoard(img)}\r\n                  key={img}\r\n                  className=\"add-new-board-img pointer\"\r\n                >\r\n                  <img src={img} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {/* <button>Add </button> */}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    boards: state.boardModule.boards,\r\n    loggedInUser: state.userModule.loggedInUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addBoard,\r\n};\r\n\r\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardActivity.jsx",["257"],"import React, { Component } from 'react';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport { clientsClaim } from 'workbox-core';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\n\r\n\r\nexport class CardActivity extends Component {\r\n\r\n    state = {\r\n        comment: '',\r\n        isActivitySelected: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ comment: this.props.comment })\r\n    }\r\n\r\n\r\n    handleChange = (ev) => {\r\n        let { comment } = this.state\r\n        comment = ev.target.value\r\n        this.setState({ comment })\r\n    }\r\n\r\n    onEditActivity = () => {\r\n        const { isActivitySelected } = this.state\r\n        isActivitySelected ? this.setState({ isActivitySelected: false }) : this.setState({ isActivitySelected: true })\r\n    }\r\n\r\n    convertToDate = (timestamp) => {\r\n        let date = new Date(timestamp).toLocaleString();\r\n        const dateCopy = date.split('/')\r\n        const day = dateCopy[0];\r\n        const month = dateCopy[1];\r\n        const year = dateCopy[2];\r\n        return (`${day}/${month}/${year}`)\r\n    }\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        return <section className=\"cd-cmp flex column\">\r\n            <div className=\"card-act-title\">\r\n                <FormatListBulletedIcon className=\"act-icon\" />\r\n                <h3 className=\"cd-subtitle-words\">Activity</h3>\r\n            </div>\r\n            <div className=\"cd-subtitle-txt\">\r\n                <div className=\"cd-subtitle-txt\">\r\n                    <div className=\"card-act-textarea\">\r\n                        <textarea onChange={this.handleChange} className=\"act-textarea\" placeholder=\"Write a comment...\" ></textarea>\r\n                    </div>\r\n                    <div className=\"act-original-save flex space-between align-center\">\r\n                        <button className=\"save-btn\" onClick={() => this.props.onCommentAdd(this.state.comment)} >Save</button>\r\n                        <div className=\"activity-bar-icons\" >\r\n                            <AttachFileIcon className=\"activity-icon\" />\r\n                            <AlternateEmailIcon className=\"activity-icon\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {card.comments.map(comment => {\r\n                const fullname = (comment.createdBy) ? comment.createdBy.fullname : '';\r\n                const initials = fullname.substring(0, 1) + fullname.charAt(fullname.indexOf(' ') + 1)\r\n                const date = this.convertToDate(comment.createdAt)\r\n                // console.log('date is:', date);\r\n                return <div key={comment.id} >\r\n                    <div className=\"card-activity-container flex\">\r\n                        {\r\n                            !initials.length ? <Avatar size=\"10\" src=\"frontend/src/assets/imgs/avatar-person.svg\"></Avatar> :\r\n                                <Avatar size=\"10\" >{initials}</Avatar>\r\n                        }\r\n                        <div className=\"card-activity-row\">\r\n                            <input className=\"card-details-activity-textarea\" onClick={this.onEditActivity} onChange={this.handleChange} value={comment.txt}></input>\r\n                            <div className=\"card-activity-date\">{date}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            )\r\n            }\r\n\r\n        </section >\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardLabels.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardChecklist.jsx",["258"],"import React, { Component } from 'react';\r\nimport { utilService } from '../../../services/misc/utilService.js';\r\nimport { ChecklistPreview } from './ChecklistPreview.jsx';\r\nimport { eventBus } from './../../../services/eventBusService';\r\n\r\nexport class CardChecklist extends Component {\r\n  state = {\r\n    newTodo: '',\r\n    todos: [],\r\n    closeAddTodoSection: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let todos = [];\r\n    this.props.checklists.map((todoList) => {\r\n      todos.push(todoList);\r\n    });\r\n    this.setState({ todos });\r\n  }\r\n\r\n  handleInput = (ev) => {\r\n    let { newTodo } = this.state;\r\n    newTodo = ev.target.value;\r\n    this.setState({ newTodo });\r\n  };\r\n\r\n  addTodo = (currChecklist) => {\r\n    currChecklist.todos.push({\r\n      id: utilService.makeId(),\r\n      txt: this.state.newTodo,\r\n      isDone: false,\r\n      createdAt: Date.now(),\r\n    });\r\n    this.setState({ todos: currChecklist.todos });\r\n    this.props.updateChecklist(currChecklist);\r\n    eventBus.emit('closeAddSection', false);\r\n  };\r\n\r\n  handleCheckboxTodo = (todoId, checklist) => {\r\n    const { ...copyChecklist } = checklist;\r\n    const todoToUpdate = copyChecklist.todos.find((todo) => todo.id === todoId);\r\n    todoToUpdate.isDone = !todoToUpdate.isDone;\r\n    const checklistToUpdate = copyChecklist.todos.map((todo) =>\r\n      todo.id === todoToUpdate.id ? todoToUpdate : todo\r\n    );\r\n\r\n    this.props.updateChecklist(checklistToUpdate);\r\n  };\r\n\r\n  render() {\r\n    const { checklists } = this.props;\r\n    return (\r\n      <div>\r\n        {checklists.map((checklist) => {\r\n          return (\r\n            <ChecklistPreview\r\n              handleCheckboxTodo={this.handleCheckboxTodo}\r\n              key={checklist.id}\r\n              checklist={checklist}\r\n              onRemoveTodo={this.props.onRemoveTodo}\r\n              handleInput={this.handleInput}\r\n              addTodo={this.addTodo}\r\n              onRemove={this.props.onRemove}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardDescription.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardSideBar.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\MembersAvatar.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardImg.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\userService.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\stackActions.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\ChecklistPreview.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\BoardPreview.jsx",["259"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport class BoardPreview extends Component {\r\n  render() {\r\n    const { board, onRemove } = this.props;\r\n    const { bgc } = board.style;\r\n\r\n    return (\r\n      <div className=\"board-preview\">\r\n        {/* <button onClick={() => onRemove(board._id)}>X</button> */}\r\n        <div\r\n          className=\"board-preview-image\"\r\n          style={\r\n            bgc.startsWith('#')\r\n              ? { backgroundColor: bgc }\r\n              : { backgroundImage: `url(${bgc})` }\r\n          }\r\n        >\r\n          <Link to={`./cardly/${board._id}`}>\r\n            <div className=\"board-preview-card\">\r\n              <h3 className=\"board-preview-title\">{board.title}</h3>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n        {/* <div class=\"board-preview-description\">Board Description and Members</div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\StackList.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\CardDetailsButton.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\AddStack.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\StatusBar.jsx",["260","261"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n// import { setSelectedBoard } from '../store/actions/boardActions';\r\n\r\nexport class _StatusBar extends React.Component {\r\n  state = {\r\n    selectedBoard: {},\r\n  };\r\n  componentDidMount() {\r\n    const { selectedBoard } = this.props;\r\n    this.setState({ selectedBoard });\r\n  }\r\n\r\n  render() {\r\n    const { selectedBoard } = this.props;\r\n    let members = '';\r\n    if (!selectedBoard) return <h5>Loading...</h5>;\r\n    if (selectedBoard.members) {\r\n      members = selectedBoard.members;\r\n    }\r\n    return (\r\n      <section>\r\n        <div className='status-bar-container flex space-between align-center' >\r\n          <div className=\"flex align-center\">\r\n            <h2 style={{ color: 'white' }} className=\"status-board-title\">{selectedBoard.title}</h2>\r\n            {members.length !== 0 && <MembersAvatar users={selectedBoard.members} />}\r\n          </div>\r\n          <button className=\"btn1 diff-bgc\" onClick={this.onMenuSelect}><span className=\"btn1-span\">Show Menu</span></button>\r\n\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedBoard: state.boardModule.selectedBoard,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport const StatusBar = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_StatusBar);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\AttachmentPopup.jsx",["262"],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\storageSession.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\LabelsPopup.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\MembersPopup.jsx",["263"],"import React, { Component } from 'react';\r\nimport { MembersList } from '../MembersList.jsx'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport class MembersPopup extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    togglePopUp = (ev) => {\r\n        const { name, onButtonClick } = this.props\r\n        onButtonClick(name)\r\n    }\r\n\r\n    render() {\r\n        const { isTeamShows } = this.state\r\n        const boardUsers = this.props.boardUsers;\r\n        return (\r\n            <section className=\"members-container\">\r\n                <div className=\"pop-up-members\">\r\n                    <CloseIcon\r\n                        className=\"close-pop-up-btn\"\r\n                        onClick={(ev) => this.togglePopUp(ev)}\r\n                    />\r\n                    <p className=\"pop-up-header\"> Members</p>\r\n                    <hr></hr>\r\n                    <input autoFocus placeholder=\"Search members\" className=\"members-input\"></input>\r\n                    <p>BOARD MEMBERS</p>\r\n                    <MembersList onMemberAdd={this.props.onMemberAdd} users={boardUsers} />\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\DueDatePopup.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\CoverPopup.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\CheckListPopup.jsx",["264"],"import React, { Component } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport class CheckListPopup extends Component {\r\n\r\n    state = {\r\n        value: 'Checklist'\r\n    }\r\n\r\n    togglePopUp = (ev) => {\r\n        const { name, onButtonClick } = this.props\r\n        onButtonClick(name)\r\n    }\r\n\r\n    handleInput = (ev) => {\r\n        const value = ev.target.value\r\n        this.setState({ value })\r\n    }\r\n\r\n\r\n    render() {\r\n        let { value } = this.state\r\n        return (\r\n            <section>\r\n                <div className=\"pop-up-checklist\">\r\n                    <CloseIcon\r\n                        className=\"close-pop-up-btn\"\r\n                        onClick={(ev) => this.togglePopUp(ev)}\r\n                    />\r\n                    <p className=\"pop-up-header\">Add Checklist</p>\r\n                    <hr></hr>\r\n                    <div className=\"pop-up-title\">Title</div>\r\n                    <input autoFocus onChange={this.handleInput} defaultValue=\"Checklist\" className=\"checklist-input\"></input>\r\n                    <button onClick={() => { this.props.onCheckListSelect(this.state.value) }} className=\"save-btn\">Add</button>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\StackPreview.jsx",["265","266"],"import React, { Component } from 'react';\r\nimport { CardList } from './CardList';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { connect } from 'react-redux';\r\nimport { removeStack, saveStack } from '../store/actions/stackActions.js';\r\nimport { addCard } from '../store/actions/cardActions';\r\nimport { updateBoard, setSelectedBoard } from '../store/actions/boardActions';\r\nimport { EditStack } from './EditStack.jsx';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { AddCard } from './AddCard';\r\n// import { boardService } from './../services/boardService';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { boardService } from './../services/boardService';\r\nimport { socketService } from '../services/misc/socketService';\r\n\r\nexport class _StackPreview extends Component {\r\n  state = {\r\n    isEditShow: false,\r\n    isAddShow: false,\r\n  };\r\n  // componentDidMount() {\r\n  // const savedMsgs = socketService.getMsgsFromStorage() || [];\r\n  //   this.setState({ msgs: savedMsgs });\r\n  // socketService.setup()\r\n  // socketService.on('board updateBoard', this.onEmitSocket)\r\n  // }\r\n  // componentWillUnmount() {}\r\n\r\n  // onEmitSocket = () => {\r\n  //   console.log('RUMPUS')\r\n  // }\r\n\r\n  onRemoveStack = () => {\r\n    const { stack, selectedBoard, removeStack } = this.props;\r\n    removeStack(stack.id, selectedBoard._id, selectedBoard);\r\n  };\r\n\r\n  onEdit = () => {\r\n    this.setState({ isEditShow: true });\r\n  };\r\n\r\n  onSaveStack = (stack) => {\r\n    const { selectedBoard } = this.props;\r\n    console.log('selectedBoard is:', this.props.selectedBoard);\r\n    this.props.saveStack(stack, selectedBoard);\r\n    this.setState({ isEditShow: false });\r\n  };\r\n\r\n  // componentDidUpdate() {\r\n  //   this.loadBoard();\r\n  // }\r\n\r\n  // loadBoard = () => {\r\n  //   const { selectedBoard } = this.props;\r\n  //   this.props.setSelectedBoard(selectedBoard);\r\n  // };\r\n\r\n  onAddCard = () => {\r\n    this.setState({ isAddShow: true });\r\n  };\r\n\r\n  onCloseAddSection = () => {\r\n    this.setState({ isAddShow: false });\r\n  };\r\n\r\n  onAddNewCard = (cardToadd) => {\r\n    const { stack, selectedBoard } = this.props;\r\n    this.onCloseAddSection();\r\n    // const board = boardService.addCard(cardToadd, stack, selectedBoard);\r\n    // console.log(board);\r\n    this.props.addCard(cardToadd, stack, selectedBoard);\r\n  };\r\n\r\n  render() {\r\n    const { stack } = this.props;\r\n    return (\r\n      <Draggable draggableId={stack.id} index={this.props.index}>\r\n        {(provided) => (\r\n          <div\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n            {...provided.dragHandleProps}\r\n            className=\"stack-preview-card card-list\"\r\n          >\r\n            <div className=\"stack-title flex\">\r\n              {this.state.isEditShow ? (\r\n                <EditStack\r\n                  className=\"stack-preview-edit flex\"\r\n                  saveStack={this.onSaveStack}\r\n                  stack={stack}\r\n                />\r\n              ) : (\r\n                <div className=\"flex space-between align-center\">\r\n                  <h4 onClick={this.onEdit} className=\"stack-title-words\">\r\n                    {stack.title}\r\n                  </h4>\r\n                  <div onClick={this.onRemoveStack} className=\"flex\">\r\n                    <DeleteIcon className=\"stack-preview-delete-icon\"></DeleteIcon>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <CardList stack={stack} cards={stack.cards} />\r\n            {this.state.isAddShow ? (\r\n              <AddCard\r\n                addNewCard={this.onAddNewCard}\r\n                closeAddSection={this.onCloseAddSection}\r\n              />\r\n            ) : (\r\n              <div\r\n                onClick={this.onAddCard}\r\n                className=\"add-new-card flex align-center\"\r\n              >\r\n                <div className=\"add-icon flex justify-center align-center\">\r\n                  <AddIcon></AddIcon>\r\n                </div>\r\n                <span className=\"add-text flex justify-center align-center\">\r\n                  Add Another Card\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedBoard: state.boardModule.selectedBoard,\r\n    boards: state.boardModule.boards,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  removeStack,\r\n  setSelectedBoard,\r\n  saveStack,\r\n  addCard,\r\n  updateBoard,\r\n};\r\n\r\nexport const StackPreview = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_StackPreview);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\MembersList.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\EditStack.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\LinearProgressWithLabel.jsx",["267","268"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport function LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value\r\n        )}%`}</Typography>\r\n      </Box>\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\TodoPreview.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\CardList.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\AddCard.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\CardPreview.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\EditCard.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\cloudinaryService.js",[],{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":11,"column":40,"nodeType":"275","messageId":"276","endLine":11,"endColumn":78},{"ruleId":"277","severity":1,"message":"278","line":5,"column":8,"nodeType":"279","messageId":"280","endLine":5,"endColumn":18},{"ruleId":"277","severity":1,"message":"281","line":6,"column":8,"nodeType":"279","messageId":"280","endLine":6,"endColumn":15},{"ruleId":"277","severity":1,"message":"282","line":7,"column":8,"nodeType":"279","messageId":"280","endLine":7,"endColumn":16},{"ruleId":"277","severity":1,"message":"283","line":16,"column":11,"nodeType":"279","messageId":"280","endLine":16,"endColumn":22},{"ruleId":"277","severity":1,"message":"284","line":3,"column":10,"nodeType":"279","messageId":"280","endLine":3,"endColumn":18},{"ruleId":"277","severity":1,"message":"285","line":9,"column":10,"nodeType":"279","messageId":"280","endLine":9,"endColumn":20},{"ruleId":"277","severity":1,"message":"286","line":6,"column":8,"nodeType":"279","messageId":"280","endLine":6,"endColumn":24},{"ruleId":"277","severity":1,"message":"287","line":7,"column":8,"nodeType":"279","messageId":"280","endLine":7,"endColumn":16},{"ruleId":"288","severity":1,"message":"289","line":83,"column":19,"nodeType":"290","endLine":83,"endColumn":36},{"ruleId":"277","severity":1,"message":"291","line":5,"column":10,"nodeType":"279","messageId":"280","endLine":5,"endColumn":22},{"ruleId":"292","severity":1,"message":"293","line":15,"column":42,"nodeType":"294","messageId":"295","endLine":15,"endColumn":44},{"ruleId":"277","severity":1,"message":"296","line":5,"column":20,"nodeType":"279","messageId":"280","endLine":5,"endColumn":28},{"ruleId":"277","severity":1,"message":"297","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":26},{"ruleId":"277","severity":1,"message":"298","line":4,"column":8,"nodeType":"279","messageId":"280","endLine":4,"endColumn":16},{"ruleId":"277","severity":1,"message":"299","line":36,"column":13,"nodeType":"279","messageId":"280","endLine":36,"endColumn":17},{"ruleId":"277","severity":1,"message":"300","line":17,"column":17,"nodeType":"279","messageId":"280","endLine":17,"endColumn":28},{"ruleId":"277","severity":1,"message":"301","line":23,"column":15,"nodeType":"279","messageId":"280","endLine":23,"endColumn":20},{"ruleId":"277","severity":1,"message":"302","line":13,"column":10,"nodeType":"279","messageId":"280","endLine":13,"endColumn":22},{"ruleId":"277","severity":1,"message":"303","line":14,"column":10,"nodeType":"279","messageId":"280","endLine":14,"endColumn":23},{"ruleId":"277","severity":1,"message":"304","line":2,"column":8,"nodeType":"279","messageId":"280","endLine":2,"endColumn":17},{"ruleId":"277","severity":1,"message":"285","line":3,"column":10,"nodeType":"279","messageId":"280","endLine":3,"endColumn":20},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","no-unused-vars","'SearchIcon' is defined but never used.","Identifier","unusedVar","'AddIcon' is defined but never used.","'InfoIcon' is defined but never used.","'searchClass' is assigned a value but never used.","'eventBus' is defined but never used.","'makeStyles' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'clientsClaim' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'onRemove' is assigned a value but never used.","'Component' is defined but never used.","'MenuIcon' is defined but never used.","'card' is assigned a value but never used.","'isTeamShows' is assigned a value but never used.","'value' is assigned a value but never used.","'boardService' is defined but never used.","'socketService' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> daed10b39ec8fe7d6800f61ec76127f6cd298e39
