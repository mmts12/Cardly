[{"/Users/moonay23/Dev/sprint 4/Cardly/src/index.js":"1","/Users/moonay23/Dev/sprint 4/Cardly/src/reportWebVitals.js":"2","/Users/moonay23/Dev/sprint 4/Cardly/src/serviceWorkerRegistration.js":"3","/Users/moonay23/Dev/sprint 4/Cardly/src/store/store.js":"4","/Users/moonay23/Dev/sprint 4/Cardly/src/App.jsx":"5","/Users/moonay23/Dev/sprint 4/Cardly/src/store/reducers/boardReducer.js":"6","/Users/moonay23/Dev/sprint 4/Cardly/src/store/reducers/userReducer.js":"7","/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/boardActions.js":"8","/Users/moonay23/Dev/sprint 4/Cardly/src/routes.js":"9","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/Header.jsx":"10","/Users/moonay23/Dev/sprint 4/Cardly/src/services/misc/socketService.js":"11","/Users/moonay23/Dev/sprint 4/Cardly/src/services/boardService.js":"12","/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/userActions.js":"13","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Login.jsx":"14","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Home.jsx":"15","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/About.jsx":"16","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/SignUp.jsx":"17","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/CardlyApp.jsx":"18","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Board.jsx":"19","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardDetails.jsx":"20","/Users/moonay23/Dev/sprint 4/Cardly/src/services/misc/utilService.js":"21","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddBoard.jsx":"22","/Users/moonay23/Dev/sprint 4/Cardly/src/services/eventBusService.js":"23","/Users/moonay23/Dev/sprint 4/Cardly/src/services/userService.js":"24","/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/cardActions.js":"25","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx":"26","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx":"27","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx":"28","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx":"29","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx":"30","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardImg.jsx":"31","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx":"32","/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/stackActions.js":"33","/Users/moonay23/Dev/sprint 4/Cardly/src/services/storageSession.js":"34","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StackList.jsx":"35","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StatusBar.jsx":"36","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddStack.jsx":"37","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/BoardPreview.jsx":"38","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/ChecklistPreview.jsx":"39","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/CardDetailsButton.jsx":"40","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CheckListPopup.jsx":"41","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/MembersPopup.jsx":"42","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CoverPopup.jsx":"43","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/LabelsPopup.jsx":"44","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/AttachmentPopup.jsx":"45","/Users/moonay23/Dev/sprint 4/Cardly/src/services/httpService.js":"46","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/DueDatePopup.jsx":"47","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StackPreview.jsx":"48","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/MembersList.jsx":"49","/Users/moonay23/Dev/sprint 4/Cardly/src/services/cloudinaryService.js":"50","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/EditStack.jsx":"51","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/TodoPreview.jsx":"52","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/LinearProgressWithLabel.jsx":"53","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/DateAndTimePickers.jsx":"54","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddCard.jsx":"55","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardList.jsx":"56","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardPreview.jsx":"57","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/EditCard.jsx":"58"},{"size":988,"mtime":1610544545093,"results":"59","hashOfConfig":"60"},{"size":364,"mtime":1610544545094,"results":"61","hashOfConfig":"60"},{"size":5064,"mtime":1610544545094,"results":"62","hashOfConfig":"60"},{"size":504,"mtime":1610544545096,"results":"63","hashOfConfig":"60"},{"size":1094,"mtime":1610655510624,"results":"64","hashOfConfig":"60"},{"size":925,"mtime":1611141087175,"results":"65","hashOfConfig":"60"},{"size":673,"mtime":1611052131883,"results":"66","hashOfConfig":"60"},{"size":1723,"mtime":1611326113286,"results":"67","hashOfConfig":"60"},{"size":775,"mtime":1611409044696,"results":"68","hashOfConfig":"60"},{"size":3772,"mtime":1611405101722,"results":"69","hashOfConfig":"60"},{"size":1570,"mtime":1611233312731,"results":"70","hashOfConfig":"60"},{"size":6226,"mtime":1611326113286,"results":"71","hashOfConfig":"60"},{"size":1699,"mtime":1611052131883,"results":"72","hashOfConfig":"60"},{"size":4345,"mtime":1611131132954,"results":"73","hashOfConfig":"60"},{"size":2186,"mtime":1611401451658,"results":"74","hashOfConfig":"60"},{"size":114,"mtime":1610544545093,"results":"75","hashOfConfig":"60"},{"size":5370,"mtime":1611052131881,"results":"76","hashOfConfig":"60"},{"size":2069,"mtime":1611246684334,"results":"77","hashOfConfig":"60"},{"size":3415,"mtime":1611326113294,"results":"78","hashOfConfig":"60"},{"size":10763,"mtime":1611425701877,"results":"79","hashOfConfig":"60"},{"size":655,"mtime":1610544545095,"results":"80","hashOfConfig":"60"},{"size":3220,"mtime":1611324221966,"results":"81","hashOfConfig":"60"},{"size":395,"mtime":1611080805465,"results":"82","hashOfConfig":"60"},{"size":1558,"mtime":1611052131883,"results":"83","hashOfConfig":"60"},{"size":2311,"mtime":1611409044696,"results":"84","hashOfConfig":"60"},{"size":1935,"mtime":1611256645157,"results":"85","hashOfConfig":"60"},{"size":466,"mtime":1610908335455,"results":"86","hashOfConfig":"60"},{"size":881,"mtime":1611315525443,"results":"87","hashOfConfig":"60"},{"size":1137,"mtime":1611326113279,"results":"88","hashOfConfig":"60"},{"size":3387,"mtime":1611415894728,"results":"89","hashOfConfig":"60"},{"size":754,"mtime":1611409044695,"results":"90","hashOfConfig":"60"},{"size":4932,"mtime":1611429670426,"results":"91","hashOfConfig":"60"},{"size":1787,"mtime":1611326113287,"results":"92","hashOfConfig":"60"},{"size":540,"mtime":1611080805465,"results":"93","hashOfConfig":"60"},{"size":2513,"mtime":1611326113278,"results":"94","hashOfConfig":"60"},{"size":1458,"mtime":1611316665457,"results":"95","hashOfConfig":"60"},{"size":1495,"mtime":1611326113277,"results":"96","hashOfConfig":"60"},{"size":894,"mtime":1611152650283,"results":"97","hashOfConfig":"60"},{"size":2829,"mtime":1611326113280,"results":"98","hashOfConfig":"60"},{"size":396,"mtime":1610908335454,"results":"99","hashOfConfig":"60"},{"size":1202,"mtime":1611326113281,"results":"100","hashOfConfig":"60"},{"size":1113,"mtime":1611326113285,"results":"101","hashOfConfig":"60"},{"size":2275,"mtime":1611326113281,"results":"102","hashOfConfig":"60"},{"size":2269,"mtime":1611326113282,"results":"103","hashOfConfig":"60"},{"size":2485,"mtime":1611326113281,"results":"104","hashOfConfig":"60"},{"size":1039,"mtime":1611052131882,"results":"105","hashOfConfig":"60"},{"size":1146,"mtime":1611409044695,"results":"106","hashOfConfig":"60"},{"size":4522,"mtime":1611409044694,"results":"107","hashOfConfig":"60"},{"size":1086,"mtime":1611071614740,"results":"108","hashOfConfig":"60"},{"size":616,"mtime":1611053824603,"results":"109","hashOfConfig":"60"},{"size":996,"mtime":1610959895493,"results":"110","hashOfConfig":"60"},{"size":744,"mtime":1611256645157,"results":"111","hashOfConfig":"60"},{"size":668,"mtime":1611326113280,"results":"112","hashOfConfig":"60"},{"size":772,"mtime":1611409044694,"results":"113","hashOfConfig":"60"},{"size":1155,"mtime":1611326113276,"results":"114","hashOfConfig":"60"},{"size":969,"mtime":1611409044693,"results":"115","hashOfConfig":"60"},{"size":5336,"mtime":1611409044694,"results":"116","hashOfConfig":"60"},{"size":1045,"mtime":1610959895492,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"1y4hatr",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"120"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"120"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"120"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"120"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"120"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},"/Users/moonay23/Dev/sprint 4/Cardly/src/index.js",[],["254","255"],"/Users/moonay23/Dev/sprint 4/Cardly/src/reportWebVitals.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/serviceWorkerRegistration.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/store.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/App.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/reducers/boardReducer.js",["256"],"const initialState = {\n    boards: [],\n    selectedBoard: {}\n}\n\nexport function boardReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_BOARDS':\n            return { ...state, boards: action.boards }\n        case 'ADD_BOARD':\n            return { ...state, boards: [, ...state.boards, action.boardAdded], selectedBoard: action.boardAdded }\n        case 'SET_BOARD':\n            return { ...state, selectedBoard: action.board }\n        case 'DELETE_BOARD':\n            return {\n                ...state,\n                boards: state.boards.filter(board => board._id !== action.boardId)\n            }\n        case 'UPDATE_BOARD':\n            return {\n                ...state,\n                boards: state.boards.map(board => (board._id === action.board._id) ? action.board : board),\n                selectedBoard: action.board\n            }\n        default:\n            return state\n    }\n}","/Users/moonay23/Dev/sprint 4/Cardly/src/store/reducers/userReducer.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/boardActions.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/routes.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/Header.jsx",["257","258","259","260"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport InfoIcon from '@material-ui/icons/Info';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { connect } from 'react-redux';\nimport { logout } from './../store/actions/userActions.js';\n\nexport class _Header extends Component {\n  state = {};\n\n  onOpenSearch() {\n    const searchClass = 'not-searched' ? 'searching-now' : 'not-searched';\n  }\n\n  render() {\n    const { loggedInUser } = this.props;\n    let initials = 'G';\n    if (loggedInUser) {\n      initials =\n        loggedInUser.fullname.substring(0, 1) +\n        loggedInUser.fullname.charAt(loggedInUser.fullname.indexOf(' ') + 1);\n    }\n    return (\n      <div className=\"header-wrapper\">\n        <div className=\"header-left\">\n          <Link to=\"/\">\n            <button className=\"btn1\">\n              <span className=\"btn1-span\">\n                <span className=\"header-icon\">\n                  <HomeIcon></HomeIcon>\n                </span>\n              </span>\n            </button>\n          </Link>\n          <Link to=\"/Cardly\">\n            <button className=\"btn1\">\n              <span className=\"header-icon\">\n                <DashboardIcon></DashboardIcon>\n              </span>\n              <span className=\"header-icon-word\">Boards</span>\n            </button>\n          </Link>\n          {/* <form className=\"header-input flex\">\n            <label hidden>Search Bar</label>\n            <input type=\"text\" />\n            <div className={this.searchClass} onClick={this.onOpenSearch}>\n              <div className=\"header-icon\">\n                <SearchIcon></SearchIcon>\n              </div>\n            </div>\n          </form> */}\n        </div>\n        <button className=\"logo-wrapper\">\n          <Link to=\"/\">\n            <span className=\"logo\">Cardly</span>\n          </Link>\n        </button>\n        <div className=\"header-right\">\n          {/* <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <AddIcon></AddIcon>\n              </span>\n            </div>\n          </button> */}\n          {/* <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <InfoIcon></InfoIcon>\n              </span>\n            </div>\n          </button> */}\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <NotificationsIcon></NotificationsIcon>\n              </span>\n            </div>\n          </button>\n\n          {loggedInUser ? (\n            <div className=\"flex\">\n              {/* Welcome {loggedInUser.fullname} */}\n              <Link to=\"/\">\n                <button className=\"btn1\" onClick={this.props.logout}>\n                  {' '}\n                  <span className=\"header-icon-word\">Logout</span>\n                </button>\n              </Link>\n            </div>\n          ) : (\n            <Link to=\"/login\">\n              <button className=\"btn1\">\n                <span className=\"header-icon-word\">Login</span>\n              </button>\n            </Link>\n          )}\n          <div className=\"header-avatar\"> <button className=\"header-username pointer\">{initials}</button></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedInUser: state.userModule.loggedInUser,\n  };\n};\nconst mapDispatchToProps = {\n  logout,\n};\n\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/services/misc/socketService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/services/boardService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/userActions.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Login.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Home.jsx",["261"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport function Home() {\n  return (\n    <section className=\"hero\">\n      <div className=\"home-container\">\n        <div className=\"home-content\">\n          <div className=\"home-words\">\n            <h1>Cardly</h1>\n            <p className=\"p1\">Get your work organized just how you like it.</p>\n            <p className=\"p2\">Cardly's boards, lists, and cards enable teams to organize and prioritize projects in a fun, flexible, and rewarding way.</p>\n            <div className=\"btn\">\n            <Link to=\"/Cardly\">\n              <button className=\"home-btn\">Get Started</button>\n            </Link>\n          </div>\n          </div>\n          <div className=\"home-img\">\n            <img src=\"https://res.cloudinary.com/drak3llqt/image/upload/v1611398666/undraw_teamwork_hpdk_qoijno.svg\" className=\"cardly-img\" />\n          </div>\n          \n        </div>\n      </div>\n      <footer className=\"home-footer flex space-between\">\n        <Link to=\"/\">\n          <button className=\"btn1\">\n            <span className=\"btn1-span\">about us</span>\n          </button>\n        </Link>\n        <p className=\"footer-p\">coffeerights 2021</p>\n      </footer>\n    </section>\n  )\n}\n\n// export function Home() {\n//   return (\n//     <section className=\"home-page flex column justify-center align-center\">\n//       <div className=\"home-container\">\n//         <div className=\"home-title\">Cardly</div>\n//         <p className=\"home-slogan\">\n//           Get your work organized just how you like it\n//       </p>\n//         <p className=\"subtitle\">Cardly's boards, lists, and cards enable teams to organize and prioritize projects in a fun, flexible, and rewarding way.</p>\n//         <Link to=\"/Cardly\">\n//           <button className=\"home-btn\">Get Started</button>\n//         </Link>\n//       </div>\n//       <footer className=\"home-footer flex space-between\">\n//         <Link to=\"/\">\n//           <button className=\"btn1\">\n//             <span className=\"btn1-span\">about us</span>\n//           </button>\n//         </Link>\n//         <p className=\"footer-p\">coffeerights 2021</p>\n//       </footer>\n//     </section>\n//   );\n// }\n","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/About.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/pages/SignUp.jsx",["262","263"],"import React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { signup } from '../store/actions/userActions.js';\n\nexport class _SignUp extends Component {\n  state = {\n    user: {\n      firstname: '',\n      lastname: '',\n      username: '',\n      password: '',\n      isGuest: false,\n      cards: [],\n      imgUrl: '',\n    },\n    msg: '',\n  };\n  handleInput = (ev) => {\n    ev.preventDefault();\n    const { user } = this.state;\n    const name = ev.target.name;\n    const value = ev.target.value;\n    user[name] = value;\n    this.setState({ user });\n  };\n\n  onSubmit = (ev) => {\n    ev.preventDefault();\n    const { user } = this.state;\n    const fullname = user.firstname + ' ' + user.lastname;\n    delete user.firstname;\n    delete user.lastname;\n    user.fullname = fullname;\n    const { username, password } = user;\n    if (!username || !password || !fullname) {\n      return this.setState({ msg: 'All inputs are required' }, () =>\n        console.log(this.state.msg)\n      );\n    }\n    this.props.signup(user).then(() => this.props.history.push('/cardly'));\n  };\n  render() {\n    const classes = makeStyles((theme) => ({\n      paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      },\n      avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n      },\n      form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n      },\n      submit: {\n        margin: theme.spacing(3, 0, 2),\n      },\n    }));\n    return (\n      <div className=\"main-signup\">\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <div className=\"flex column center\">\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <form className={classes.form} onSubmit={this.onSubmit} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"fname\"\n                    name=\"firstname\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstname\"\n                    label=\"First Name\"\n                    autoFocus\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"lastname\"\n                    label=\"Last Name\"\n                    name=\"lastname\"\n                    autoComplete=\"lname\"\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"username\"\n                    name=\"username\"\n                    autoComplete=\"username\"\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={this.handleInput}\n                  />\n                  {this.state.msg && <label>{this.state.msg}</label>}\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign Up\n              </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"#/login\" variant=\"body2\">\n                    Already have an account? Log in\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          <Box mt={5}></Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = {\n  signup,\n};\n\nexport const SignUp = connect(mapStateToProps, mapDispatchToProps)(_SignUp);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/CardlyApp.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Board.jsx",["264"],"import React, { Component } from 'react';\nimport { StackList } from './../cmps/StackList';\nimport { setSelectedBoard, updateBoard } from '../store/actions/boardActions';\nimport { addStack } from '../store/actions/stackActions';\nimport { connect } from 'react-redux';\nimport { AddStack } from '../cmps/AddStack';\nimport { StatusBar } from '../cmps/StatusBar';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { socketService } from '../services/misc/socketService';\n\nexport class _Board extends Component {\n  state = {\n    isAddStack: false,\n  };\n\n  componentDidMount() {\n    this.loadBoard();\n    socketService.setup(); //on the road\n    socketService.emit('join board', this.props.match.params.id); //notify server i joined the lane\n    socketService.on('update board', this.handleUpdateBoard); // let me know on every change\n  }\n\n  componentWillUnmount() {\n    socketService.terminate();\n  }\n\n  handleUpdateBoard = (board) => {\n    this.props.updateBoard(board); //call action\n  };\n\n  loadBoard() {\n    const boardId = this.props.match.params.id;\n    this.props.setSelectedBoard(boardId);\n  }\n\n  onAddSection = () => {\n    this.setState({ isAddStack: true });\n  };\n\n  onCloseAddSection = () => {\n    this.setState({ isAddStack: false });\n  };\n\n  onAddNewStack = (stack) => {\n    const { selectedBoard } = this.props;\n    this.props\n      .addStack(stack, selectedBoard)\n      .then(() => this.setState({ isAddStack: false }));\n  };\n\n  render() {\n    // const classes = makeStyles((theme) => ({\n    //   root: {\n    //     display: 'flex',\n    //     '& > * + *': {\n    //       marginLeft: theme.spacing(2),\n    //     },\n    //   },\n    // }));\n    const { selectedBoard } = this.props;\n    let style = { backgroundColor: 'white' };\n    if (!selectedBoard) return <CircularProgress />;\n    if (selectedBoard.style) {\n      const bgc = selectedBoard.style.bgc;\n      style = bgc.startsWith('#')\n        ? { backgroundColor: bgc }\n        : { backgroundImage: `url(${bgc})` };\n    }\n    // const boardTitle = selectedBoard ? selectedBoard.title : '';\n    return (\n      <section className=\"board-container\" style={style}>\n        <StatusBar />\n\n        <div className=\"board-inner mt flex column\">\n          <div className=\"stack-container flex \">\n            {selectedBoard && <StackList board={selectedBoard} />}\n            <div className=\"add-new-stack\">\n              <button\n                className=\"board-open-modal-btn\"\n                onClick={this.onAddSection}\n              >\n                <span className=\"board-icon\">\n                  <AddIcon></AddIcon>\n                </span>\n                <span className=\"btn1-span\">Add another list</span>\n              </button>\n              {this.state.isAddStack && (\n                <AddStack\n                  addNewStack={this.onAddNewStack}\n                  closeAddSection={this.onCloseAddSection}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  setSelectedBoard,\n  addStack,\n  updateBoard,\n};\n\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardDetails.jsx",["265"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { eventBus } from '../services/eventBusService.js';\nimport { utilService } from '../services/misc/utilService.js';\nimport { CardSideBar } from './cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx';\nimport { CardDescription } from './cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx';\nimport { CardActivity } from './cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx';\nimport { CardLabels } from './cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx';\nimport { CardChecklist } from './cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx';\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx';\nimport { saveCard } from '../store/actions/cardActions.js';\nimport { CardImg } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/CardImg.jsx';\nimport { loadUsers } from '../store/actions/userActions.js';\nimport { userService } from '../services/userService';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\n\nexport class _CardDetails extends Component {\n  state = {\n    card: {\n      comments: [],\n      labels: [],\n      checklists: [],\n      coverColor: '',\n      members: [],\n      dueDate: '',\n    },\n    boardUsers: [],\n    loggedUser: {},\n  };\n\n  componentDidMount() {\n    const { card } = this.props;\n    const boardUsers = this.props.selectedBoard.members;\n    let loggedUser = userService.getLoggedinUser();\n    if (!loggedUser) {\n      loggedUser = { fullname: 'Guest' };\n      console.log('loggedUser is:', loggedUser);\n    }\n    this.setState({ loggedUser });\n    this.setState({ card });\n    this.setState({ boardUsers });\n  }\n\n  onMemberAdd = (user) => {\n    let { card } = this.state;\n    let { loggedUser } = this.state;\n\n    const memberIndx = card.members.findIndex(\n      (member) => member._id === user._id\n    );\n    if (memberIndx === -1) {\n      card.members.push(user);\n      card.comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${loggedUser.fullname} added ${user.fullname} to this card`,\n      });\n    } else {\n      card.comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${loggedUser.fullname} removed ${user.fullname} from this card`,\n      });\n      card.members.splice(memberIndx, 1);\n    }\n    this.setState({ card }, () => {\n      this.props.saveCard(\n        this.state.card,\n        this.props.stack,\n        this.props.selectedBoard\n      );\n    });\n  };\n\n  setLabelOnCard = (color) => {\n    const { card } = this.state;\n    let { comments } = card;\n    // const { loggedUser } = this.state;\n    const colorIndx = card.labels.findIndex(\n      (labelColor) => labelColor === color\n    );\n    if (colorIndx === -1) {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} added card label color`,\n      });\n      card.labels.push(color);\n    } else {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} removed card label color`,\n      });\n      card.labels.splice(colorIndx, 1);\n    }\n    this.setState({ card, comments }, () => {\n      console.log('this.state.card is:', this.state.card);\n      this.props.saveCard(\n        this.state.card,\n        this.props.stack,\n        this.props.selectedBoard\n      );\n    });\n  };\n\n  setCardColor = (color) => {\n    let { card } = this.state;\n    let { comments } = card;\n    if (card.coverColor === color) {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} removed card cover color`,\n      });\n      card.coverColor = '';\n    } else {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} added card cover color`,\n      });\n      card.coverColor = color;\n    }\n    this.setState({ card, comments }, () => {\n      this.props.saveCard(\n        this.state.card,\n        this.props.stack,\n        this.props.selectedBoard\n      );\n    });\n  };\n\n  addChecklist = (checklistName) => {\n    const { card } = this.state;\n    let { comments } = card;\n    let checkListItem = {\n      id: utilService.makeId(),\n      title: checklistName,\n      todos: [],\n      createdAt: Date.now(),\n    };\n    comments.unshift({\n      id: utilService.makeId(),\n      createdAt: Date.now(),\n      txt: `${this.state.loggedUser.fullname} added checklist - ${checklistName}`,\n    });\n    card.checklists.push(checkListItem);\n    this.setState({ card });\n  };\n\n  updateChecklist = (checklist) => {\n    const { card } = this.state;\n    const checklistsToAdd = card.checklists.map((currChecklist) =>\n      currChecklist.id === checklist.id ? checklist : currChecklist\n    );\n    card.checklists = checklistsToAdd;\n    this.props.saveCard(card, this.props.stack, this.props.selectedBoard);\n  };\n\n  onRemoveTodo = (todoId, checklists) => {\n    const { card } = this.state;\n    const copyChecklists = { ...checklists };\n    const { todos } = copyChecklists;\n    const filteredTodos = todos.filter((todo) => todo.id !== todoId);\n    copyChecklists.todos = filteredTodos;\n    const filteredChecklists = card.checklists.map((currChecklist) =>\n      currChecklist.id === copyChecklists.id ? copyChecklists : currChecklist\n    );\n    card.checklists = filteredChecklists;\n    this.props.saveCard(card, this.props.stack, this.props.selectedBoard);\n  };\n\n  onClosePopUps = () => {\n    // eventBus.emit('close');\n  };\n\n  deleteChecklist = (checklistId) => {\n    const { card } = this.state;\n    const { stack, selectedBoard } = this.props;\n    let { comments } = card;\n    const currChecklistIdx = card.checklists.findIndex(\n      (cl) => cl.id === checklistId\n    );\n    const checklistName = card.checklists[currChecklistIdx].title;\n    card.checklists.splice(currChecklistIdx, 1);\n    comments.unshift({\n      id: utilService.makeId(),\n      createdAt: Date.now(),\n      txt: `${this.state.loggedUser.fullname} deleted checklist - ${checklistName}`,\n    });\n\n    this.setState({ card });\n    this.props.saveCard(card, stack, selectedBoard);\n  };\n\n  addComment = (comment) => {\n    const { card } = this.state;\n    card.comments.unshift({\n      id: utilService.makeId(),\n      createdBy: this.state.loggedUser,\n      createdAt: Date.now(),\n      txt: `${this.state.loggedUser.fullname} added comment - ${comment}`,\n    });\n    this.setState({ card });\n  };\n  onRemoveImage = (card) => {\n    const { stack, selectedBoard } = this.props;\n    console.log('Remove IMG');\n    const copyCard = { ...card };\n    copyCard.imgUrl = '';\n    console.log(copyCard);\n    this.props.saveCard(copyCard, stack, selectedBoard);\n  };\n\n  onRemoveImage = (card) => {\n    const { stack, selectedBoard } = this.props;\n    console.log('Remove IMG');\n    const copyCard = { ...card };\n    copyCard.imgUrl = '';\n    console.log(copyCard);\n    this.props.saveCard(copyCard, stack, selectedBoard);\n  };\n\n  onSetDueDate = (dueDate) => {\n    const { stack, selectedBoard } = this.props;\n    const { card } = this.state;\n    card.dueDate = dueDate;\n    this.setState({ card }, () => {\n      this.props.saveCard(card, stack, selectedBoard);\n    });\n  };\n\n  render() {\n    const { card, onCloseModal, stack } = this.props;\n    const { checklists } = this.state.card;\n    const labels = this.state.card.labels;\n    const cardMembers = this.state.card.members;\n    const { dueDate } = this.state.card;\n    return (\n      <>\n        <div className=\"modal-bg\" onClick={(ev) => onCloseModal(ev)}></div>\n        <main>\n          <section\n            onClick={this.onClosePopUps}\n            className=\"card-details-container\"\n          >\n            <div\n              className=\"card-details-cover\"\n              style={{ background: `${this.state.card.coverColor}` }}\n            >\n              <CloseIcon\n                className=\"close-cd\"\n                onClick={(ev) => onCloseModal(ev)}\n              />\n            </div>\n\n            <div className=\"card-details-body\">\n              <div className=\"card-details-top\">\n                <h2 className=\"card-details-title\">{card.title}</h2>\n                <p className=\"card-details-list\">\n                  in list <span className=\"list-fake-link\">{stack.title}</span>\n                </p>\n              </div>\n              <div className=\"details-list-container flex\">\n\n\n                <div className=\"column-container flex column\">\n                  {/* CARD LABELS */}\n                  {labels.length !== 0 && (\n                    <CardLabels className=\"labels-txt\" labels={labels} />\n                  )}\n                  {dueDate && (\n                    <div>\n                      <ScheduleIcon />\n                      <p>{dueDate}</p>\n                    </div>\n                  )}\n                  {cardMembers.length !== 0 && (\n                    <MembersAvatar users={cardMembers} />\n                  )}\n                  <CardDescription card={card} />\n                  {card.imgUrl && (\n                    <CardImg onRemoveImage={this.onRemoveImage} card={card} />\n                  )}\n                  {checklists.length !== 0 && (\n                    <CardChecklist\n                      updateChecklist={this.updateChecklist}\n                      onRemoveTodo={this.onRemoveTodo}\n                      onRemove={this.deleteChecklist}\n                      checklists={checklists}\n                    />\n                  )}\n                </div>\n                <div className=\"sidebar-wrapper flex column\">\n                  <CardSideBar\n                    onSetDueDate={this.onSetDueDate}\n                    card={card}\n                    stack={stack}\n                    onMemberAdd={this.onMemberAdd}\n                    boardUsers={this.state.boardUsers}\n                    onCheckListSelect={this.addChecklist}\n                    onCoverColorSelect={this.setCardColor}\n                    onLabelColorSelect={this.setLabelOnCard}\n                  />\n                </div>\n               <div className=\"column-container flex column\"><CardActivity card={card} onCommentAdd={this.addComment} /></div>\n\n                \n              </div>\n            \n            </div>\n          </section>\n        </main>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    users: state.userModule.users,\n  };\n};\n\nconst mapDispatchToProps = {\n  saveCard,\n  loadUsers,\n};\n\nexport const CardDetails = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_CardDetails);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/services/misc/utilService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddBoard.jsx",["266"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addBoard } from '../store/actions/boardActions';\nimport { utilService } from './../services/misc/utilService';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nexport class _AddBoard extends Component {\n  state = {\n    board: {\n      activities: [],\n      createdAt: Date.now(),\n      createdBy: {},\n      members: [],\n      stacks: [{ id: utilService.makeId(), cards: [], style: {}, title: '' }],\n      style: {\n        bgc: '',\n        mode: '',\n      },\n      title: '',\n    },\n  };\n\n  handleInput = (ev) => {\n    const { board } = this.state;\n    const { value } = ev.target;\n    board.title = value;\n    this.setState({ board });\n  };\n\n  async onSelectNewBoard(bgc) {\n    const { board } = this.state;\n    if (!board.title) return;\n    board.style.bgc = bgc;\n    this.setState({ board });\n    this.props.addBoard(board);\n    this.props.onCloseAddBoardSection();\n  }\n\n  render() {\n    const bgc = {\n      colors: ['#2e6cb0', '#889BC0', '#A36890', '#F0EFBD'],\n      imgsUrl: [\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1611243032/forest_bjdy6y.png',\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553512/img1_uyzefw.jpg',\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553514/img4_ohr2cl.png',\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553508/img3_g44phk.png',\n      ],\n    };\n    const { onCloseAddBoardSection } = this.props;\n    return (\n      <section className=\"add-board-background\">\n        <div className=\"add-new-board\">\n          <button className=\"clear-btn no-growth flex justify-center align-center\" onClick={onCloseAddBoardSection}><ClearIcon></ClearIcon></button>\n          <form className=\"add-board-form flex align-center justify-center\">\n            <label className=\"add-board-title\">Title:</label>\n            <input\n              className=\"add-board-input\"\n              type=\"text\"\n              name=\"\"\n              onChange={this.handleInput}\n              id=\"\"\n              value={this.state.board.title}\n            />\n          </form>\n          <div className=\" grid\">\n            {bgc.colors.map((color) => {\n              return (\n                <div\n                  onClick={() => this.onSelectNewBoard(color)}\n                  key={color}\n                  className=\"bgc-add-board pointer\"\n                  style={{ backgroundColor: color }}\n                ></div>\n              );\n            })}\n            {bgc.imgsUrl.map((img) => {\n              return (\n                <div\n                  onClick={() => this.onSelectNewBoard(img)}\n                  key={img}\n                  className=\"add-new-board-img pointer\"\n                >\n                  <img src={img} />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        {/* <button>Add </button> */}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    boards: state.boardModule.boards,\n    loggedInUser: state.userModule.loggedInUser,\n  };\n};\n\nconst mapDispatchToProps = {\n  addBoard,\n};\n\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/services/eventBusService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/services/userService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/cardActions.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx",["267"],"import React, { Component } from 'react';\nimport { utilService } from '../../../services/misc/utilService.js';\nimport { ChecklistPreview } from './ChecklistPreview.jsx';\nimport { eventBus } from './../../../services/eventBusService';\n\nexport class CardChecklist extends Component {\n  state = {\n    newTodo: '',\n    todos: [],\n    closeAddTodoSection: false,\n  };\n\n  componentDidMount() {\n    let todos = [];\n    this.props.checklists.map((todoList) => {\n      todos.push(todoList);\n    });\n    this.setState({ todos });\n  }\n\n  handleInput = (ev) => {\n    let { newTodo } = this.state;\n    newTodo = ev.target.value;\n    this.setState({ newTodo });\n  };\n\n  addTodo = (currChecklist) => {\n    currChecklist.todos.push({\n      id: utilService.makeId(),\n      txt: this.state.newTodo,\n      isDone: false,\n      createdAt: Date.now(),\n    });\n    this.setState({ todos: currChecklist.todos });\n    this.props.updateChecklist(currChecklist);\n    eventBus.emit('closeAddSection', false);\n  };\n\n  handleCheckboxTodo = (todoId, checklist) => {\n    const { ...copyChecklist } = checklist;\n    const todoToUpdate = copyChecklist.todos.find((todo) => todo.id === todoId);\n    todoToUpdate.isDone = !todoToUpdate.isDone;\n    const checklistToUpdate = copyChecklist.todos.map((todo) =>\n      todo.id === todoToUpdate.id ? todoToUpdate : todo\n    );\n\n    this.props.updateChecklist(checklistToUpdate);\n  };\n\n  render() {\n    const { checklists } = this.props;\n    return (\n      <div>\n        {checklists.map((checklist) => {\n          return (\n            <ChecklistPreview\n              handleCheckboxTodo={this.handleCheckboxTodo}\n              key={checklist.id}\n              checklist={checklist}\n              onRemoveTodo={this.props.onRemoveTodo}\n              handleInput={this.handleInput}\n              addTodo={this.addTodo}\n              onRemove={this.props.onRemove}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx",["268"],"import React, { Component } from 'react';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport { clientsClaim } from 'workbox-core';\nimport { Avatar } from '@material-ui/core';\n\n\n\nexport class CardActivity extends Component {\n\n    state = {\n        comment: '',\n        isActivitySelected: false,\n    }\n\n    componentDidMount() {\n        this.setState({ comment: this.props.comment })\n    }\n\n\n    handleChange = (ev) => {\n        let { comment } = this.state\n        comment = ev.target.value\n        this.setState({ comment })\n    }\n\n    onEditActivity = () => {\n        const { isActivitySelected } = this.state\n        isActivitySelected ? this.setState({ isActivitySelected: false }) : this.setState({ isActivitySelected: true })\n    }\n\n    convertToDate = (timestamp) => {\n        let date = new Date(timestamp).toLocaleString();\n        const dateCopy = date.split('/')\n        const day = dateCopy[0];\n        const month = dateCopy[1];\n        const year = dateCopy[2];\n        return (`${day}/${month}/${year}`)\n    }\n\n    render() {\n        const { card } = this.props\n        return <section className=\"cd-cmp flex column\">\n            <div className=\"card-act-title\">\n                <FormatListBulletedIcon className=\"act-icon\" />\n                <h3 className=\"cd-subtitle-words\">Activity</h3>\n            </div>\n            <div className=\"cd-subtitle-txt\">\n                <div className=\"card-act-textarea\">\n                    <textarea onChange={this.handleChange} className=\"act-textarea\" placeholder=\"Write a comment...\" ></textarea>\n                </div>\n                <div className=\"act-original-save flex space-between align-center\">\n                    <button className=\"save-btn\" onClick={() => this.props.onCommentAdd(this.state.comment)} >Save</button>\n                    <div className=\"activity-bar-icons\" >\n                        <AttachFileIcon className=\"activity-icon\" />\n                        <AlternateEmailIcon className=\"activity-icon\" />\n                    </div>\n                </div>\n\n            </div>\n\n            {card.comments.map(comment => {\n                const fullname = (comment.createdBy) ? comment.createdBy.fullname : '';\n                const initials = fullname.substring(0, 1) + fullname.charAt(fullname.indexOf(' ') + 1)\n                const date = this.convertToDate(comment.createdAt)\n                // console.log('date is:', date);\n                return <div key={comment.id} >\n                    <div className=\"card-activity-container flex\">\n                        {\n                            !initials.length ? <Avatar size=\"10\" src=\"frontend/src/assets/imgs/avatar-person.svg\"></Avatar> :\n                                <Avatar size=\"10\" >{initials}</Avatar>\n                        }\n                        <div className=\"card-activity-row\">\n                            <input className=\"card-details-activity-textarea\" onClick={this.onEditActivity} onChange={this.handleChange} value={comment.txt}></input>\n                            <div className=\"card-activity-date\">{date}</div>\n                        </div>\n                    </div>\n                </div>\n            }\n            )\n            }\n\n        </section >\n    }\n}\n\n\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardImg.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/stackActions.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/services/storageSession.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StackList.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StatusBar.jsx",["269","270"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n// import { setSelectedBoard } from '../store/actions/boardActions';\n\nexport class _StatusBar extends React.Component {\n  state = {\n    selectedBoard: {},\n  };\n  componentDidMount() {\n    const { selectedBoard } = this.props;\n    this.setState({ selectedBoard });\n  }\n\n  render() {\n    const { selectedBoard } = this.props;\n    let members = '';\n    if (!selectedBoard) return <h5>Loading...</h5>;\n    if (selectedBoard.members) {\n      members = selectedBoard.members;\n    }\n    return (\n      <section>\n        <div className='status-bar-container flex space-between align-center' >\n          <div className=\"flex align-center\">\n            <h2 style={{ color: 'white' }} className=\"status-board-title\">{selectedBoard.title}</h2>\n            {members.length !== 0 && <MembersAvatar users={selectedBoard.members} />}\n          </div>\n          <button className=\"btn1 diff-bgc\" onClick={this.onMenuSelect}><span className=\"btn1-span\">Show Menu</span></button>\n\n        </div>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n  };\n};\n\nconst mapDispatchToProps = {};\n\nexport const StatusBar = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StatusBar);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddStack.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/BoardPreview.jsx",["271"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nexport class BoardPreview extends Component {\n  render() {\n    const { board, onRemove } = this.props;\n    const { bgc } = board.style;\n\n    return (\n      <div className=\"board-preview\">\n        {/* <button onClick={() => onRemove(board._id)}>X</button> */}\n        <div\n          className=\"board-preview-image\"\n          style={\n            bgc.startsWith('#')\n              ? { backgroundColor: bgc }\n              : { backgroundImage: `url(${bgc})` }\n          }\n        >\n          <Link to={`./cardly/${board._id}`}>\n            <div className=\"board-preview-card\">\n              <h3 className=\"board-preview-title\">{board.title}</h3>\n            </div>\n          </Link>\n        </div>\n        {/* <div class=\"board-preview-description\">Board Description and Members</div> */}\n      </div>\n    );\n  }\n}\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/ChecklistPreview.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/CardDetailsButton.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CheckListPopup.jsx",["272"],"import React, { Component } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nexport class CheckListPopup extends Component {\n\n    state = {\n        value: 'Checklist'\n    }\n\n    togglePopUp = (ev) => {\n        const { name, onButtonClick } = this.props\n        onButtonClick(name)\n    }\n\n    handleInput = (ev) => {\n        const value = ev.target.value\n        this.setState({ value })\n    }\n\n\n    render() {\n        let { value } = this.state\n        return (\n            <section>\n                <div className=\"pop-up-checklist\">\n                    <CloseIcon\n                        className=\"close-pop-up-btn\"\n                        onClick={(ev) => this.togglePopUp(ev)}\n                    />\n                    <p className=\"pop-up-header\">Add Checklist</p>\n                    <hr></hr>\n                    <div className=\"pop-up-title\">Title</div>\n                    <input autoFocus onChange={this.handleInput} defaultValue=\"Checklist\" className=\"checklist-input\"></input>\n                    <button onClick={() => { this.props.onCheckListSelect(this.state.value) }} className=\"save-btn\">Add</button>\n                </div>\n            </section>\n        )\n    }\n}\n\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/MembersPopup.jsx",["273"],"import React, { Component } from 'react';\nimport { MembersList } from '../MembersList.jsx'\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport class MembersPopup extends Component {\n\n    state = {\n\n    }\n\n    togglePopUp = (ev) => {\n        const { name, onButtonClick } = this.props\n        onButtonClick(name)\n    }\n\n    render() {\n        const { isTeamShows } = this.state\n        const boardUsers = this.props.boardUsers;\n        return (\n            <section className=\"members-container\">\n                <div className=\"pop-up-members\">\n                    <CloseIcon\n                        className=\"close-pop-up-btn\"\n                        onClick={(ev) => this.togglePopUp(ev)}\n                    />\n                    <p className=\"pop-up-header\"> Members</p>\n                    <hr></hr>\n                    <input autoFocus placeholder=\"Search members\" className=\"members-input\"></input>\n                    <p>BOARD MEMBERS</p>\n                    <MembersList onMemberAdd={this.props.onMemberAdd} users={boardUsers} />\n                </div>\n            </section >\n        )\n    }\n}\n\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CoverPopup.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/LabelsPopup.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/AttachmentPopup.jsx",["274"],"import React, { Component } from 'react';\nimport { cloudinaryService } from '../../../services/cloudinaryService.js';\nimport { saveCard } from './../../../store/actions/cardActions';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport class _AttachmentPopup extends Component {\n  state = {\n    card: {},\n    imageUpload: '',\n  };\n  componentDidMount() {\n    const { card } = this.props;\n    this.setState({ card });\n  }\n\n  togglePopUp = (ev) => {\n    const { name, onButtonClick } = this.props;\n    onButtonClick(name);\n  };\n\n  upload = (ev) => {\n    this.setState({ imageUpload: 'Uploading' });\n    cloudinaryService.uploadImg(ev).then((url) => {\n      const { card } = this.state;\n      const { stack, selectedBoard } = this.props;\n      card.imgUrl = url.secure_url;\n      this.setState({ card, imageUpload: '' }, () => {\n        this.props.saveCard(card, stack, selectedBoard);\n      });\n    });\n  };\n\n  render() {\n    const { card, imageUpload } = this.state;\n    return (\n      <section>\n        <div className=\"pop-up-attachments\">\n          <CloseIcon\n            className=\"close-pop-up-btn\"\n            onClick={(ev) => this.togglePopUp(ev)}\n          />\n          <p className=\"pop-up-header\"> Attach From...</p>\n          <hr></hr>\n          <div className=\"attach-choice\">\n            <input\n              id=\"file-upload\"\n              placeholder=\"Computer\"\n              onChange={this.upload}\n              type=\"file\"\n            ></input>\n            <label className=\"pointer\" htmlFor=\"file-upload\">\n              {imageUpload ? <CircularProgress /> : 'Computer'}\n            </label>\n          </div>\n          <p className=\"attach-choice\">Google Drive</p>\n          <p className=\"attach-choice\">DropBox</p>\n          <p className=\"attach-choice\">One Drive</p>\n          <hr></hr>\n          <label className=\"attach-label\">Attach a link</label>\n          <input\n            autoFocus\n            placeholder=\"Paste any link here\"\n            className=\"attach-input\"\n          ></input>\n          <button className=\"pop-up-attach-btn\">Attach</button>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n  };\n};\n\nconst mapDispatchToProps = {\n  saveCard,\n};\n\nexport const AttachmentPopup = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_AttachmentPopup);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/services/httpService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/DueDatePopup.jsx",["275"],"import React, { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { DateAndTimePickers } from './../DateAndTimePickers';\n\nexport class DueDatePopup extends Component {\n  state = {\n    dueDate: '',\n  };\n  togglePopUp = (ev) => {\n    const { name, onButtonClick } = this.props;\n    onButtonClick(name);\n  };\n\n  onSetDate = ({ target }) => {\n    let value = target.value;\n    this.setState({ dueDate: value });\n  };\n\n  onSaveDueDate = () => {\n    const { onSetDueDate } = this.props;\n    const { dueDate } = this.state;\n    onSetDueDate(dueDate);\n    this.togglePopUp();\n  };\n\n  render() {\n    return (\n      <section>\n        <div className=\"pop-up-due-date\">\n          <CloseIcon\n            className=\"close-pop-up-btn\"\n            onClick={(ev) => this.togglePopUp(ev)}\n          />\n          <p className=\"pop-up-header\">Change Due Date</p>\n          <hr></hr>\n          <DateAndTimePickers onSetDate={this.onSetDate} />\n          <button className=\"save-btn\" onClick={this.onSaveDueDate}>\n            Save\n          </button>\n        </div>\n      </section>\n    );\n  }\n}\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StackPreview.jsx",["276","277"],"import React, { Component } from 'react';\nimport { CardList } from './CardList';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { connect } from 'react-redux';\nimport { removeStack, saveStack } from '../store/actions/stackActions.js';\nimport { addCard } from '../store/actions/cardActions';\nimport { updateBoard, setSelectedBoard } from '../store/actions/boardActions';\nimport { EditStack } from './EditStack.jsx';\nimport AddIcon from '@material-ui/icons/Add';\nimport { AddCard } from './AddCard';\n// import { boardService } from './../services/boardService';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { boardService } from './../services/boardService';\nimport { socketService } from '../services/misc/socketService';\n\nexport class _StackPreview extends Component {\n  state = {\n    isEditShow: false,\n    isAddShow: false,\n    dragEnable: true,\n  };\n\n  disableStackDrag = () => {\n    this.setState({ dragEnable: false });\n  };\n  allowStackDrag = () => {\n    this.setState({ dragEnable: true });\n  };\n\n  onRemoveStack = () => {\n    const { stack, selectedBoard, removeStack } = this.props;\n    removeStack(stack.id, selectedBoard._id, selectedBoard);\n  };\n\n  onEdit = () => {\n    this.setState({ isEditShow: true });\n  };\n\n  onSaveStack = (stack) => {\n    const { selectedBoard } = this.props;\n    console.log('selectedBoard is:', this.props.selectedBoard);\n    this.props.saveStack(stack, selectedBoard);\n    this.setState({ isEditShow: false });\n  };\n\n  onAddCard = () => {\n    this.setState({ isAddShow: true });\n  };\n\n  onCloseAddSection = () => {\n    this.setState({ isAddShow: false });\n  };\n\n  onAddNewCard = (cardToadd) => {\n    const { stack, selectedBoard } = this.props;\n    this.onCloseAddSection();\n    // const board = boardService.addCard(cardToadd, stack, selectedBoard);\n    // console.log(board);\n    this.props.addCard(cardToadd, stack, selectedBoard);\n  };\n\n  onDragDis = () => {\n    return true;\n  };\n\n  render() {\n    const { stack } = this.props;\n    const { dragEnable } = this.state;\n    return (\n      <>\n        <Draggable\n          isDragDisabled={dragEnable === false}\n          draggableId={stack.id}\n          index={this.props.index}\n        >\n          {(provided) => (\n            <div\n              {...provided.draggableProps}\n              ref={provided.innerRef}\n              {...provided.dragHandleProps}\n              className=\"stack-preview-card card-list\"\n            >\n              <div className=\"stack-title flex\">\n                {this.state.isEditShow ? (\n                  <EditStack\n                    className=\"stack-preview-edit flex\"\n                    saveStack={this.onSaveStack}\n                    stack={stack}\n                  />\n                ) : (\n                  <div className=\"flex space-between align-center\">\n                    <h4 onClick={this.onEdit} className=\"stack-title-words\">\n                      {stack.title}\n                    </h4>\n                    <div onClick={this.onRemoveStack} className=\"flex\">\n                      <DeleteIcon className=\"stack-preview-delete-icon\"></DeleteIcon>\n                    </div>\n                  </div>\n                )}\n              </div>\n              <CardList\n                allowStackDrag={this.allowStackDrag}\n                disableStackDrag={this.disableStackDrag}\n                stack={stack}\n                cards={stack.cards}\n              />\n              {this.state.isAddShow ? (\n                <AddCard\n                  addNewCard={this.onAddNewCard}\n                  closeAddSection={this.onCloseAddSection}\n                />\n              ) : (\n                <div\n                  onClick={this.onAddCard}\n                  className=\"add-new-card flex align-center\"\n                >\n                  <div className=\"add-icon flex justify-center align-center\">\n                    <AddIcon></AddIcon>\n                  </div>\n                  <span className=\"add-text flex justify-center align-center\">\n                    Add Another Card\n                  </span>\n                </div>\n              )}\n            </div>\n          )}\n        </Draggable>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  removeStack,\n  setSelectedBoard,\n  saveStack,\n  addCard,\n  updateBoard,\n};\n\nexport const StackPreview = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StackPreview);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/MembersList.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/services/cloudinaryService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/EditStack.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/TodoPreview.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/LinearProgressWithLabel.jsx",["278","279"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport function LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value\n        )}%`}</Typography>\n      </Box>\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n    </Box>\n  );\n}\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/DateAndTimePickers.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddCard.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardList.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardPreview.jsx",["280","281"],"import React, { Component } from 'react';\nimport { CardDetails } from './CardDetails';\nimport { Link } from 'react-router-dom';\nimport { CardLabels } from './cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { removeCard, saveCard } from '../store/actions/cardActions.js';\nimport { connect } from 'react-redux';\nimport { EditCard } from './EditCard';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\n\nexport class _CardPreview extends Component {\n  state = {\n    isCardDetailsSelected: false,\n    isEditCardModalShow: false,\n    card: {},\n    labels: [],\n  };\n\n  componentDidMount() {\n    const { card } = this.props;\n    const { labels } = this.props.card;\n    this.setState({ card, labels });\n  }\n\n  onShowCardDetails = () => {\n    this.props.disableStackDrag();\n    if (!this.state.isEditCardModalShow)\n      this.setState({ isCardDetailsSelected: true });\n  };\n\n  closeModal = (ev) => {\n    this.props.allowStackDrag();\n    ev.stopPropagation();\n    this.setState({ isCardDetailsSelected: false });\n  };\n\n  onRemoveCard = (cardId) => {\n    const { selectedBoard, stack } = this.props;\n    this.props.removeCard(cardId, stack, selectedBoard);\n  };\n\n  onEditCard = (ev) => {\n    ev.stopPropagation();\n    this.setState({ isEditCardModalShow: true });\n  };\n\n  onSaveEditedCard = (card) => {\n    const { selectedBoard, stack } = this.props;\n    this.props.saveCard(card, stack, selectedBoard);\n    this.setState({ isEditCardModalShow: false });\n  };\n\n  convertTime = () => {\n    const { card } = this.props;\n    console.log(card.dueDate);\n  };\n\n  calcDoneTodos = () => {\n    const { card } = this.props;\n    return card.checklists.reduce(\n      (acc, checklist) => {\n        checklist.todos.map((todo) => {\n          acc.length++;\n          if (todo.isDone) acc.done++;\n        });\n        return acc;\n      },\n      { done: 0, length: 0 }\n    );\n  };\n\n  render() {\n    const todosSummary = this.calcDoneTodos();\n    const { card, stack, index } = this.props;\n    const { coverColor, labels } = this.props.card;\n    const { isCardDetailsSelected, isEditCardModalShow } = this.state;\n    if (!card || !stack) return <h1>loading..</h1>;\n    return (\n      <>\n        <Draggable draggableId={card.id} index={index}>\n          {(provided) => (\n            <div\n              className=\"card-preview\"\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              {\n                card.imgUrl ? (\n                  // {coverColor !== '' && (\n                  <img src={card.imgUrl} alt=\"\" />\n                ) : (\n                    <div\n                      className=\"card-preview-color\"\n                      style={{ background: `${coverColor}` }}\n                    ></div>\n                  )\n                // )}\n              }\n              {labels.length !== 0 && <CardLabels labels={labels} />}\n\n              <div\n                onClick={this.onShowCardDetails}\n                className=\"card-preview-line flex space-between\"\n              >\n                {!isEditCardModalShow ? (\n                  <div className=\"card-preview-icons flex space-between\">\n                    <div>{card.title}</div>\n                    {card.desc && (\n                      <div>\n                        <SubjectIcon />\n                      </div>\n                    )}\n                    {todosSummary.length !== 0 &&\n                      `${todosSummary.done}/${todosSummary.length}`}\n                    {card.dueDate && <ScheduleIcon />}\n\n                    <div className=\"icons-container flex\">\n                      <div onClick={this.onEditCard}>\n                        <span>\n                          <EditIcon className=\"card-preview-edit-icon\"></EditIcon>\n                        </span>\n                      </div>\n                      <div onClick={() => this.onRemoveCard(card.id)}>\n                        <span>\n                          <DeleteIcon className=\"card-preview-edit-icon\"></DeleteIcon>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                ) : (\n                    <EditCard\n                      saveEditedCard={this.onSaveEditedCard}\n                      card={card}\n                    ></EditCard>\n                  )}\n              </div>\n              {card.members.length !== 0 && (\n                <MembersAvatar users={card.members} />\n              )}\n            </div>\n          )}\n        </Draggable>\n        {isCardDetailsSelected && (\n          <CardDetails\n            stack={stack}\n            card={card}\n            onCloseModal={this.closeModal}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  removeCard,\n  saveCard,\n};\n\nexport const CardPreview = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_CardPreview);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/EditCard.jsx",[],["282","283"],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":11,"column":40,"nodeType":"290","messageId":"291","endLine":11,"endColumn":78},{"ruleId":"292","severity":1,"message":"293","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":18},{"ruleId":"292","severity":1,"message":"296","line":6,"column":8,"nodeType":"294","messageId":"295","endLine":6,"endColumn":15},{"ruleId":"292","severity":1,"message":"297","line":7,"column":8,"nodeType":"294","messageId":"295","endLine":7,"endColumn":16},{"ruleId":"292","severity":1,"message":"298","line":16,"column":11,"nodeType":"294","messageId":"295","endLine":16,"endColumn":22},{"ruleId":"299","severity":1,"message":"300","line":20,"column":13,"nodeType":"301","endLine":20,"endColumn":143},{"ruleId":"292","severity":1,"message":"302","line":6,"column":8,"nodeType":"294","messageId":"295","endLine":6,"endColumn":24},{"ruleId":"292","severity":1,"message":"303","line":7,"column":8,"nodeType":"294","messageId":"295","endLine":7,"endColumn":16},{"ruleId":"292","severity":1,"message":"304","line":9,"column":10,"nodeType":"294","messageId":"295","endLine":9,"endColumn":20},{"ruleId":"292","severity":1,"message":"305","line":3,"column":10,"nodeType":"294","messageId":"295","endLine":3,"endColumn":18},{"ruleId":"299","severity":1,"message":"300","line":83,"column":19,"nodeType":"301","endLine":83,"endColumn":36},{"ruleId":"306","severity":1,"message":"307","line":15,"column":42,"nodeType":"308","messageId":"309","endLine":15,"endColumn":44},{"ruleId":"292","severity":1,"message":"310","line":5,"column":10,"nodeType":"294","messageId":"295","endLine":5,"endColumn":22},{"ruleId":"292","severity":1,"message":"311","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":26},{"ruleId":"292","severity":1,"message":"312","line":4,"column":8,"nodeType":"294","messageId":"295","endLine":4,"endColumn":16},{"ruleId":"292","severity":1,"message":"313","line":5,"column":20,"nodeType":"294","messageId":"295","endLine":5,"endColumn":28},{"ruleId":"292","severity":1,"message":"314","line":23,"column":15,"nodeType":"294","messageId":"295","endLine":23,"endColumn":20},{"ruleId":"292","severity":1,"message":"315","line":17,"column":17,"nodeType":"294","messageId":"295","endLine":17,"endColumn":28},{"ruleId":"292","severity":1,"message":"316","line":36,"column":13,"nodeType":"294","messageId":"295","endLine":36,"endColumn":17},{"ruleId":"292","severity":1,"message":"317","line":2,"column":8,"nodeType":"294","messageId":"295","endLine":2,"endColumn":16},{"ruleId":"292","severity":1,"message":"318","line":13,"column":10,"nodeType":"294","messageId":"295","endLine":13,"endColumn":22},{"ruleId":"292","severity":1,"message":"319","line":14,"column":10,"nodeType":"294","messageId":"295","endLine":14,"endColumn":23},{"ruleId":"292","severity":1,"message":"320","line":2,"column":8,"nodeType":"294","messageId":"295","endLine":2,"endColumn":17},{"ruleId":"292","severity":1,"message":"304","line":3,"column":10,"nodeType":"294","messageId":"295","endLine":3,"endColumn":20},{"ruleId":"292","severity":1,"message":"321","line":3,"column":10,"nodeType":"294","messageId":"295","endLine":3,"endColumn":14},{"ruleId":"306","severity":1,"message":"307","line":66,"column":36,"nodeType":"308","messageId":"309","endLine":66,"endColumn":38},{"ruleId":"284","replacedBy":"322"},{"ruleId":"286","replacedBy":"323"},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],"no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","no-unused-vars","'SearchIcon' is defined but never used.","Identifier","unusedVar","'AddIcon' is defined but never used.","'InfoIcon' is defined but never used.","'searchClass' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'makeStyles' is defined but never used.","'eventBus' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'clientsClaim' is defined but never used.","'Component' is defined but never used.","'MenuIcon' is defined but never used.","'onRemove' is assigned a value but never used.","'value' is assigned a value but never used.","'isTeamShows' is assigned a value but never used.","'card' is assigned a value but never used.","'Calendar' is defined but never used.","'boardService' is defined but never used.","'socketService' is defined but never used.","'PropTypes' is defined but never used.","'Link' is defined but never used.",["324"],["325"],"no-global-assign","no-unsafe-negation"]