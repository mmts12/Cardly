<<<<<<< HEAD
[{"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/index.js":"1","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/reportWebVitals.js":"2","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/serviceWorkerRegistration.js":"3","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/store.js":"4","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/App.jsx":"5","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/reducers/userReducer.js":"6","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/reducers/boardReducer.js":"7","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/routes.js":"8","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/boardActions.js":"9","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/Header.jsx":"10","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/boardService.js":"11","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardDetails.jsx":"12","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Login.jsx":"13","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/CardlyApp.jsx":"14","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Board.jsx":"15","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Home.jsx":"16","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/About.jsx":"17","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/SignUp.jsx":"18","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/userActions.js":"19","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/eventBusService.js":"20","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/cardActions.js":"21","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/misc/utilService.js":"22","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddBoard.jsx":"23","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx":"24","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx":"25","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx":"26","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx":"27","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx":"28","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx":"29","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/userService.js":"30","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/stackActions.js":"31","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/ChecklistPreview.jsx":"32","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/CardDetailsButton.jsx":"33","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddStack.jsx":"34","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StackList.jsx":"35","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/BoardPreview.jsx":"36","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StatusBar.jsx":"37","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/CheckListPopup.jsx":"38","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/LabelsPopup.jsx":"39","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/CoverPopup.jsx":"40","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/MembersPopup.jsx":"41","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/DueDatePopup.jsx":"42","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/AttachmentPopup.jsx":"43","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/storageSession.js":"44","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StackPreview.jsx":"45","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/httpService.js":"46","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/MembersList.jsx":"47","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/cloudinaryService.js":"48","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/EditStack.jsx":"49","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/TodoPreview.jsx":"50","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddCard.jsx":"51","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardList.jsx":"52","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardPreview.jsx":"53","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/EditCard.jsx":"54","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/misc/socketService.js":"55","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardImg.jsx":"56"},{"size":988,"mtime":1610559629398,"results":"57","hashOfConfig":"58"},{"size":364,"mtime":1610559629399,"results":"59","hashOfConfig":"58"},{"size":5064,"mtime":1610559629399,"results":"60","hashOfConfig":"58"},{"size":504,"mtime":1610559629401,"results":"61","hashOfConfig":"58"},{"size":1094,"mtime":1610655905408,"results":"62","hashOfConfig":"58"},{"size":673,"mtime":1610997094093,"results":"63","hashOfConfig":"58"},{"size":925,"mtime":1611141208589,"results":"64","hashOfConfig":"58"},{"size":774,"mtime":1610997094097,"results":"65","hashOfConfig":"58"},{"size":1600,"mtime":1611141208588,"results":"66","hashOfConfig":"58"},{"size":3605,"mtime":1611168771235,"results":"67","hashOfConfig":"58"},{"size":6054,"mtime":1611141208588,"results":"68","hashOfConfig":"58"},{"size":9360,"mtime":1611232415331,"results":"69","hashOfConfig":"58"},{"size":4345,"mtime":1611140824935,"results":"70","hashOfConfig":"58"},{"size":2032,"mtime":1611168075080,"results":"71","hashOfConfig":"58"},{"size":3215,"mtime":1611232016146,"results":"72","hashOfConfig":"58"},{"size":723,"mtime":1610796436955,"results":"73","hashOfConfig":"58"},{"size":114,"mtime":1610559629399,"results":"74","hashOfConfig":"58"},{"size":5370,"mtime":1610997094091,"results":"75","hashOfConfig":"58"},{"size":1699,"mtime":1610997160597,"results":"76","hashOfConfig":"58"},{"size":395,"mtime":1611076914463,"results":"77","hashOfConfig":"58"},{"size":2309,"mtime":1611229268634,"results":"78","hashOfConfig":"58"},{"size":655,"mtime":1610559629400,"results":"79","hashOfConfig":"58"},{"size":2873,"mtime":1611141208586,"results":"80","hashOfConfig":"58"},{"size":1123,"mtime":1611052448186,"results":"81","hashOfConfig":"58"},{"size":1485,"mtime":1611230487717,"results":"82","hashOfConfig":"58"},{"size":3499,"mtime":1611156181317,"results":"83","hashOfConfig":"58"},{"size":466,"mtime":1610881406706,"results":"84","hashOfConfig":"58"},{"size":4129,"mtime":1611158623986,"results":"85","hashOfConfig":"58"},{"size":874,"mtime":1611154895798,"results":"86","hashOfConfig":"58"},{"size":1558,"mtime":1610997094092,"results":"87","hashOfConfig":"58"},{"size":1368,"mtime":1611229306396,"results":"88","hashOfConfig":"58"},{"size":1958,"mtime":1611230532484,"results":"89","hashOfConfig":"58"},{"size":396,"mtime":1610908012223,"results":"90","hashOfConfig":"58"},{"size":1385,"mtime":1611141208586,"results":"91","hashOfConfig":"58"},{"size":1813,"mtime":1611154267985,"results":"92","hashOfConfig":"58"},{"size":894,"mtime":1611152736672,"results":"93","hashOfConfig":"58"},{"size":1305,"mtime":1611168175966,"results":"94","hashOfConfig":"58"},{"size":867,"mtime":1611052448186,"results":"95","hashOfConfig":"58"},{"size":1935,"mtime":1611052448187,"results":"96","hashOfConfig":"58"},{"size":1941,"mtime":1611052448187,"results":"97","hashOfConfig":"58"},{"size":849,"mtime":1611079520672,"results":"98","hashOfConfig":"58"},{"size":678,"mtime":1611158482746,"results":"99","hashOfConfig":"58"},{"size":1915,"mtime":1611053125499,"results":"100","hashOfConfig":"58"},{"size":540,"mtime":1611064703144,"results":"101","hashOfConfig":"58"},{"size":3949,"mtime":1611225627279,"results":"102","hashOfConfig":"58"},{"size":1039,"mtime":1611081120651,"results":"103","hashOfConfig":"58"},{"size":1086,"mtime":1611079376210,"results":"104","hashOfConfig":"58"},{"size":616,"mtime":1611052448188,"results":"105","hashOfConfig":"58"},{"size":996,"mtime":1610959978415,"results":"106","hashOfConfig":"58"},{"size":489,"mtime":1611168075078,"results":"107","hashOfConfig":"58"},{"size":1072,"mtime":1610959978415,"results":"108","hashOfConfig":"58"},{"size":749,"mtime":1610833925722,"results":"109","hashOfConfig":"58"},{"size":4778,"mtime":1611230623551,"results":"110","hashOfConfig":"58"},{"size":1045,"mtime":1610959978415,"results":"111","hashOfConfig":"58"},{"size":1570,"mtime":1611171131542,"results":"112","hashOfConfig":"58"},{"size":644,"mtime":1611232905508,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"sjdzls",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"116"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"116"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"116"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"116"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"116"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"116"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/index.js",[],["243","244"],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/reportWebVitals.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/serviceWorkerRegistration.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/store.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/App.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/reducers/userReducer.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/reducers/boardReducer.js",["245"],"const initialState = {\n    boards: [],\n    selectedBoard: {}\n}\n\nexport function boardReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_BOARDS':\n            return { ...state, boards: action.boards }\n        case 'ADD_BOARD':\n            return { ...state, boards: [, ...state.boards, action.boardAdded], selectedBoard: action.boardAdded }\n        case 'SET_BOARD':\n            return { ...state, selectedBoard: action.board }\n        case 'DELETE_BOARD':\n            return {\n                ...state,\n                boards: state.boards.filter(board => board._id !== action.boardId)\n            }\n        case 'UPDATE_BOARD':\n            return {\n                ...state,\n                boards: state.boards.map(board => (board._id === action.board._id) ? action.board : board),\n                selectedBoard: action.board\n            }\n        default:\n            return state\n    }\n}","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/routes.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/boardActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/Header.jsx",["246"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport InfoIcon from '@material-ui/icons/Info';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { connect } from 'react-redux';\nimport { logout } from './../store/actions/userActions.js';\n\nexport class _Header extends Component {\n  state = {};\n\n  onOpenSearch() {\n    const searchClass = 'not-searched' ? 'searching-now' : 'not-searched';\n  }\n\n  render() {\n    const { loggedInUser } = this.props;\n    let initials = 'G'\n    if (loggedInUser) {\n      initials = loggedInUser.fullname.substring(0, 1) + loggedInUser.fullname.charAt(loggedInUser.fullname.indexOf(' ') + 1)\n    }\n    return (\n      <div className=\"header-wrapper\">\n        <div className=\"header-left\">\n          <Link to=\"/\">\n            <button className=\"btn1\">\n              <span className=\"btn1-span\">\n                <span className=\"header-icon\">\n                  <HomeIcon></HomeIcon>\n                </span>\n              </span>\n            </button>\n          </Link>\n          <Link to=\"/Cardly\">\n            <button className=\"btn1\">\n              <span className=\"header-icon\">\n                <DashboardIcon></DashboardIcon>\n              </span>\n              <span className=\"header-icon-word\">Boards</span>\n            </button>\n          </Link>\n          <form className=\"header-input flex\">\n            <label hidden>Search Bar</label>\n            <input type=\"text\" />\n            <div className={this.searchClass} onClick={this.onOpenSearch}>\n              <div className=\"header-icon\">\n                <SearchIcon></SearchIcon>\n              </div>\n            </div>\n          </form>\n        </div>\n        <button className=\"logo-wrapper\">\n          <Link to=\"/\">\n            <span className=\"logo\">Cardly</span>\n          </Link>\n        </button>\n        <div className=\"header-right\">\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <AddIcon></AddIcon>\n              </span>\n            </div>\n          </button>\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <InfoIcon></InfoIcon>\n              </span>\n            </div>\n          </button>\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <NotificationsIcon></NotificationsIcon>\n              </span>\n            </div>\n          </button>\n\n          {loggedInUser ? (\n            <div className=\"flex\">\n              {/* Welcome {loggedInUser.fullname} */}\n              <Link to=\"/\"><button className=\"btn1\" onClick={this.props.logout}> <span className=\"header-icon-word\">Logout</span></button></Link>\n            </div>\n          ) : (\n              <Link to=\"/login\">\n                <button className=\"btn1\">\n                  <span className=\"header-icon-word\">Login</span>\n                </button>\n              </Link>\n            )}\n          <button className=\"header-username\">{initials}</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedInUser: state.userModule.loggedInUser,\n  };\n};\nconst mapDispatchToProps = {\n  logout,\n};\n\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/boardService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardDetails.jsx",["247"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { eventBus } from '../services/eventBusService.js';\nimport { utilService } from '../services/misc/utilService.js';\nimport { CardSideBar } from './cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx';\nimport { CardDescription } from './cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx';\nimport { CardActivity } from './cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx';\nimport { CardLabels } from './cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx';\nimport { CardChecklist } from './cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx';\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx';\nimport { saveCard } from '../store/actions/cardActions.js';\nimport { CardImg } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/CardImg.jsx'\nimport { loadUsers } from '../store/actions/userActions.js';\nimport { userService } from '../services/userService';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport class _CardDetails extends Component {\n  state = {\n    card: {\n      comments: [],\n      labels: [],\n      checklists: [],\n      coverColor: '',\n      members: [],\n    },\n    boardUsers: [],\n    loggedUser: {},\n  };\n\n  componentDidMount() {\n    const { card } = this.props;\n    const boardUsers = this.props.selectedBoard.members;\n    let loggedUser = userService.getLoggedinUser();\n    if (!loggedUser) {\n      loggedUser = { fullname: 'Guest' };\n      console.log('loggedUser is:', loggedUser);\n    }\n    this.setState({ loggedUser });\n    this.setState({ card });\n    this.setState({ boardUsers });\n  }\n\n  onMemberAdd = (user) => {\n    let { card } = this.state;\n    let { loggedUser } = this.state;\n\n    const memberIndx = card.members.findIndex(\n      (member) => member._id === user._id\n    );\n    if (memberIndx === -1) {\n      card.members.push(user);\n      card.comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${loggedUser.fullname} added ${user.fullname} to this card`,\n      });\n    } else {\n      card.comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${loggedUser.fullname} removed ${user.fullname} from this card`,\n      });\n      card.members.splice(memberIndx, 1);\n    }\n    this.setState({ card }, () => {\n      this.props.saveCard(\n        this.state.card,\n        this.props.stack,\n        this.props.selectedBoard\n      );\n    });\n  };\n\n  setLabelOnCard = (color) => {\n    const { card } = this.state;\n    let { comments } = card;\n    // const { loggedUser } = this.state;\n    const colorIndx = card.labels.findIndex(\n      (labelColor) => labelColor === color\n    );\n    if (colorIndx === -1) {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} added card label color`,\n      });\n      card.labels.push(color);\n    } else {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} removed card label color`,\n      });\n      card.labels.splice(colorIndx, 1);\n    }\n    this.setState({ card, comments }, () => {\n      console.log('this.state.card is:', this.state.card);\n      this.props.saveCard(\n        this.state.card,\n        this.props.stack,\n        this.props.selectedBoard\n      );\n    });\n\n\n  };\n\n  setCardColor = (color) => {\n    let { card } = this.state;\n    let { comments } = card;\n    if (card.coverColor === color) {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} removed card cover color`,\n      });\n      card.coverColor = '';\n    } else {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} added card cover color`,\n      });\n      card.coverColor = color;\n    }\n\n    this.setState({ card, comments }, () => {\n      this.props.saveCard(\n        this.state.card,\n        this.props.stack,\n        this.props.selectedBoard\n      );\n    });\n  };\n\n  addChecklist = (checklistName) => {\n    const { card } = this.state;\n    let { comments } = card;\n    let checkListItem = {\n      id: utilService.makeId(),\n      title: checklistName,\n      todos: [],\n      createdAt: Date.now(),\n    };\n    comments.unshift({\n      id: utilService.makeId(),\n      createdAt: Date.now(),\n      txt: `${this.state.loggedUser.fullname} added checklist - ${checklistName}`,\n    });\n    card.checklists.push(checkListItem);\n    this.setState({ card });\n  };\n\n  onAddTodo = (checklist) => {\n    const { card } = this.state;\n    const checklistsToAdd = card.checklists.map((currChecklist) =>\n      currChecklist.id === checklist.id ? checklist : currChecklist\n    );\n    card.checklists = checklistsToAdd;\n    this.props.saveCard(card, this.props.stack, this.props.selectedBoard);\n  };\n\n  onRemoveTodo = (todoId, checklists) => {\n    const { card } = this.state;\n    const copyChecklists = { ...checklists };\n    const { todos } = copyChecklists;\n    const filteredTodos = todos.filter((todo) => todo.id !== todoId);\n    copyChecklists.todos = filteredTodos;\n    const filteredChecklists = card.checklists.map((currChecklist) =>\n      currChecklist.id === copyChecklists.id ? copyChecklists : currChecklist\n    );\n    card.checklists = filteredChecklists;\n    this.props.saveCard(card, this.props.stack, this.props.selectedBoard);\n  };\n\n  onClosePopUps = () => {\n    // eventBus.emit('close');\n  };\n\n  deleteChecklist = (checklistId) => {\n    const { card } = this.state;\n    let { comments } = card;\n    const currChecklistIdx = card.checklists.findIndex(\n      (cl) => cl.id === checklistId\n    );\n    const checklistName = card.checklists[currChecklistIdx].title;\n    card.checklists.splice(currChecklistIdx, 1);\n    comments.unshift({\n      id: utilService.makeId(),\n      createdAt: Date.now(),\n      txt: `${this.state.loggedUser.fullname} deleted checklist - ${checklistName}`,\n    });\n\n    this.setState({ card });\n    this.props.saveCard(card, this.props.stack, this.props.selectedBoard);\n  };\n\n  addComment = (comment) => {\n    const { card } = this.state;\n    card.comments.unshift({\n      id: utilService.makeId(),\n      createdBy: this.state.loggedUser,\n      createdAt: Date.now(),\n      txt: `${this.state.loggedUser.fullname} added comment - ${comment}`,\n    });\n    this.setState({ card });\n  };\n\n  render() {\n    const { card, onCloseModal, stack } = this.props;\n    const { checklists } = this.state.card;\n    const labels = this.state.card.labels;\n    const cardMembers = this.state.card.members;\n    return (\n      <>\n        <div className=\"modal-bg\" onClick={(ev) => onCloseModal(ev)}></div>\n        <main>\n          <section\n            onClick={this.onClosePopUps}\n            className=\"card-details-container\" >\n            <CloseIcon className=\"close-cd\" onClick={(ev) => onCloseModal(ev)} />\n            <div\n              className=\"card-details-cover\"\n              style={{ background: `${this.state.card.coverColor}` }}\n            ></div>\n            <div className=\"card-details-body\">\n              <div className=\"card-details-top\">\n                <h2 className=\"card-details-title\">{card.title}</h2>\n                <p className=\"card-details-list\">\n                  in list <span className=\"list-fake-link\">{stack.title}</span>\n                </p>\n              </div>\n              <div className=\"details-list-container flex\">\n                <div className=\"column-container flex column\">\n                  {/* CARD LABELS */}\n                  {labels.length !== 0 && (\n                    <CardLabels className=\"labels-txt\" labels={labels} />\n                  )}\n                  {cardMembers.length !== 0 && (\n                    <MembersAvatar users={cardMembers} />\n                  )}\n                  <CardDescription card={card} />\n                  {checklists.length !== 0 && (\n                    <CardChecklist\n                      onAddTodo={this.onAddTodo}\n                      onRemoveTodo={this.onRemoveTodo}\n                      onRemove={this.deleteChecklist}\n                      checklists={checklists}\n                    />\n                  )}\n                  {card.imgUrl && <CardImg card={card} />}\n                  <CardActivity card={card} onCommentAdd={this.addComment} />\n                </div>\n                <div className=\"sidebar-container\">\n                  <CardSideBar\n                    card={card}\n                    stack={stack}\n                    onMemberAdd={this.onMemberAdd}\n                    boardUsers={this.state.boardUsers}\n                    onCheckListSelect={this.addChecklist}\n                    onCoverColorSelect={this.setCardColor}\n                    onLabelColorSelect={this.setLabelOnCard}\n                  />\n                </div>\n              </div>\n            </div>\n          </section>\n        </main>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    users: state.userModule.users,\n  };\n};\n\nconst mapDispatchToProps = {\n  saveCard,\n  loadUsers,\n};\n\nexport const CardDetails = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_CardDetails);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Login.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/CardlyApp.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Board.jsx",["248"],"import React, { Component } from 'react';\nimport { StackList } from './../cmps/StackList';\nimport { setSelectedBoard, updateBoard } from '../store/actions/boardActions';\nimport { addStack } from '../store/actions/stackActions';\nimport { connect } from 'react-redux';\nimport { AddStack } from '../cmps/AddStack';\nimport { StatusBar } from '../cmps/StatusBar';\nimport AddIcon from '@material-ui/icons/Add';\nimport { socketService } from '../services/misc/socketService';\n\nexport class _Board extends Component {\n  state = {\n    isAddStack: false,\n  };\n\n  componentDidMount() {\n\n    this.loadBoard();\n    socketService.setup();//on the road\n    socketService.emit('join board', this.props.match.params.id);//notify server i joined the lane\n    socketService.on('update board', this.handleUpdateBoard)// let me know on every change\n  }\n\n\n  componentWillUnmount() {\n    socketService.terminate()\n  }\n\n  handleUpdateBoard = (board) => {\n    this.props.updateBoard(board)//call action \n  }\n\n  async loadBoard() {\n    const boardId = this.props.match.params.id;\n    this.props.setSelectedBoard(boardId);\n  }\n\n  onAddSection = () => {\n    this.setState({ isAddStack: true });\n  };\n\n  onCloseAddSection = () => {\n    this.setState({ isAddStack: false });\n  };\n\n  onAddNewStack = (stack) => {\n    const { selectedBoard } = this.props;\n    this.props\n      .addStack(stack, selectedBoard)\n      .then(() => this.setState({ isAddStack: false }));\n  };\n\n  render() {\n    const { selectedBoard } = this.props;\n    let style = { backgroundColor: 'white' };\n    if (!selectedBoard) return <h1>Loading...</h1>;\n    if (selectedBoard.style) {\n      const bgc = selectedBoard.style.bgc;\n      style = bgc.startsWith('#')\n        ? { backgroundColor: bgc }\n        : { backgroundImage: `url(${bgc})` };\n    }\n    const boardTitle = selectedBoard ? selectedBoard.title : '';\n    return (\n      <section className=\"board-container\" style={style}>\n        <StatusBar />\n        <div className=\"board-inner mt flex column  \">\n          {/* <span className=\"board-title flex align-center justify-center\">\n            {boardTitle}\n          </span> */}\n          <div className=\"stack-container flex \">\n            {selectedBoard && <StackList board={selectedBoard} />}\n            <div className=\"add-new-stack\">\n              <button\n                className=\"board-open-modal-btn\"\n                onClick={this.onAddSection}\n              >\n                <span className=\"board-icon\">\n                  <AddIcon></AddIcon>\n                </span>\n                <span className=\"btn1-span\">Add another list</span>\n              </button>\n              {this.state.isAddStack && (\n                <AddStack\n                  addNewStack={this.onAddNewStack}\n                  closeAddSection={this.onCloseAddSection}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  setSelectedBoard,\n  addStack,\n  updateBoard\n};\n\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Home.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/About.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/SignUp.jsx",["249","250"],"import React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { signup } from '../store/actions/userActions.js';\n\nexport class _SignUp extends Component {\n  state = {\n    user: {\n      firstname: '',\n      lastname: '',\n      username: '',\n      password: '',\n      isGuest: false,\n      cards: [],\n      imgUrl: '',\n    },\n    msg: '',\n  };\n  handleInput = (ev) => {\n    ev.preventDefault();\n    const { user } = this.state;\n    const name = ev.target.name;\n    const value = ev.target.value;\n    user[name] = value;\n    this.setState({ user });\n  };\n\n  onSubmit = (ev) => {\n    ev.preventDefault();\n    const { user } = this.state;\n    const fullname = user.firstname + ' ' + user.lastname;\n    delete user.firstname;\n    delete user.lastname;\n    user.fullname = fullname;\n    const { username, password } = user;\n    if (!username || !password || !fullname) {\n      return this.setState({ msg: 'All inputs are required' }, () =>\n        console.log(this.state.msg)\n      );\n    }\n    this.props.signup(user).then(() => this.props.history.push('/cardly'));\n  };\n  render() {\n    const classes = makeStyles((theme) => ({\n      paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      },\n      avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n      },\n      form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n      },\n      submit: {\n        margin: theme.spacing(3, 0, 2),\n      },\n    }));\n    return (\n      <div className=\"main-signup\">\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <div className=\"flex column center\">\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <form className={classes.form} onSubmit={this.onSubmit} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"fname\"\n                    name=\"firstname\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstname\"\n                    label=\"First Name\"\n                    autoFocus\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"lastname\"\n                    label=\"Last Name\"\n                    name=\"lastname\"\n                    autoComplete=\"lname\"\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"username\"\n                    name=\"username\"\n                    autoComplete=\"username\"\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={this.handleInput}\n                  />\n                  {this.state.msg && <label>{this.state.msg}</label>}\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign Up\n              </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"#/login\" variant=\"body2\">\n                    Already have an account? Log in\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          <Box mt={5}></Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = {\n  signup,\n};\n\nexport const SignUp = connect(mapStateToProps, mapDispatchToProps)(_SignUp);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/userActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/eventBusService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/cardActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/misc/utilService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddBoard.jsx",["251"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addBoard } from '../store/actions/boardActions';\nimport { utilService } from './../services/misc/utilService';\n\nexport class _AddBoard extends Component {\n  state = {\n    board: {\n      activities: [],\n      createdAt: Date.now(),\n      createdBy: {},\n      members: [],\n      stacks: [{ id: utilService.makeId(), cards: [], style: {}, title: '' }],\n      style: {\n        bgc: '',\n        mode: '',\n      },\n      title: '',\n    },\n  };\n\n  handleInput = (ev) => {\n    const { board } = this.state;\n    const { value } = ev.target;\n    board.title = value;\n    this.setState({ board });\n  };\n\n  async onSelectNewBoard(bgc) {\n    const { board } = this.state;\n    if (!board.title) return;\n    board.style.bgc = bgc;\n    this.setState({ board });\n    this.props.addBoard(board);\n    this.props.onCloseAddBoardSection();\n  }\n\n  render() {\n    const bgc = {\n      colors: ['#3f89e6', '#3fe6a8', '#f585ae', '#f59f85'],\n      imgsUrl: [\n        'https://res.cloudinary.com/dscb3040k/image/upload/v1611048026/Screenshot_2021-01-12_130444_ihywxs.png',\n        'https://res.cloudinary.com/dscb3040k/image/upload/v1610463893/WhatsApp_Image_2021-01-12_at_17.04.06_idr6gn.jpg',\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553514/img4_ohr2cl.png',\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553508/img3_g44phk.png',\n      ],\n    };\n    const { onCloseAddBoardSection } = this.props;\n    return (\n      <section className=\"add-new-board\">\n        <button onClick={onCloseAddBoardSection}>X</button>\n        <form>\n          <label htmlFor=\"\">Title:</label>\n          <input\n            type=\"text\"\n            name=\"\"\n            onChange={this.handleInput}\n            id=\"\"\n            value={this.state.board.title}\n          />\n        </form>\n        <div className=\" grid\">\n          {bgc.colors.map((color) => {\n            return (\n              <div\n                onClick={() => this.onSelectNewBoard(color)}\n                key={color}\n                className=\"bgc-add-board\"\n                style={{ backgroundColor: color }}\n              ></div>\n            );\n          })}\n          {bgc.imgsUrl.map((img) => {\n            return (\n              <div\n                onClick={() => this.onSelectNewBoard(img)}\n                key={img}\n                className=\"add-new-board-img\"\n              >\n                <img src={img} />\n              </div>\n            );\n          })}\n        </div>\n        {/* <button>Add </button> */}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    boards: state.boardModule.boards,\n    loggedInUser: state.userModule.loggedInUser,\n  };\n};\n\nconst mapDispatchToProps = {\n  addBoard,\n};\n\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx",["252","253"],"import React, { Component } from 'react';\nimport { utilService } from '../../../services/misc/utilService.js';\nimport { ChecklistPreview } from './ChecklistPreview.jsx';\n\nexport class CardChecklist extends Component {\n  state = {\n    newTodo: '',\n    todos: [],\n  };\n\n  componentDidMount() {\n    let todos = [];\n    this.props.checklists.map((todoList) => {\n      todos.push(todoList);\n    });\n    this.setState({ todos });\n  }\n\n  toggleAddItem() {\n    let { show } = this.state;\n    show = !show;\n    this.setState({ show });\n  }\n\n  handleInput = (ev) => {\n    let { newTodo } = this.state;\n    newTodo = ev.target.value;\n    this.setState({ newTodo });\n  };\n\n  addTodo = (currChecklist) => {\n    currChecklist.todos.push({\n      id: utilService.makeId(),\n      txt: this.state.newTodo,\n      isDone: false,\n      createdAt: Date.now(),\n    });\n    this.setState((this.state.todos = currChecklist.todos));\n    this.props.onAddTodo(currChecklist);\n  };\n\n  render() {\n    const { checklists } = this.props;\n    return (\n      <div>\n        {checklists.map((checklist) => {\n          return (\n            <ChecklistPreview\n              key={checklist.id}\n              checklist={checklist}\n              onRemoveTodo={this.props.onRemoveTodo}\n              handleInput={this.handleInput}\n              addTodo={this.addTodo}\n              toggleAddItem={this.toggleAddItem}\n              onRemove={this.props.onRemove}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx",["254"],"import React, { Component } from 'react';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport { clientsClaim } from 'workbox-core';\nimport { Avatar } from '@material-ui/core';\n\n\n\nexport class CardActivity extends Component {\n\n    state = {\n        comment: '',\n        isActivitySelected: false,\n    }\n\n    componentDidMount() {\n        this.setState({ comment: this.props.comment })\n    }\n\n\n    handleChange = (ev) => {\n        let { comment } = this.state\n        comment = ev.target.value\n        this.setState({ comment })\n    }\n\n    onEditActivity = () => {\n        const { isActivitySelected } = this.state\n        isActivitySelected ? this.setState({ isActivitySelected: false }) : this.setState({ isActivitySelected: true })\n    }\n\n    convertToDate = (timestamp) => {\n        let date = new Date(timestamp).toLocaleString();\n        const dateCopy = date.split('/')\n        const day = dateCopy[0];\n        const month = dateCopy[1];\n        const year = dateCopy[2];\n        return (`${day}/${month}/${year}`)\n    }\n\n    render() {\n        const { card } = this.props\n        return <section className=\"cd-cmp flex column\">\n            <div className=\"card-act-title\">\n                <FormatListBulletedIcon className=\"act-icon\" />\n                <h3 className=\"cd-subtitle-words\">Activity</h3>\n            </div>\n            <div className=\"cd-subtitle-txt\">\n                <div className=\"cd-subtitle-txt\">\n                    <div className=\"card-act-textarea\">\n                        <textarea onChange={this.handleChange} className=\"act-textarea\" placeholder=\"Write a comment...\" ></textarea>\n                    </div>\n                    <div className=\"act-original-save flex space-between align-center\">\n                        <button className=\"save-btn\" onClick={() => this.props.onCommentAdd(this.state.comment)} >Save</button>\n                        <div className=\"activity-bar-icons\" >\n                            <AttachFileIcon className=\"activity-icon\" />\n                            <AlternateEmailIcon className=\"activity-icon\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {card.comments.map(comment => {\n                const fullname = (comment.createdBy) ? comment.createdBy.fullname : '';\n                const initials = fullname.substring(0, 1) + fullname.charAt(fullname.indexOf(' ') + 1)\n                const date = this.convertToDate(comment.createdAt)\n                // console.log('date is:', date);\n                return <div key={comment.id} >\n                    <div className=\"card-activity-container flex\">\n                        {\n                            !initials.length ? <Avatar size=\"10\" src=\"frontend/src/assets/imgs/avatar-person.svg\"></Avatar> :\n                                <Avatar size=\"10\" >{initials}</Avatar>\n                        }\n                        <div className=\"card-activity-row\">\n                            <input className=\"card-details-activity-textarea\" onClick={this.onEditActivity} onChange={this.handleChange} value={comment.txt}></input>\n                            <div className=\"card-activity-date\">{date}</div>\n                        </div>\n                    </div>\n                </div>\n            }\n            )\n            }\n\n        </section >\n    }\n}\n\n\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/userService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/stackActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/ChecklistPreview.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/CardDetailsButton.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddStack.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StackList.jsx",["255"],"import React, { Component } from 'react';\nimport { StackPreview } from './StackPreview.jsx';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { connect } from 'react-redux';\nimport {\n  updateDragCard,\n  updateDragCardToOtherList,\n} from '../store/actions/cardActions.js';\n\nexport class _StackList extends Component {\n  dragEnd = (result) => {\n    const { selectedBoard } = this.props;\n    const { stacks } = this.props.selectedBoard;\n    const { destination, source, draggableId } = result;\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    if (result.destination.droppableId === result.source.droppableId) {\n      this.props.updateDragCard(result, stacks, selectedBoard);\n    }\n    if (result.destination.droppableId !== result.source.droppableId) {\n      this.props.updateDragCardToOtherList(result, stacks, selectedBoard);\n    }\n  };\n\n  render() {\n    const { stacks } = this.props.board;\n\n    if (!stacks) return <h1>Loading ...</h1>;\n    return (\n      <div>\n        <div className=\"stack-list-container flex \">\n          <DragDropContext onDragEnd={this.dragEnd}>\n            {this.props.board.stacks.map((stack) => {\n              return (\n                <StackPreview\n                  boardId={this.props.boardId}\n                  key={stack.id}\n                  stack={stack}\n                />\n              );\n            })}\n          </DragDropContext>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n  };\n};\n\nconst mapDispatchToProps = {\n  updateDragCard,\n  updateDragCardToOtherList,\n};\n\nexport const StackList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StackList);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/BoardPreview.jsx",["256"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nexport class BoardPreview extends Component {\n  render() {\n    const { board, onRemove } = this.props;\n    const { bgc } = board.style;\n\n    return (\n      <div className=\"board-preview\">\n        {/* <button onClick={() => onRemove(board._id)}>X</button> */}\n        <div\n          className=\"board-preview-image\"\n          style={\n            bgc.startsWith('#')\n              ? { backgroundColor: bgc }\n              : { backgroundImage: `url(${bgc})` }\n          }\n        >\n          <Link to={`./cardly/${board._id}`}>\n            <div className=\"board-preview-card\">\n              <h3 className=\"board-preview-title\">{board.title}</h3>\n            </div>\n          </Link>\n        </div>\n        {/* <div class=\"board-preview-description\">Board Description and Members</div> */}\n      </div>\n    );\n  }\n}\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StatusBar.jsx",["257"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar';\n\n// import { setSelectedBoard } from '../store/actions/boardActions';\n\nexport class _StatusBar extends React.Component {\n  state = {\n    selectedBoard: {},\n  };\n  componentDidMount() {\n    const { selectedBoard } = this.props;\n    this.setState({ selectedBoard });\n  }\n\n  render() {\n    const { selectedBoard } = this.props;\n    let members = '';\n    if (!selectedBoard) return <h5>Loading...</h5>;\n    if (selectedBoard.members) {\n      members = selectedBoard.members;\n    }\n    return (\n      <section>\n        <div className='status-bar-container flex space-between' >\n          <div className=\"flex align-center\">\n            <h2 style={{ color: 'white' }}>{selectedBoard.title}</h2>\n            {members.length !== 0 && <MembersAvatar users={selectedBoard.members} />}\n          </div>\n          <button onClick={this.onMenuSelect}>Show Menu</button>\n\n        </div>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n  };\n};\n\nconst mapDispatchToProps = {};\n\nexport const StatusBar = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StatusBar);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/CheckListPopup.jsx",["258"],"import React, { Component } from 'react';\n\nexport class CheckListPopup extends Component {\n\n    state = {\n        value: 'Checklist'\n    }\n\n    handleInput = (ev) => {\n        const value = ev.target.value\n        this.setState({ value })\n    }\n\n\n    render() {\n        let { value } = this.state\n        return (\n            <section>\n                <div className=\"pop-up-checklist\">\n                    <p className=\"pop-up-header\">Add Checklist</p>\n                    <hr></hr>\n                    <div className=\"pop-up-title\">Title</div>\n                    <input autoFocus onChange={this.handleInput} defaultValue=\"Checklist\" className=\"checklist-input\"></input>\n                    <button onClick={() => { this.props.onCheckListSelect(this.state.value) }} className=\"save-btn\">Add</button>\n                </div>\n            </section>\n        )\n    }\n}\n\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/LabelsPopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/CoverPopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/MembersPopup.jsx",["259"],"import React, { Component } from 'react';\nimport { MembersList } from '../MembersList.jsx'\n\n\nexport class MembersPopup extends Component {\n\n    state = {\n\n    }\n\n\n\n    componentDidMount() {\n        //    users = getUsers()\n    }\n\n\n    render() {\n        const { isTeamShows } = this.state\n        const boardUsers = this.props.boardUsers;\n        return (\n            <section className=\"members-container\">\n                <div className=\"pop-up-members\">\n                    <p className=\"pop-up-header\"> Members</p>\n                    <hr></hr>\n                    <input autoFocus placeholder=\"Search members\" className=\"members-input\"></input>\n                    <p>BOARD MEMBERS</p>\n                    <MembersList onMemberAdd={this.props.onMemberAdd} users={boardUsers} />\n                </div>\n            </section >\n        )\n    }\n}\n\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/DueDatePopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/AttachmentPopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/storageSession.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StackPreview.jsx",["260","261"],"import React, { Component } from 'react';\nimport { CardList } from './CardList';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { connect } from 'react-redux';\nimport { removeStack, saveStack } from '../store/actions/stackActions.js';\nimport { addCard } from '../store/actions/cardActions';\nimport { updateBoard, setSelectedBoard } from '../store/actions/boardActions';\nimport { EditStack } from './EditStack.jsx';\nimport AddIcon from '@material-ui/icons/Add';\nimport { AddCard } from './AddCard';\nimport { boardService } from './../services/boardService';\nimport { socketService } from '../services/misc/socketService'\n\n\nexport class _StackPreview extends Component {\n  state = {\n    isEditShow: false,\n    isAddShow: false,\n  };\n  componentDidMount() {\n    // const savedMsgs = socketService.getMsgsFromStorage() || [];\n    //   this.setState({ msgs: savedMsgs });\n    // socketService.setup()\n    // socketService.on('board updateBoard', this.onEmitSocket)\n  }\n  componentWillUnmount() {\n\n  }\n\n\n  // onEmitSocket = () => {\n  //   console.log('RUMPUS')\n  // }\n\n  onRemoveStack = () => {\n    const { stack, selectedBoard, removeStack } = this.props;\n    removeStack(stack.id, selectedBoard._id, selectedBoard);\n  };\n\n  onEdit = () => {\n    this.setState({ isEditShow: true });\n  };\n\n  onSaveStack = (stack) => {\n    const { selectedBoard } = this.props;\n    console.log('selectedBoard is:', this.props.selectedBoard);\n    this.props.saveStack(stack, selectedBoard);\n    this.setState({ isEditShow: false });\n  };\n\n  // componentDidUpdate() {\n  //   this.loadBoard();\n  // }\n\n  // loadBoard = () => {\n  //   const { selectedBoard } = this.props;\n  //   this.props.setSelectedBoard(selectedBoard);\n  // };\n\n  onAddCard = () => {\n    this.setState({ isAddShow: true });\n  };\n\n  onCloseAddSection = () => {\n    this.setState({ isAddShow: false });\n  };\n\n  onAddNewCard = (cardToadd) => {\n    const { stack, selectedBoard } = this.props;\n    this.onCloseAddSection();\n    // const board = boardService.addCard(cardToadd, stack, selectedBoard);\n    // console.log(board);\n    this.props.addCard(cardToadd, stack, selectedBoard);\n  };\n\n  render() {\n    const { stack } = this.props;\n    return (\n      <div className=\"stack-preview-card card-list\">\n        <div className=\"stack-title flex\">\n          {this.state.isEditShow ? (\n            <EditStack\n              className=\"stack-preview-edit flex\"\n              saveStack={this.onSaveStack}\n              stack={stack}\n            />\n          ) : (\n              <div className=\"flex space-between align-center\">\n                <h4 onClick={this.onEdit} className=\"stack-title-words\">\n                  {stack.title}\n                </h4>\n                <div onClick={this.onRemoveStack} className=\"flex\">\n                  <DeleteIcon className=\"stack-preview-delete-icon\"></DeleteIcon>\n                </div>\n              </div>\n            )}\n        </div>\n        <CardList stack={stack} cards={stack.cards} />\n        {this.state.isAddShow ? (\n          <AddCard\n            addNewCard={this.onAddNewCard}\n            closeAddSection={this.onCloseAddSection}\n          />\n        ) : (\n            <div\n              onClick={this.onAddCard}\n              className=\"add-new-card flex align-center\"\n            >\n              <div className=\"add-icon flex justify-center align-center\">\n                <AddIcon></AddIcon>\n              </div>\n              <span className=\"add-text flex justify-center align-center\">\n                Add Another Card\n            </span>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  removeStack,\n  setSelectedBoard,\n  saveStack,\n  addCard,\n  updateBoard\n};\n\nexport const StackPreview = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StackPreview);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/httpService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/MembersList.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/cloudinaryService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/EditStack.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/TodoPreview.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddCard.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardList.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardPreview.jsx",["262","263","264","265"],"import React, { Component } from 'react';\nimport { CardDetails } from './CardDetails';\nimport { CardLabels } from './cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { removeCard, saveCard } from '../store/actions/cardActions.js';\nimport { connect } from 'react-redux';\nimport { EditCard } from './EditCard';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx';\n// import { socketService } from '../services/misc/socketService';\n// import { updateBoard } from '../store/actions/boardActions';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport class _CardPreview extends Component {\n  state = {\n    isCardDetailsSelected: false,\n    isEditCardModalShow: false,\n    card: {},\n    labels: [],\n  };\n\n  componentDidMount() {\n    const { card } = this.props\n    this.setState({ card })\n    this.setState(this.state.labels = this.props.card.labels)\n\n  }\n\n\n\n  onShowCardDetails = () => {\n    if (!this.state.isEditCardModalShow)\n      this.setState({ isCardDetailsSelected: true });\n  };\n\n  closeModal = (ev) => {\n    ev.stopPropagation();\n    this.setState({ isCardDetailsSelected: false });\n  };\n\n  onRemoveCard = (cardId) => {\n    const { selectedBoard, stack } = this.props;\n    this.props.removeCard(cardId, stack, selectedBoard);\n  };\n\n  onEditCard = (ev) => {\n    ev.stopPropagation()\n    this.setState({ isEditCardModalShow: true });\n  };\n\n  onSaveEditedCard = (card) => {\n    const { selectedBoard, stack } = this.props;\n    this.props.saveCard(card, stack, selectedBoard);\n    this.setState({ isEditCardModalShow: false });\n  };\n\n  render() {\n    const { card, stack, index } = this.props;\n    const { labels, onLoadImg } = this.state;\n    const { coverColor } = this.state.card;\n    const { isCardDetailsSelected, isEditCardModalShow } = this.state;\n    if (!card || !stack) return <h1>loading..</h1>;\n    const classes = makeStyles((theme) => ({\n      root: {\n        display: 'flex',\n        '& > * + *': {\n          marginLeft: theme.spacing(2),\n        },\n      },\n    }));\n    return (\n      <>\n        <Draggable draggableId={card.id} index={index}>\n          {(provided) => (\n            <div\n              className=\"card-preview\"\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef} >\n              { card.imgUrl ?\n                // {coverColor !== '' && (\n                <img src={card.imgUrl} alt=\"\" /> :\n                <div className=\"card-preview-color\" style={{ background: `${coverColor}` }}></div>\n                // )}\n              }\n              {labels.length !== 0 && <CardLabels labels={labels} />}\n\n              <div onClick={this.onShowCardDetails} className=\"card-preview-line flex space-between\">\n                {!isEditCardModalShow ? (\n                  <div className=\"card-preview-icons flex space-between\">\n                    <div>{card.title}</div>\n                    {/* {card.imgUrl && (\n                      <div>\n                        <img src={card.imgUrl} alt=\"\" />\n                      </div>\n                    )} */}\n\n                    <div className=\"icons-container flex\">\n                      <div onClick={this.onEditCard}>\n                        <span>\n                          <EditIcon className=\"card-preview-edit-icon\"></EditIcon>\n                        </span>\n                      </div>\n                      <div onClick={() => this.onRemoveCard(card.id)}>\n                        <span>\n                          <DeleteIcon className=\"card-preview-edit-icon\"></DeleteIcon>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                    <EditCard\n                      saveEditedCard={this.onSaveEditedCard}\n                      card={card}\n                    ></EditCard>\n                  )}\n              </div>\n              {card.members.length !== 0 && <MembersAvatar users={card.members} />}\n            </div>\n          )}\n        </Draggable>\n        {isCardDetailsSelected && (\n          <CardDetails\n            stack={stack}\n            card={card}\n            onCloseModal={this.closeModal}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  removeCard,\n  saveCard,\n};\n\nexport const CardPreview = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_CardPreview);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/EditCard.jsx",[],["266","267"],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/misc/socketService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardImg.jsx",[],{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":11,"column":40,"nodeType":"274","messageId":"275","endLine":11,"endColumn":78},{"ruleId":"276","severity":1,"message":"277","line":16,"column":11,"nodeType":"278","messageId":"279","endLine":16,"endColumn":22},{"ruleId":"276","severity":1,"message":"280","line":3,"column":10,"nodeType":"278","messageId":"279","endLine":3,"endColumn":18},{"ruleId":"276","severity":1,"message":"281","line":63,"column":11,"nodeType":"278","messageId":"279","endLine":63,"endColumn":21},{"ruleId":"276","severity":1,"message":"282","line":6,"column":8,"nodeType":"278","messageId":"279","endLine":6,"endColumn":24},{"ruleId":"276","severity":1,"message":"283","line":7,"column":8,"nodeType":"278","messageId":"279","endLine":7,"endColumn":16},{"ruleId":"284","severity":1,"message":"285","line":80,"column":17,"nodeType":"286","endLine":80,"endColumn":34},{"ruleId":"287","severity":1,"message":"288","line":13,"column":42,"nodeType":"289","messageId":"290","endLine":13,"endColumn":44},{"ruleId":"291","severity":1,"message":"292","line":38,"column":20,"nodeType":"293","endLine":38,"endColumn":30},{"ruleId":"276","severity":1,"message":"294","line":5,"column":10,"nodeType":"278","messageId":"279","endLine":5,"endColumn":22},{"ruleId":"276","severity":1,"message":"295","line":14,"column":34,"nodeType":"278","messageId":"279","endLine":14,"endColumn":45},{"ruleId":"276","severity":1,"message":"296","line":5,"column":20,"nodeType":"278","messageId":"279","endLine":5,"endColumn":28},{"ruleId":"276","severity":1,"message":"297","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":26},{"ruleId":"276","severity":1,"message":"298","line":16,"column":15,"nodeType":"278","messageId":"279","endLine":16,"endColumn":20},{"ruleId":"276","severity":1,"message":"299","line":19,"column":17,"nodeType":"278","messageId":"279","endLine":19,"endColumn":28},{"ruleId":"276","severity":1,"message":"300","line":11,"column":10,"nodeType":"278","messageId":"279","endLine":11,"endColumn":22},{"ruleId":"276","severity":1,"message":"301","line":12,"column":10,"nodeType":"278","messageId":"279","endLine":12,"endColumn":23},{"ruleId":"276","severity":1,"message":"302","line":15,"column":8,"nodeType":"278","messageId":"279","endLine":15,"endColumn":24},{"ruleId":"291","severity":1,"message":"292","line":28,"column":19,"nodeType":"293","endLine":28,"endColumn":29},{"ruleId":"276","severity":1,"message":"303","line":62,"column":21,"nodeType":"278","messageId":"279","endLine":62,"endColumn":30},{"ruleId":"276","severity":1,"message":"304","line":66,"column":11,"nodeType":"278","messageId":"279","endLine":66,"endColumn":18},{"ruleId":"268","replacedBy":"305"},{"ruleId":"270","replacedBy":"306"},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],"no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","no-unused-vars","'searchClass' is assigned a value but never used.","Identifier","unusedVar","'eventBus' is defined but never used.","'boardTitle' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'clientsClaim' is defined but never used.","'draggableId' is assigned a value but never used.","'onRemove' is assigned a value but never used.","'Component' is defined but never used.","'value' is assigned a value but never used.","'isTeamShows' is assigned a value but never used.","'boardService' is defined but never used.","'socketService' is defined but never used.","'CircularProgress' is defined but never used.","'onLoadImg' is assigned a value but never used.","'classes' is assigned a value but never used.",["307"],["308"],"no-global-assign","no-unsafe-negation"]
=======
<<<<<<< HEAD
[{"/Users/moonay23/Dev/sprint 4/Cardly/src/index.js":"1","/Users/moonay23/Dev/sprint 4/Cardly/src/reportWebVitals.js":"2","/Users/moonay23/Dev/sprint 4/Cardly/src/serviceWorkerRegistration.js":"3","/Users/moonay23/Dev/sprint 4/Cardly/src/store/store.js":"4","/Users/moonay23/Dev/sprint 4/Cardly/src/App.jsx":"5","/Users/moonay23/Dev/sprint 4/Cardly/src/store/reducers/userReducer.js":"6","/Users/moonay23/Dev/sprint 4/Cardly/src/store/reducers/boardReducer.js":"7","/Users/moonay23/Dev/sprint 4/Cardly/src/routes.js":"8","/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/boardActions.js":"9","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/Header.jsx":"10","/Users/moonay23/Dev/sprint 4/Cardly/src/services/boardService.js":"11","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Login.jsx":"12","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/About.jsx":"13","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Home.jsx":"14","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardDetails.jsx":"15","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/SignUp.jsx":"16","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/CardlyApp.jsx":"17","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Board.jsx":"18","/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/userActions.js":"19","/Users/moonay23/Dev/sprint 4/Cardly/src/services/eventBusService.js":"20","/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/cardActions.js":"21","/Users/moonay23/Dev/sprint 4/Cardly/src/services/misc/utilService.js":"22","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddBoard.jsx":"23","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx":"24","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx":"25","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx":"26","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx":"27","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx":"28","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx":"29","/Users/moonay23/Dev/sprint 4/Cardly/src/services/userService.js":"30","/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/stackActions.js":"31","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/BoardPreview.jsx":"32","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddStack.jsx":"33","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/CardDetailsButton.jsx":"34","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StatusBar.jsx":"35","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StackList.jsx":"36","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/LabelsPopup.jsx":"37","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CheckListPopup.jsx":"38","/Users/moonay23/Dev/sprint 4/Cardly/src/services/storageSession.js":"39","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/MembersPopup.jsx":"40","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/AttachmentPopup.jsx":"41","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CoverPopup.jsx":"42","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/ChecklistPreview.jsx":"43","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/DueDatePopup.jsx":"44","/Users/moonay23/Dev/sprint 4/Cardly/src/services/httpService.js":"45","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StackPreview.jsx":"46","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/MembersList.jsx":"47","/Users/moonay23/Dev/sprint 4/Cardly/src/services/cloudinaryService.js":"48","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/EditStack.jsx":"49","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/TodoPreview.jsx":"50","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardList.jsx":"51","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddCard.jsx":"52","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardPreview.jsx":"53","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/EditCard.jsx":"54"},{"size":988,"mtime":1610544545093,"results":"55","hashOfConfig":"56"},{"size":364,"mtime":1610544545094,"results":"57","hashOfConfig":"56"},{"size":5064,"mtime":1610544545094,"results":"58","hashOfConfig":"56"},{"size":504,"mtime":1610544545096,"results":"59","hashOfConfig":"56"},{"size":1094,"mtime":1610655510624,"results":"60","hashOfConfig":"56"},{"size":673,"mtime":1611052131883,"results":"61","hashOfConfig":"56"},{"size":925,"mtime":1611141087175,"results":"62","hashOfConfig":"56"},{"size":774,"mtime":1611053824602,"results":"63","hashOfConfig":"56"},{"size":1600,"mtime":1611141087175,"results":"64","hashOfConfig":"56"},{"size":3595,"mtime":1611168791897,"results":"65","hashOfConfig":"56"},{"size":6054,"mtime":1611141087174,"results":"66","hashOfConfig":"56"},{"size":4345,"mtime":1611131132954,"results":"67","hashOfConfig":"56"},{"size":114,"mtime":1610544545093,"results":"68","hashOfConfig":"56"},{"size":723,"mtime":1610745058047,"results":"69","hashOfConfig":"56"},{"size":8937,"mtime":1611168298623,"results":"70","hashOfConfig":"56"},{"size":5370,"mtime":1611052131881,"results":"71","hashOfConfig":"56"},{"size":2032,"mtime":1611168298628,"results":"72","hashOfConfig":"56"},{"size":2959,"mtime":1611168298627,"results":"73","hashOfConfig":"56"},{"size":1699,"mtime":1611052131883,"results":"74","hashOfConfig":"56"},{"size":395,"mtime":1611080805465,"results":"75","hashOfConfig":"56"},{"size":1949,"mtime":1610959895497,"results":"76","hashOfConfig":"56"},{"size":655,"mtime":1610544545095,"results":"77","hashOfConfig":"56"},{"size":2873,"mtime":1611141087172,"results":"78","hashOfConfig":"56"},{"size":466,"mtime":1610908335455,"results":"79","hashOfConfig":"56"},{"size":1123,"mtime":1610980835711,"results":"80","hashOfConfig":"56"},{"size":4129,"mtime":1611168298626,"results":"81","hashOfConfig":"56"},{"size":3499,"mtime":1611168298625,"results":"82","hashOfConfig":"56"},{"size":1452,"mtime":1611168298625,"results":"83","hashOfConfig":"56"},{"size":874,"mtime":1611168298626,"results":"84","hashOfConfig":"56"},{"size":1558,"mtime":1611052131883,"results":"85","hashOfConfig":"56"},{"size":1124,"mtime":1610907722191,"results":"86","hashOfConfig":"56"},{"size":894,"mtime":1611152650283,"results":"87","hashOfConfig":"56"},{"size":1385,"mtime":1611141087172,"results":"88","hashOfConfig":"56"},{"size":396,"mtime":1610908335454,"results":"89","hashOfConfig":"56"},{"size":1379,"mtime":1611225580544,"results":"90","hashOfConfig":"56"},{"size":1813,"mtime":1611168298624,"results":"91","hashOfConfig":"56"},{"size":1935,"mtime":1610999720839,"results":"92","hashOfConfig":"56"},{"size":867,"mtime":1610999864705,"results":"93","hashOfConfig":"56"},{"size":540,"mtime":1611080805465,"results":"94","hashOfConfig":"56"},{"size":849,"mtime":1611080805464,"results":"95","hashOfConfig":"56"},{"size":1915,"mtime":1611053824601,"results":"96","hashOfConfig":"56"},{"size":1941,"mtime":1611001655611,"results":"97","hashOfConfig":"56"},{"size":1928,"mtime":1611168298626,"results":"98","hashOfConfig":"56"},{"size":678,"mtime":1611168298627,"results":"99","hashOfConfig":"56"},{"size":1039,"mtime":1611052131882,"results":"100","hashOfConfig":"56"},{"size":3487,"mtime":1611078901772,"results":"101","hashOfConfig":"56"},{"size":1086,"mtime":1611071614740,"results":"102","hashOfConfig":"56"},{"size":616,"mtime":1611053824603,"results":"103","hashOfConfig":"56"},{"size":996,"mtime":1610959895493,"results":"104","hashOfConfig":"56"},{"size":512,"mtime":1611221334025,"results":"105","hashOfConfig":"56"},{"size":772,"mtime":1611228898631,"results":"106","hashOfConfig":"56"},{"size":1072,"mtime":1610959895490,"results":"107","hashOfConfig":"56"},{"size":4717,"mtime":1611064913040,"results":"108","hashOfConfig":"56"},{"size":1045,"mtime":1610959895492,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1y4hatr",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"112"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"112"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"/Users/moonay23/Dev/sprint 4/Cardly/src/index.js",[],["234","235"],"/Users/moonay23/Dev/sprint 4/Cardly/src/reportWebVitals.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/serviceWorkerRegistration.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/store.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/App.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/reducers/userReducer.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/reducers/boardReducer.js",["236"],"const initialState = {\n    boards: [],\n    selectedBoard: {}\n}\n\nexport function boardReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_BOARDS':\n            return { ...state, boards: action.boards }\n        case 'ADD_BOARD':\n            return { ...state, boards: [, ...state.boards, action.boardAdded], selectedBoard: action.boardAdded }\n        case 'SET_BOARD':\n            return { ...state, selectedBoard: action.board }\n        case 'DELETE_BOARD':\n            return {\n                ...state,\n                boards: state.boards.filter(board => board._id !== action.boardId)\n            }\n        case 'UPDATE_BOARD':\n            return {\n                ...state,\n                boards: state.boards.map(board => (board._id === action.board._id) ? action.board : board),\n                selectedBoard: action.board\n            }\n        default:\n            return state\n    }\n}","/Users/moonay23/Dev/sprint 4/Cardly/src/routes.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/boardActions.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/Header.jsx",["237"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport InfoIcon from '@material-ui/icons/Info';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { connect } from 'react-redux';\nimport { logout } from './../store/actions/userActions.js';\n\nexport class _Header extends Component {\n  state = {};\n\n  onOpenSearch() {\n    const searchClass = 'not-searched' ? 'searching-now' : 'not-searched';\n  }\n\n  render() {\n    const { loggedInUser } = this.props;\n    let initials = 'G' \n    if (loggedInUser) { initials = loggedInUser.fullname.substring(0, 1) + loggedInUser.fullname.charAt(loggedInUser.fullname.indexOf(' ') + 1)}\n    return (\n      <div className=\"header-wrapper\">\n        <div className=\"header-left\">\n          <Link to=\"/\">\n            <button className=\"btn1\">\n              <span className=\"btn1-span\">\n                <span className=\"header-icon\">\n                  <HomeIcon></HomeIcon>\n                </span>\n              </span>\n            </button>\n          </Link>\n          <Link to=\"/Cardly\">\n            <button className=\"btn1\">\n              <span className=\"header-icon\">\n                <DashboardIcon></DashboardIcon>\n              </span>\n              <span className=\"header-icon-word\">Boards</span>\n            </button>\n          </Link>\n          <form className=\"header-input flex\">\n            <label hidden>Search Bar</label>\n            <input type=\"text\" />\n            <div className={this.searchClass} onClick={this.onOpenSearch}>\n              <div className=\"header-icon\">\n                <SearchIcon></SearchIcon>\n              </div>\n            </div>\n          </form>\n        </div>\n        <button className=\"logo-wrapper\">\n          <Link to=\"/\">\n            <span className=\"logo\">Cardly</span>\n          </Link>\n        </button>\n        <div className=\"header-right\">\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <AddIcon></AddIcon>\n              </span>\n            </div>\n          </button>\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <InfoIcon></InfoIcon>\n              </span>\n            </div>\n          </button>\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <NotificationsIcon></NotificationsIcon>\n              </span>\n            </div>\n          </button>\n\n          {loggedInUser ? (\n            <div className=\"flex\">\n              {/* Welcome {loggedInUser.fullname} */}\n              <Link to=\"/\"><button className=\"btn1\" onClick={this.props.logout}> <span className=\"header-icon-word\">Logout</span></button></Link>\n            </div>\n          ) : (\n              <Link to=\"/login\">\n                <button className=\"btn1\">\n                  <span className=\"header-icon-word\">Login</span>\n                </button>\n              </Link>\n            )}\n          <button className=\"header-username\">{initials}</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedInUser: state.userModule.loggedInUser,\n  };\n};\nconst mapDispatchToProps = {\n  logout,\n};\n\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/services/boardService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Login.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/pages/About.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Home.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardDetails.jsx",["238"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { eventBus } from '../services/eventBusService.js';\nimport { utilService } from '../services/misc/utilService.js';\nimport { CardSideBar } from './cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx';\nimport { CardDescription } from './cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx';\nimport { CardActivity } from './cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx';\nimport { CardLabels } from './cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx';\nimport { CardChecklist } from './cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx';\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx';\nimport { saveCard } from '../store/actions/cardActions.js';\nimport { loadUsers } from '../store/actions/userActions.js';\nimport { userService } from '../services/userService';\n\nexport class _CardDetails extends Component {\n  state = {\n    card: {\n      comments: [],\n      labels: [],\n      checklists: [],\n      coverColor: '',\n      members: [],\n    },\n    boardUsers: [],\n    loggedUser: {},\n  };\n\n  componentDidMount() {\n    const { card } = this.props;\n    const boardUsers = this.props.selectedBoard.members;\n    let loggedUser = userService.getLoggedinUser();\n    if (!loggedUser) {\n      loggedUser = { fullname: 'Guest' };\n      console.log('loggedUser is:', loggedUser);\n    }\n    this.setState({ loggedUser });\n    this.setState({ card });\n    this.setState({ boardUsers });\n  }\n\n  onMemberAdd = (user) => {\n    let { card } = this.state;\n    let { loggedUser } = this.state;\n\n    const memberIndx = card.members.findIndex(\n      (member) => member._id === user._id\n    );\n    if (memberIndx === -1) {\n      card.members.push(user);\n      card.comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${loggedUser.fullname} added ${user.fullname} to this card`,\n      });\n    } else {\n      card.comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${loggedUser.fullname} removed ${user.fullname} from this card`,\n      });\n      card.members.splice(memberIndx, 1);\n    }\n    this.setState({ card }, () => {\n      this.props.saveCard(\n        this.state.card,\n        this.props.stack,\n        this.props.selectedBoard\n      );\n    });\n  };\n\n  setLabelOnCard = (color) => {\n    const { card } = this.state;\n    let { comments } = card;\n    // const { loggedUser } = this.state;\n\n    const colorIndx = card.labels.findIndex(\n      (labelColor) => labelColor === color\n    );\n    if (colorIndx === -1) {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} added card label color`,\n      });\n      card.labels.push(color);\n    } else {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} removed card label color`,\n      });\n      card.labels.splice(colorIndx, 1);\n    }\n    this.setState({ card, comments });\n\n    this.props.saveCard(\n      this.state.card,\n      this.props.stack,\n      this.props.selectedBoard\n    );\n  };\n\n  setCardColor = (color) => {\n    let { card } = this.state;\n    let { comments } = card;\n    if (card.coverColor === color) {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} removed card cover color`,\n      });\n      card.coverColor = '';\n    } else {\n      comments.unshift({\n        id: utilService.makeId(),\n        createdAt: Date.now(),\n        txt: `${this.state.loggedUser.fullname} added card cover color`,\n      });\n      card.coverColor = color;\n    }\n\n    this.setState({ card, comments }, () => {\n      this.props.saveCard(\n        this.state.card,\n        this.props.stack,\n        this.props.selectedBoard\n      );\n    });\n  };\n\n  addChecklist = (checklistName) => {\n    const { card } = this.state;\n    let { comments } = card;\n    let checkListItem = {\n      id: utilService.makeId(),\n      title: checklistName,\n      todos: [],\n      createdAt: Date.now(),\n    };\n    comments.unshift({\n      id: utilService.makeId(),\n      createdAt: Date.now(),\n      txt: `${this.state.loggedUser.fullname} added checklist - ${checklistName}`,\n    });\n    card.checklists.push(checkListItem);\n    this.setState({ card });\n  };\n\n  onAddTodo = (checklist) => {\n    const { card } = this.state;\n    const checklistsToAdd = card.checklists.map((currChecklist) =>\n      currChecklist.id === checklist.id ? checklist : currChecklist\n    );\n    card.checklists = checklistsToAdd;\n    this.props.saveCard(card, this.props.stack, this.props.selectedBoard);\n  };\n\n  onRemoveTodo = (todoId, checklists) => {\n    const { card } = this.state;\n    const copyChecklists = { ...checklists };\n    const { todos } = copyChecklists;\n    const filteredTodos = todos.filter((todo) => todo.id !== todoId);\n    copyChecklists.todos = filteredTodos;\n    const filteredChecklists = card.checklists.map((currChecklist) =>\n      currChecklist.id === copyChecklists.id ? copyChecklists : currChecklist\n    );\n    card.checklists = filteredChecklists;\n    this.props.saveCard(card, this.props.stack, this.props.selectedBoard);\n  };\n\n  onClosePopUps = () => {\n    // eventBus.emit('close');\n  };\n\n  deleteChecklist = (checklistId) => {\n    const { card } = this.state;\n    let { comments } = card;\n    const currChecklistIdx = card.checklists.findIndex(\n      (cl) => cl.id === checklistId\n    );\n    const checklistName = card.checklists[currChecklistIdx].title;\n    card.checklists.splice(currChecklistIdx, 1);\n    comments.unshift({\n      id: utilService.makeId(),\n      createdAt: Date.now(),\n      txt: `${this.state.loggedUser.fullname} deleted checklist - ${checklistName}`,\n    });\n    this.setState({ card });\n  };\n\n  addComment = (comment) => {\n    const { card } = this.state;\n    card.comments.unshift({\n      id: utilService.makeId(),\n      createdBy: this.state.loggedUser,\n      createdAt: Date.now(),\n      txt: `${this.state.loggedUser.fullname} added comment - ${comment}`,\n    });\n    this.setState({ card });\n  };\n\n  render() {\n    const { card, onCloseModal, stack } = this.props;\n    const { checklists } = this.state.card;\n    const labels = this.state.card.labels;\n    const cardMembers = this.state.card.members;\n    return (\n      <>\n        <div className=\"modal-bg\" onClick={(ev) => onCloseModal(ev)}></div>\n        <main>\n          <section\n            onClick={this.onClosePopUps}\n            className=\"card-details-container\"\n          >\n            <div\n              className=\"card-details-cover\"\n              style={{ background: `${this.state.card.coverColor}` }}\n            ></div>\n            <div className=\"card-details-body\">\n              <div className=\"card-details-top\">\n                <h2 className=\"card-details-title\">{card.title}</h2>\n                <p className=\"card-details-list\">\n                  in list <span className=\"list-fake-link\">{stack.title}</span>\n                </p>\n              </div>\n              <div className=\"details-list-container flex\">\n                <div className=\"column-container flex column\">\n                  {/* CARD LABELS */}\n                  {labels.length !== 0 && (\n                    <CardLabels className=\"labels-txt\" labels={labels} />\n                  )}\n                  {cardMembers.length !== 0 && (\n                    <MembersAvatar users={cardMembers} />\n                  )}\n                  <CardDescription card={card} />\n                  {checklists.length !== 0 && (\n                    <CardChecklist\n                      onAddTodo={this.onAddTodo}\n                      onRemoveTodo={this.onRemoveTodo}\n                      onRemove={this.deleteChecklist}\n                      checklists={checklists}\n                    />\n                  )}\n                  <CardActivity card={card} onCommentAdd={this.addComment} />\n                </div>\n                <div className=\"sidebar-container\">\n                  <CardSideBar\n                    card={card}\n                    stack={stack}\n                    onMemberAdd={this.onMemberAdd}\n                    boardUsers={this.state.boardUsers}\n                    onCheckListSelect={this.addChecklist}\n                    onCoverColorSelect={this.setCardColor}\n                    onLabelColorSelect={this.setLabelOnCard}\n                  />\n                </div>\n              </div>\n            </div>\n          </section>\n        </main>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    users: state.userModule.users,\n  };\n};\n\nconst mapDispatchToProps = {\n  saveCard,\n  loadUsers,\n};\n\nexport const CardDetails = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_CardDetails);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/SignUp.jsx",["239","240"],"import React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { signup } from '../store/actions/userActions.js';\n\nexport class _SignUp extends Component {\n  state = {\n    user: {\n      firstname: '',\n      lastname: '',\n      username: '',\n      password: '',\n      isGuest: false,\n      cards: [],\n      imgUrl: '',\n    },\n    msg: '',\n  };\n  handleInput = (ev) => {\n    ev.preventDefault();\n    const { user } = this.state;\n    const name = ev.target.name;\n    const value = ev.target.value;\n    user[name] = value;\n    this.setState({ user });\n  };\n\n  onSubmit = (ev) => {\n    ev.preventDefault();\n    const { user } = this.state;\n    const fullname = user.firstname + ' ' + user.lastname;\n    delete user.firstname;\n    delete user.lastname;\n    user.fullname = fullname;\n    const { username, password } = user;\n    if (!username || !password || !fullname) {\n      return this.setState({ msg: 'All inputs are required' }, () =>\n        console.log(this.state.msg)\n      );\n    }\n    this.props.signup(user).then(() => this.props.history.push('/cardly'));\n  };\n  render() {\n    const classes = makeStyles((theme) => ({\n      paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      },\n      avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n      },\n      form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n      },\n      submit: {\n        margin: theme.spacing(3, 0, 2),\n      },\n    }));\n    return (\n      <div className=\"main-signup\">\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <div className=\"flex column center\">\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <form className={classes.form} onSubmit={this.onSubmit} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"fname\"\n                    name=\"firstname\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstname\"\n                    label=\"First Name\"\n                    autoFocus\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"lastname\"\n                    label=\"Last Name\"\n                    name=\"lastname\"\n                    autoComplete=\"lname\"\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"username\"\n                    name=\"username\"\n                    autoComplete=\"username\"\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={this.handleInput}\n                  />\n                  {this.state.msg && <label>{this.state.msg}</label>}\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign Up\n              </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"#/login\" variant=\"body2\">\n                    Already have an account? Log in\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          <Box mt={5}></Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = {\n  signup,\n};\n\nexport const SignUp = connect(mapStateToProps, mapDispatchToProps)(_SignUp);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/pages/CardlyApp.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/pages/Board.jsx",["241"],"import React, { Component } from 'react';\nimport { StackList } from './../cmps/StackList';\nimport { setSelectedBoard } from '../store/actions/boardActions';\nimport { addStack } from '../store/actions/stackActions';\nimport { connect } from 'react-redux';\nimport { AddStack } from '../cmps/AddStack';\nimport { StatusBar } from '../cmps/StatusBar';\nimport AddIcon from '@material-ui/icons/Add';\n\nexport class _Board extends Component {\n  state = {\n    isAddStack: false,\n  };\n\n  componentDidMount() {\n    this.loadBoard();\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   const x = JSON.stringify(prevProps.boards);\n  //   const y = JSON.stringify(this.props.boards);\n  //   if (x !== y) {\n  //     this.loadBoard();\n  //   }\n  // }\n\n  async loadBoard() {\n    const boardId = this.props.match.params.id;\n    this.props.setSelectedBoard(boardId);\n  }\n\n  onAddSection = () => {\n    this.setState({ isAddStack: true });\n  };\n\n  onCloseAddSection = () => {\n    this.setState({ isAddStack: false });\n  };\n\n  onAddNewStack = (stack) => {\n    const { selectedBoard } = this.props;\n    this.props\n      .addStack(stack, selectedBoard)\n      .then(() => this.setState({ isAddStack: false }));\n  };\n\n  render() {\n    const { selectedBoard } = this.props;\n    let style = { backgroundColor: 'white' };\n    if (!selectedBoard) return <h1>Loading...</h1>;\n    if (selectedBoard.style) {\n      const bgc = selectedBoard.style.bgc;\n      style = bgc.startsWith('#')\n        ? { backgroundColor: bgc }\n        : { backgroundImage: `url(${bgc})` };\n    }\n    const boardTitle = selectedBoard ? selectedBoard.title : '';\n    return (\n      <section className=\"board-container\" style={style}>\n        <StatusBar />\n        <div className=\"board-inner mt flex column  \">\n          {/* <span className=\"board-title flex align-center justify-center\">\n            {boardTitle}\n          </span> */}\n          <div className=\"stack-container flex \">\n            {selectedBoard && <StackList board={selectedBoard} />}\n            <div className=\"add-new-stack\">\n              <button\n                className=\"board-open-modal-btn\"\n                onClick={this.onAddSection}\n              >\n                <span className=\"board-icon\">\n                  <AddIcon></AddIcon>\n                </span>\n                <span className=\"btn1-span\">Add another list</span>\n              </button>\n              {this.state.isAddStack && (\n                <AddStack\n                  addNewStack={this.onAddNewStack}\n                  closeAddSection={this.onCloseAddSection}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  setSelectedBoard,\n  addStack,\n};\n\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/userActions.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/services/eventBusService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/cardActions.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/services/misc/utilService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddBoard.jsx",["242"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addBoard } from '../store/actions/boardActions';\nimport { utilService } from './../services/misc/utilService';\n\nexport class _AddBoard extends Component {\n  state = {\n    board: {\n      activities: [],\n      createdAt: Date.now(),\n      createdBy: {},\n      members: [],\n      stacks: [{ id: utilService.makeId(), cards: [], style: {}, title: '' }],\n      style: {\n        bgc: '',\n        mode: '',\n      },\n      title: '',\n    },\n  };\n\n  handleInput = (ev) => {\n    const { board } = this.state;\n    const { value } = ev.target;\n    board.title = value;\n    this.setState({ board });\n  };\n\n  async onSelectNewBoard(bgc) {\n    const { board } = this.state;\n    if (!board.title) return;\n    board.style.bgc = bgc;\n    this.setState({ board });\n    this.props.addBoard(board);\n    this.props.onCloseAddBoardSection();\n  }\n\n  render() {\n    const bgc = {\n      colors: ['#3f89e6', '#3fe6a8', '#f585ae', '#f59f85'],\n      imgsUrl: [\n        'https://res.cloudinary.com/dscb3040k/image/upload/v1611048026/Screenshot_2021-01-12_130444_ihywxs.png',\n        'https://res.cloudinary.com/dscb3040k/image/upload/v1610463893/WhatsApp_Image_2021-01-12_at_17.04.06_idr6gn.jpg',\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553514/img4_ohr2cl.png',\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553508/img3_g44phk.png',\n      ],\n    };\n    const { onCloseAddBoardSection } = this.props;\n    return (\n      <section className=\"add-new-board\">\n        <button onClick={onCloseAddBoardSection}>X</button>\n        <form>\n          <label htmlFor=\"\">Title:</label>\n          <input\n            type=\"text\"\n            name=\"\"\n            onChange={this.handleInput}\n            id=\"\"\n            value={this.state.board.title}\n          />\n        </form>\n        <div className=\" grid\">\n          {bgc.colors.map((color) => {\n            return (\n              <div\n                onClick={() => this.onSelectNewBoard(color)}\n                key={color}\n                className=\"bgc-add-board\"\n                style={{ backgroundColor: color }}\n              ></div>\n            );\n          })}\n          {bgc.imgsUrl.map((img) => {\n            return (\n              <div\n                onClick={() => this.onSelectNewBoard(img)}\n                key={img}\n                className=\"add-new-board-img\"\n              >\n                <img src={img} />\n              </div>\n            );\n          })}\n        </div>\n        {/* <button>Add </button> */}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    boards: state.boardModule.boards,\n    loggedInUser: state.userModule.loggedInUser,\n  };\n};\n\nconst mapDispatchToProps = {\n  addBoard,\n};\n\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx",["243"],"import React, { Component } from 'react';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport { clientsClaim } from 'workbox-core';\nimport { Avatar } from '@material-ui/core';\n\n\n\nexport class CardActivity extends Component {\n\n    state = {\n        comment: '',\n        isActivitySelected: false,\n    }\n\n    componentDidMount() {\n        this.setState({ comment: this.props.comment })\n    }\n\n\n    handleChange = (ev) => {\n        let { comment } = this.state\n        comment = ev.target.value\n        this.setState({ comment })\n    }\n\n    onEditActivity = () => {\n        const { isActivitySelected } = this.state\n        isActivitySelected ? this.setState({ isActivitySelected: false }) : this.setState({ isActivitySelected: true })\n    }\n\n    convertToDate = (timestamp) => {\n        let date = new Date(timestamp).toLocaleString();\n        const dateCopy = date.split('/')\n        const day = dateCopy[0];\n        const month = dateCopy[1];\n        const year = dateCopy[2];\n        return (`${day}/${month}/${year}`)\n    }\n\n    render() {\n        const { card } = this.props\n        return <section className=\"cd-cmp flex column\">\n            <div className=\"card-act-title\">\n                <FormatListBulletedIcon className=\"act-icon\" />\n                <h3 className=\"cd-subtitle-words\">Activity</h3>\n            </div>\n            <div className=\"cd-subtitle-txt\">\n                <div className=\"cd-subtitle-txt\">\n                    <div className=\"card-act-textarea\">\n                        <textarea onChange={this.handleChange} className=\"act-textarea\" placeholder=\"Write a comment...\" ></textarea>\n                    </div>\n                    <div className=\"act-original-save flex space-between align-center\">\n                        <button className=\"save-btn\" onClick={() => this.props.onCommentAdd(this.state.comment)} >Save</button>\n                        <div className=\"activity-bar-icons\" >\n                            <AttachFileIcon className=\"activity-icon\" />\n                            <AlternateEmailIcon className=\"activity-icon\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {card.comments.map(comment => {\n                const fullname = (comment.createdBy) ? comment.createdBy.fullname : '';\n                const initials = fullname.substring(0, 1) + fullname.charAt(fullname.indexOf(' ') + 1)\n                const date = this.convertToDate(comment.createdAt)\n                // console.log('date is:', date);\n                return <div key={comment.id} >\n                    <div className=\"card-activity-container flex\">\n                        {\n                            !initials.length ? <Avatar size=\"10\" src=\"frontend/src/assets/imgs/avatar-person.svg\"></Avatar> :\n                                <Avatar size=\"10\" >{initials}</Avatar>\n                        }\n                        <div className=\"card-activity-row\">\n                            <input className=\"card-details-activity-textarea\" onClick={this.onEditActivity} onChange={this.handleChange} value={comment.txt}></input>\n                            <div className=\"card-activity-date\">{date}</div>\n                        </div>\n                    </div>\n                </div>\n            }\n            )\n            }\n\n        </section >\n    }\n}\n\n\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx",["244","245"],"import React, { Component } from 'react';\nimport { utilService } from '../../../services/misc/utilService.js';\nimport { ChecklistPreview } from './ChecklistPreview.jsx';\n\nexport class CardChecklist extends Component {\n  state = {\n    newTodo: '',\n    todos: [],\n  };\n\n  componentDidMount() {\n    let todos = [];\n    this.props.checklists.map((todoList) => {\n      todos.push(todoList);\n    });\n    this.setState({ todos });\n  }\n\n  toggleAddItem() {\n    let { show } = this.state;\n    show = !show;\n    this.setState({ show });\n  }\n\n  handleInput = (ev) => {\n    let { newTodo } = this.state;\n    newTodo = ev.target.value;\n    this.setState({ newTodo });\n  };\n\n  addTodo = (currChecklist) => {\n    currChecklist.todos.push({\n      id: utilService.makeId(),\n      txt: this.state.newTodo,\n      isDone: false,\n      createdAt: Date.now(),\n    });\n    this.setState((this.state.todos = currChecklist.todos));\n    this.props.onAddTodo(currChecklist);\n  };\n\n  render() {\n    const { checklists } = this.props;\n    return (\n      <div>\n        {checklists.map((checklist) => {\n          return (\n            <ChecklistPreview\n              checklist={checklist}\n              onRemoveTodo={this.props.onRemoveTodo}\n              handleInput={this.handleInput}\n              addTodo={this.addTodo}\n              toggleAddItem={this.toggleAddItem}\n              onRemove={this.props.onRemove}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/services/userService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/store/actions/stackActions.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/BoardPreview.jsx",["246"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nexport class BoardPreview extends Component {\n  render() {\n    const { board, onRemove } = this.props;\n    const { bgc } = board.style;\n\n    return (\n      <div className=\"board-preview\">\n        {/* <button onClick={() => onRemove(board._id)}>X</button> */}\n        <div\n          className=\"board-preview-image\"\n          style={\n            bgc.startsWith('#')\n              ? { backgroundColor: bgc }\n              : { backgroundImage: `url(${bgc})` }\n          }\n        >\n          <Link to={`./cardly/${board._id}`}>\n            <div className=\"board-preview-card\">\n              <h3 className=\"board-preview-title\">{board.title}</h3>\n            </div>\n          </Link>\n        </div>\n        {/* <div class=\"board-preview-description\">Board Description and Members</div> */}\n      </div>\n    );\n  }\n}\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddStack.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/CardDetailsButton.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StatusBar.jsx",["247"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar';\n\n// import { setSelectedBoard } from '../store/actions/boardActions';\n\nexport class _StatusBar extends React.Component {\n  state = {\n    selectedBoard: {},\n  };\n  componentDidMount() {\n    const { selectedBoard } = this.props;\n    this.setState({ selectedBoard });\n  }\n\n  render() {\n    const { selectedBoard } = this.props;\n    let members = '';\n    if (!selectedBoard) return <h5>Loading...</h5>;\n    if (selectedBoard.members) {\n      members = selectedBoard.members;\n    }\n    return (\n      <section>\n        <div className='status-bar-container flex space-between align-center' >\n          <div className=\"flex align-center\">\n            <h2 style={{ color: 'white' }}>{selectedBoard.title}</h2>\n            {members.length !== 0 && <MembersAvatar users={selectedBoard.members} />}\n          </div>\n          <button className=\"btn1 diff-bgc\" onClick={this.onMenuSelect}><span className=\"btn1-span\">Show Menu</span></button>\n\n        </div>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n  };\n};\n\nconst mapDispatchToProps = {};\n\nexport const StatusBar = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StatusBar);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StackList.jsx",["248"],"import React, { Component } from 'react';\nimport { StackPreview } from './StackPreview.jsx';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { connect } from 'react-redux';\nimport {\n  updateDragCard,\n  updateDragCardToOtherList,\n} from '../store/actions/cardActions.js';\n\nexport class _StackList extends Component {\n  dragEnd = (result) => {\n    const { selectedBoard } = this.props;\n    const { stacks } = this.props.selectedBoard;\n    const { destination, source, draggableId } = result;\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    if (result.destination.droppableId === result.source.droppableId) {\n      this.props.updateDragCard(result, stacks, selectedBoard);\n    }\n    if (result.destination.droppableId !== result.source.droppableId) {\n      this.props.updateDragCardToOtherList(result, stacks, selectedBoard);\n    }\n  };\n\n  render() {\n    const { stacks } = this.props.board;\n\n    if (!stacks) return <h1>Loading ...</h1>;\n    return (\n      <div>\n        <div className=\"stack-list-container flex \">\n          <DragDropContext onDragEnd={this.dragEnd}>\n            {this.props.board.stacks.map((stack) => {\n              return (\n                <StackPreview\n                  boardId={this.props.boardId}\n                  key={stack.id}\n                  stack={stack}\n                />\n              );\n            })}\n          </DragDropContext>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n  };\n};\n\nconst mapDispatchToProps = {\n  updateDragCard,\n  updateDragCardToOtherList,\n};\n\nexport const StackList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StackList);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/LabelsPopup.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CheckListPopup.jsx",["249"],"import React, { Component } from 'react';\n\nexport class CheckListPopup extends Component {\n\n    state = {\n        value: 'Checklist'\n    }\n\n    handleInput = (ev) => {\n        const value = ev.target.value\n        this.setState({ value })\n    }\n\n\n    render() {\n        let { value } = this.state\n        return (\n            <section>\n                <div className=\"pop-up-checklist\">\n                    <p className=\"pop-up-header\">Add Checklist</p>\n                    <hr></hr>\n                    <div className=\"pop-up-title\">Title</div>\n                    <input autoFocus onChange={this.handleInput} defaultValue=\"Checklist\" className=\"checklist-input\"></input>\n                    <button onClick={() => { this.props.onCheckListSelect(this.state.value) }} className=\"save-btn\">Add</button>\n                </div>\n            </section>\n        )\n    }\n}\n\n","/Users/moonay23/Dev/sprint 4/Cardly/src/services/storageSession.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/MembersPopup.jsx",["250"],"import React, { Component } from 'react';\nimport { MembersList } from '../MembersList.jsx'\n\n\nexport class MembersPopup extends Component {\n\n    state = {\n\n    }\n\n\n\n    componentDidMount() {\n        //    users = getUsers()\n    }\n\n\n    render() {\n        const { isTeamShows } = this.state\n        const boardUsers = this.props.boardUsers;\n        return (\n            <section className=\"members-container\">\n                <div className=\"pop-up-members\">\n                    <p className=\"pop-up-header\"> Members</p>\n                    <hr></hr>\n                    <input autoFocus placeholder=\"Search members\" className=\"members-input\"></input>\n                    <p>BOARD MEMBERS</p>\n                    <MembersList onMemberAdd={this.props.onMemberAdd} users={boardUsers} />\n                </div>\n            </section >\n        )\n    }\n}\n\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/AttachmentPopup.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/CoverPopup.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/ChecklistPreview.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsPopUps/DueDatePopup.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/services/httpService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/StackPreview.jsx",["251"],"import React, { Component } from 'react';\nimport { CardList } from './CardList';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { connect } from 'react-redux';\nimport { removeStack, saveStack } from '../store/actions/stackActions.js';\nimport { addCard } from '../store/actions/cardActions';\nimport { setSelectedBoard } from '../store/actions/boardActions';\nimport { EditStack } from './EditStack.jsx';\nimport AddIcon from '@material-ui/icons/Add';\nimport { AddCard } from './AddCard';\nimport { boardService } from './../services/boardService';\n\nexport class _StackPreview extends Component {\n  state = {\n    isEditShow: false,\n    isAddShow: false,\n  };\n\n  onRemoveStack = () => {\n    const { stack, selectedBoard, removeStack } = this.props;\n    removeStack(stack.id, selectedBoard._id, selectedBoard);\n  };\n\n  onEdit = () => {\n    this.setState({ isEditShow: true });\n  };\n\n  onSaveStack = (stack) => {\n    const { selectedBoard } = this.props;\n    console.log('selectedBoard is:', this.props.selectedBoard);\n    this.props.saveStack(stack, selectedBoard);\n    this.setState({ isEditShow: false });\n  };\n\n  // componentDidUpdate() {\n  //   this.loadBoard();\n  // }\n\n  // loadBoard = () => {\n  //   const { selectedBoard } = this.props;\n  //   this.props.setSelectedBoard(selectedBoard);\n  // };\n\n  onAddCard = () => {\n    this.setState({ isAddShow: true });\n  };\n\n  onCloseAddSection = () => {\n    this.setState({ isAddShow: false });\n  };\n\n  onAddNewCard = (cardToadd) => {\n    const { stack, selectedBoard } = this.props;\n    this.onCloseAddSection();\n    // const board = boardService.addCard(cardToadd, stack, selectedBoard);\n    // console.log(board);\n    this.props.addCard(cardToadd, stack, selectedBoard);\n  };\n\n  render() {\n    const { stack } = this.props;\n    return (\n      <div className=\"stack-preview-card card-list\">\n        <div className=\"stack-title flex\">\n          {this.state.isEditShow ? (\n            <EditStack\n              className=\"stack-preview-edit flex\"\n              saveStack={this.onSaveStack}\n              stack={stack}\n            />\n          ) : (\n            <div className=\"flex space-between align-center\">\n              <h4 onClick={this.onEdit} className=\"stack-title-words\">\n                {stack.title}\n              </h4>\n              <div onClick={this.onRemoveStack} className=\"flex\">\n                <DeleteIcon className=\"stack-preview-delete-icon\"></DeleteIcon>\n              </div>\n            </div>\n          )}\n        </div>\n        <CardList stack={stack} cards={stack.cards} />\n        {this.state.isAddShow ? (\n          <AddCard\n            addNewCard={this.onAddNewCard}\n            closeAddSection={this.onCloseAddSection}\n          />\n        ) : (\n          <div\n            onClick={this.onAddCard}\n            className=\"add-new-card flex align-center\"\n          >\n            <div className=\"add-icon flex justify-center align-center\">\n              <AddIcon></AddIcon>\n            </div>\n            <span className=\"add-text flex justify-center align-center\">\n              Add Another Card\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  removeStack,\n  setSelectedBoard,\n  saveStack,\n  addCard,\n};\n\nexport const StackPreview = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StackPreview);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/MembersList.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/services/cloudinaryService.js",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/EditStack.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/TodoPreview.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardList.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/AddCard.jsx",[],"/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/CardPreview.jsx",["252","253","254","255"],"import React, { Component } from 'react';\nimport { CardDetails } from './CardDetails';\nimport { CardLabels } from './cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { removeCard, saveCard } from '../store/actions/cardActions.js';\nimport { connect } from 'react-redux';\nimport { EditCard } from './EditCard';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport class _CardPreview extends Component {\n  state = {\n    isCardDetailsSelected: false,\n    isEditCardModalShow: false,\n    card: {},\n    labels: [],\n  };\n\n  componentDidMount() {\n    const { card } = this.props\n    this.setState({ card })\n    this.setState(this.state.labels = this.props.card.labels)\n  }\n\n  onShowCardDetails = () => {\n    this.setState({ isCardDetailsSelected: true });\n  };\n\n  closeModal = (ev) => {\n    ev.stopPropagation();\n    this.setState({ isCardDetailsSelected: false });\n  };\n\n  onRemoveCard = (cardId) => {\n    const { selectedBoard, stack } = this.props;\n    this.props.removeCard(cardId, stack, selectedBoard);\n  };\n\n  onEditCard = () => {\n    this.setState({ isEditCardModalShow: true });\n  };\n\n  onSaveEditedCard = (card) => {\n    const { selectedBoard, stack } = this.props;\n    this.props.saveCard(card, stack, selectedBoard);\n    this.setState({ isEditCardModalShow: false });\n  };\n\n  render() {\n    const { card, stack, index } = this.props;\n    const { labels, onLoadImg } = this.state;\n    const { coverColor } = this.state.card;\n    const { isCardDetailsSelected, isEditCardModalShow } = this.state;\n    if (!card || !stack) return <h1>loading..</h1>;\n    const classes = makeStyles((theme) => ({\n      root: {\n        display: 'flex',\n        '& > * + *': {\n          marginLeft: theme.spacing(2),\n        },\n      },\n    }));\n    return (\n      <>\n        <Draggable draggableId={card.id} index={index}>\n          {(provided) => (\n            <div\n              className=\"card-preview\"\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              {coverColor !== '' && (\n                <div\n                  className=\"card-preview-color\"\n                  style={{ background: `${coverColor}` }}\n                ></div>\n              )}\n              {labels.length !== 0 && <CardLabels labels={labels} />}\n\n              <div className=\"card-preview-line flex space-between\">\n                {!isEditCardModalShow ? (\n                  <div className=\"card-preview-icons flex space-between\">\n                    <div onClick={this.onShowCardDetails}>{card.title}</div>\n                    {card.imgUrl && (\n                      <div>\n                        <img src={card.imgUrl} alt=\"\" />\n                      </div>\n                    )}\n                    {/* {onLoadImg && (\n                      <div className={classes.root}>\n                        <CircularProgress />\n                      </div>\n                    )} */}\n                    <div className=\"icons-container flex\">\n                      <div onClick={this.onEditCard}>\n                        <span>\n                          <EditIcon className=\"card-preview-edit-icon\"></EditIcon>\n                        </span>\n                      </div>\n                      <div onClick={() => this.onRemoveCard(card.id)}>\n                        <span>\n                          <DeleteIcon className=\"card-preview-edit-icon\"></DeleteIcon>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                    <EditCard\n                      saveEditedCard={this.onSaveEditedCard}\n                      card={card}\n                    ></EditCard>\n                  )}\n              </div>\n              {card.members.length !== 0 && <MembersAvatar users={card.members} />}\n            </div>\n          )}\n        </Draggable>\n        {isCardDetailsSelected && (\n          <CardDetails\n            stack={stack}\n            card={card}\n            onCloseModal={this.closeModal}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  removeCard,\n  saveCard,\n};\n\nexport const CardPreview = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_CardPreview);\n","/Users/moonay23/Dev/sprint 4/Cardly/src/cmps/EditCard.jsx",[],{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","severity":1,"message":"261","line":11,"column":40,"nodeType":"262","messageId":"263","endLine":11,"endColumn":78},{"ruleId":"264","severity":1,"message":"265","line":16,"column":11,"nodeType":"266","messageId":"267","endLine":16,"endColumn":22},{"ruleId":"264","severity":1,"message":"268","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":18},{"ruleId":"264","severity":1,"message":"269","line":6,"column":8,"nodeType":"266","messageId":"267","endLine":6,"endColumn":24},{"ruleId":"264","severity":1,"message":"270","line":7,"column":8,"nodeType":"266","messageId":"267","endLine":7,"endColumn":16},{"ruleId":"264","severity":1,"message":"271","line":57,"column":11,"nodeType":"266","messageId":"267","endLine":57,"endColumn":21},{"ruleId":"272","severity":1,"message":"273","line":80,"column":17,"nodeType":"274","endLine":80,"endColumn":34},{"ruleId":"264","severity":1,"message":"275","line":5,"column":10,"nodeType":"266","messageId":"267","endLine":5,"endColumn":22},{"ruleId":"276","severity":1,"message":"277","line":13,"column":42,"nodeType":"278","messageId":"279","endLine":13,"endColumn":44},{"ruleId":"280","severity":1,"message":"281","line":38,"column":20,"nodeType":"282","endLine":38,"endColumn":30},{"ruleId":"264","severity":1,"message":"283","line":5,"column":20,"nodeType":"266","messageId":"267","endLine":5,"endColumn":28},{"ruleId":"264","severity":1,"message":"284","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"285","line":14,"column":34,"nodeType":"266","messageId":"267","endLine":14,"endColumn":45},{"ruleId":"264","severity":1,"message":"286","line":16,"column":15,"nodeType":"266","messageId":"267","endLine":16,"endColumn":20},{"ruleId":"264","severity":1,"message":"287","line":19,"column":17,"nodeType":"266","messageId":"267","endLine":19,"endColumn":28},{"ruleId":"264","severity":1,"message":"288","line":11,"column":10,"nodeType":"266","messageId":"267","endLine":11,"endColumn":22},{"ruleId":"264","severity":1,"message":"289","line":13,"column":8,"nodeType":"266","messageId":"267","endLine":13,"endColumn":24},{"ruleId":"280","severity":1,"message":"281","line":26,"column":19,"nodeType":"282","endLine":26,"endColumn":29},{"ruleId":"264","severity":1,"message":"290","line":55,"column":21,"nodeType":"266","messageId":"267","endLine":55,"endColumn":30},{"ruleId":"264","severity":1,"message":"291","line":59,"column":11,"nodeType":"266","messageId":"267","endLine":59,"endColumn":18},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","no-unused-vars","'searchClass' is assigned a value but never used.","Identifier","unusedVar","'eventBus' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'boardTitle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'clientsClaim' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'onRemove' is assigned a value but never used.","'Component' is defined but never used.","'draggableId' is assigned a value but never used.","'value' is assigned a value but never used.","'isTeamShows' is assigned a value but never used.","'boardService' is defined but never used.","'CircularProgress' is defined but never used.","'onLoadImg' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/index.js":"1","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/reportWebVitals.js":"2","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/serviceWorkerRegistration.js":"3","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/store.js":"4","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/App.jsx":"5","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/reducers/userReducer.js":"6","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/reducers/boardReducer.js":"7","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/routes.js":"8","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/boardActions.js":"9","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/Header.jsx":"10","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/boardService.js":"11","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardDetails.jsx":"12","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Login.jsx":"13","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/CardlyApp.jsx":"14","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Board.jsx":"15","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Home.jsx":"16","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/About.jsx":"17","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/SignUp.jsx":"18","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/userActions.js":"19","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/eventBusService.js":"20","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/cardActions.js":"21","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/misc/utilService.js":"22","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddBoard.jsx":"23","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx":"24","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx":"25","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx":"26","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx":"27","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx":"28","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx":"29","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/userService.js":"30","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/stackActions.js":"31","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/ChecklistPreview.jsx":"32","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/CardDetailsButton.jsx":"33","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddStack.jsx":"34","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StackList.jsx":"35","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/BoardPreview.jsx":"36","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StatusBar.jsx":"37","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/CheckListPopup.jsx":"38","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/LabelsPopup.jsx":"39","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/CoverPopup.jsx":"40","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/MembersPopup.jsx":"41","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/DueDatePopup.jsx":"42","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/AttachmentPopup.jsx":"43","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/storageSession.js":"44","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StackPreview.jsx":"45","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/httpService.js":"46","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/MembersList.jsx":"47","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/cloudinaryService.js":"48","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/EditStack.jsx":"49","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/TodoPreview.jsx":"50","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddCard.jsx":"51","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardList.jsx":"52","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardPreview.jsx":"53","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/EditCard.jsx":"54","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/misc/socketService.js":"55","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardImg.jsx":"56"},{"size":988,"mtime":1610559629398,"results":"57","hashOfConfig":"58"},{"size":364,"mtime":1610559629399,"results":"59","hashOfConfig":"58"},{"size":5064,"mtime":1610559629399,"results":"60","hashOfConfig":"58"},{"size":504,"mtime":1610559629401,"results":"61","hashOfConfig":"58"},{"size":1094,"mtime":1610655905408,"results":"62","hashOfConfig":"58"},{"size":673,"mtime":1610997094093,"results":"63","hashOfConfig":"58"},{"size":925,"mtime":1611141208589,"results":"64","hashOfConfig":"58"},{"size":774,"mtime":1610997094097,"results":"65","hashOfConfig":"58"},{"size":1600,"mtime":1611141208588,"results":"66","hashOfConfig":"58"},{"size":3605,"mtime":1611168771235,"results":"67","hashOfConfig":"58"},{"size":6054,"mtime":1611141208588,"results":"68","hashOfConfig":"58"},{"size":9360,"mtime":1611232415331,"results":"69","hashOfConfig":"58"},{"size":4345,"mtime":1611140824935,"results":"70","hashOfConfig":"58"},{"size":2032,"mtime":1611168075080,"results":"71","hashOfConfig":"58"},{"size":3215,"mtime":1611232016146,"results":"72","hashOfConfig":"58"},{"size":723,"mtime":1610796436955,"results":"73","hashOfConfig":"58"},{"size":114,"mtime":1610559629399,"results":"74","hashOfConfig":"58"},{"size":5370,"mtime":1610997094091,"results":"75","hashOfConfig":"58"},{"size":1699,"mtime":1610997160597,"results":"76","hashOfConfig":"58"},{"size":395,"mtime":1611076914463,"results":"77","hashOfConfig":"58"},{"size":2309,"mtime":1611229268634,"results":"78","hashOfConfig":"58"},{"size":655,"mtime":1610559629400,"results":"79","hashOfConfig":"58"},{"size":2873,"mtime":1611141208586,"results":"80","hashOfConfig":"58"},{"size":1123,"mtime":1611052448186,"results":"81","hashOfConfig":"58"},{"size":1485,"mtime":1611230487717,"results":"82","hashOfConfig":"58"},{"size":3499,"mtime":1611156181317,"results":"83","hashOfConfig":"58"},{"size":466,"mtime":1610881406706,"results":"84","hashOfConfig":"58"},{"size":4129,"mtime":1611158623986,"results":"85","hashOfConfig":"58"},{"size":874,"mtime":1611154895798,"results":"86","hashOfConfig":"58"},{"size":1558,"mtime":1610997094092,"results":"87","hashOfConfig":"58"},{"size":1368,"mtime":1611229306396,"results":"88","hashOfConfig":"58"},{"size":1958,"mtime":1611230532484,"results":"89","hashOfConfig":"58"},{"size":396,"mtime":1610908012223,"results":"90","hashOfConfig":"58"},{"size":1385,"mtime":1611141208586,"results":"91","hashOfConfig":"58"},{"size":1813,"mtime":1611154267985,"results":"92","hashOfConfig":"58"},{"size":894,"mtime":1611152736672,"results":"93","hashOfConfig":"58"},{"size":1305,"mtime":1611168175966,"results":"94","hashOfConfig":"58"},{"size":867,"mtime":1611052448186,"results":"95","hashOfConfig":"58"},{"size":1935,"mtime":1611052448187,"results":"96","hashOfConfig":"58"},{"size":1941,"mtime":1611052448187,"results":"97","hashOfConfig":"58"},{"size":849,"mtime":1611079520672,"results":"98","hashOfConfig":"58"},{"size":678,"mtime":1611158482746,"results":"99","hashOfConfig":"58"},{"size":1915,"mtime":1611053125499,"results":"100","hashOfConfig":"58"},{"size":540,"mtime":1611064703144,"results":"101","hashOfConfig":"58"},{"size":3949,"mtime":1611225627279,"results":"102","hashOfConfig":"58"},{"size":1039,"mtime":1611081120651,"results":"103","hashOfConfig":"58"},{"size":1086,"mtime":1611079376210,"results":"104","hashOfConfig":"58"},{"size":616,"mtime":1611052448188,"results":"105","hashOfConfig":"58"},{"size":996,"mtime":1610959978415,"results":"106","hashOfConfig":"58"},{"size":489,"mtime":1611168075078,"results":"107","hashOfConfig":"58"},{"size":1072,"mtime":1610959978415,"results":"108","hashOfConfig":"58"},{"size":749,"mtime":1610833925722,"results":"109","hashOfConfig":"58"},{"size":4778,"mtime":1611230623551,"results":"110","hashOfConfig":"58"},{"size":1045,"mtime":1610959978415,"results":"111","hashOfConfig":"58"},{"size":1570,"mtime":1611171131542,"results":"112","hashOfConfig":"58"},{"size":644,"mtime":1611232905508,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"sjdzls",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"116"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"116"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"116"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"116"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/index.js",[],["237","238"],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/reportWebVitals.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/serviceWorkerRegistration.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/store.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/App.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/reducers/userReducer.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/reducers/boardReducer.js",["239"],"const initialState = {\n    boards: [],\n    selectedBoard: {}\n}\n\nexport function boardReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_BOARDS':\n            return { ...state, boards: action.boards }\n        case 'ADD_BOARD':\n            return { ...state, boards: [, ...state.boards, action.boardAdded], selectedBoard: action.boardAdded }\n        case 'SET_BOARD':\n            return { ...state, selectedBoard: action.board }\n        case 'DELETE_BOARD':\n            return {\n                ...state,\n                boards: state.boards.filter(board => board._id !== action.boardId)\n            }\n        case 'UPDATE_BOARD':\n            return {\n                ...state,\n                boards: state.boards.map(board => (board._id === action.board._id) ? action.board : board),\n                selectedBoard: action.board\n            }\n        default:\n            return state\n    }\n}","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/routes.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/boardActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/Header.jsx",["240"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport InfoIcon from '@material-ui/icons/Info';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { connect } from 'react-redux';\nimport { logout } from './../store/actions/userActions.js';\n\nexport class _Header extends Component {\n  state = {};\n\n  onOpenSearch() {\n    const searchClass = 'not-searched' ? 'searching-now' : 'not-searched';\n  }\n\n  render() {\n    const { loggedInUser } = this.props;\n    let initials = 'G'\n    if (loggedInUser) {\n      initials = loggedInUser.fullname.substring(0, 1) + loggedInUser.fullname.charAt(loggedInUser.fullname.indexOf(' ') + 1)\n    }\n    return (\n      <div className=\"header-wrapper\">\n        <div className=\"header-left\">\n          <Link to=\"/\">\n            <button className=\"btn1\">\n              <span className=\"btn1-span\">\n                <span className=\"header-icon\">\n                  <HomeIcon></HomeIcon>\n                </span>\n              </span>\n            </button>\n          </Link>\n          <Link to=\"/Cardly\">\n            <button className=\"btn1\">\n              <span className=\"header-icon\">\n                <DashboardIcon></DashboardIcon>\n              </span>\n              <span className=\"header-icon-word\">Boards</span>\n            </button>\n          </Link>\n          <form className=\"header-input flex\">\n            <label hidden>Search Bar</label>\n            <input type=\"text\" />\n            <div className={this.searchClass} onClick={this.onOpenSearch}>\n              <div className=\"header-icon\">\n                <SearchIcon></SearchIcon>\n              </div>\n            </div>\n          </form>\n        </div>\n        <button className=\"logo-wrapper\">\n          <Link to=\"/\">\n            <span className=\"logo\">Cardly</span>\n          </Link>\n        </button>\n        <div className=\"header-right\">\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <AddIcon></AddIcon>\n              </span>\n            </div>\n          </button>\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <InfoIcon></InfoIcon>\n              </span>\n            </div>\n          </button>\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <NotificationsIcon></NotificationsIcon>\n              </span>\n            </div>\n          </button>\n\n          {loggedInUser ? (\n            <div className=\"flex\">\n              {/* Welcome {loggedInUser.fullname} */}\n              <Link to=\"/\"><button className=\"btn1\" onClick={this.props.logout}> <span className=\"header-icon-word\">Logout</span></button></Link>\n            </div>\n          ) : (\n              <Link to=\"/login\">\n                <button className=\"btn1\">\n                  <span className=\"header-icon-word\">Login</span>\n                </button>\n              </Link>\n            )}\n          <button className=\"header-username\">{initials}</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedInUser: state.userModule.loggedInUser,\n  };\n};\nconst mapDispatchToProps = {\n  logout,\n};\n\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/boardService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardDetails.jsx",["241"],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Login.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/CardlyApp.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Board.jsx",["242"],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Home.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/About.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/SignUp.jsx",["243","244"],"import React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { signup } from '../store/actions/userActions.js';\n\nexport class _SignUp extends Component {\n  state = {\n    user: {\n      firstname: '',\n      lastname: '',\n      username: '',\n      password: '',\n      isGuest: false,\n      cards: [],\n      imgUrl: '',\n    },\n    msg: '',\n  };\n  handleInput = (ev) => {\n    ev.preventDefault();\n    const { user } = this.state;\n    const name = ev.target.name;\n    const value = ev.target.value;\n    user[name] = value;\n    this.setState({ user });\n  };\n\n  onSubmit = (ev) => {\n    ev.preventDefault();\n    const { user } = this.state;\n    const fullname = user.firstname + ' ' + user.lastname;\n    delete user.firstname;\n    delete user.lastname;\n    user.fullname = fullname;\n    const { username, password } = user;\n    if (!username || !password || !fullname) {\n      return this.setState({ msg: 'All inputs are required' }, () =>\n        console.log(this.state.msg)\n      );\n    }\n    this.props.signup(user).then(() => this.props.history.push('/cardly'));\n  };\n  render() {\n    const classes = makeStyles((theme) => ({\n      paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      },\n      avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n      },\n      form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n      },\n      submit: {\n        margin: theme.spacing(3, 0, 2),\n      },\n    }));\n    return (\n      <div className=\"main-signup\">\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <div className=\"flex column center\">\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <form className={classes.form} onSubmit={this.onSubmit} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"fname\"\n                    name=\"firstname\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstname\"\n                    label=\"First Name\"\n                    autoFocus\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"lastname\"\n                    label=\"Last Name\"\n                    name=\"lastname\"\n                    autoComplete=\"lname\"\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"username\"\n                    name=\"username\"\n                    autoComplete=\"username\"\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={this.handleInput}\n                  />\n                  {this.state.msg && <label>{this.state.msg}</label>}\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign Up\n              </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"#/login\" variant=\"body2\">\n                    Already have an account? Log in\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          <Box mt={5}></Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = {\n  signup,\n};\n\nexport const SignUp = connect(mapStateToProps, mapDispatchToProps)(_SignUp);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/userActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/eventBusService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/cardActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/misc/utilService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddBoard.jsx",["245"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addBoard } from '../store/actions/boardActions';\nimport { utilService } from './../services/misc/utilService';\n\nexport class _AddBoard extends Component {\n  state = {\n    board: {\n      activities: [],\n      createdAt: Date.now(),\n      createdBy: {},\n      members: [],\n      stacks: [{ id: utilService.makeId(), cards: [], style: {}, title: '' }],\n      style: {\n        bgc: '',\n        mode: '',\n      },\n      title: '',\n    },\n  };\n\n  handleInput = (ev) => {\n    const { board } = this.state;\n    const { value } = ev.target;\n    board.title = value;\n    this.setState({ board });\n  };\n\n  async onSelectNewBoard(bgc) {\n    const { board } = this.state;\n    if (!board.title) return;\n    board.style.bgc = bgc;\n    this.setState({ board });\n    this.props.addBoard(board);\n    this.props.onCloseAddBoardSection();\n  }\n\n  render() {\n    const bgc = {\n      colors: ['#3f89e6', '#3fe6a8', '#f585ae', '#f59f85'],\n      imgsUrl: [\n        'https://res.cloudinary.com/dscb3040k/image/upload/v1611048026/Screenshot_2021-01-12_130444_ihywxs.png',\n        'https://res.cloudinary.com/dscb3040k/image/upload/v1610463893/WhatsApp_Image_2021-01-12_at_17.04.06_idr6gn.jpg',\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553514/img4_ohr2cl.png',\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553508/img3_g44phk.png',\n      ],\n    };\n    const { onCloseAddBoardSection } = this.props;\n    return (\n      <section className=\"add-new-board\">\n        <button onClick={onCloseAddBoardSection}>X</button>\n        <form>\n          <label htmlFor=\"\">Title:</label>\n          <input\n            type=\"text\"\n            name=\"\"\n            onChange={this.handleInput}\n            id=\"\"\n            value={this.state.board.title}\n          />\n        </form>\n        <div className=\" grid\">\n          {bgc.colors.map((color) => {\n            return (\n              <div\n                onClick={() => this.onSelectNewBoard(color)}\n                key={color}\n                className=\"bgc-add-board\"\n                style={{ backgroundColor: color }}\n              ></div>\n            );\n          })}\n          {bgc.imgsUrl.map((img) => {\n            return (\n              <div\n                onClick={() => this.onSelectNewBoard(img)}\n                key={img}\n                className=\"add-new-board-img\"\n              >\n                <img src={img} />\n              </div>\n            );\n          })}\n        </div>\n        {/* <button>Add </button> */}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    boards: state.boardModule.boards,\n    loggedInUser: state.userModule.loggedInUser,\n  };\n};\n\nconst mapDispatchToProps = {\n  addBoard,\n};\n\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx",["246","247"],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx",["248"],"import React, { Component } from 'react';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport { clientsClaim } from 'workbox-core';\nimport { Avatar } from '@material-ui/core';\n\n\n\nexport class CardActivity extends Component {\n\n    state = {\n        comment: '',\n        isActivitySelected: false,\n    }\n\n    componentDidMount() {\n        this.setState({ comment: this.props.comment })\n    }\n\n\n    handleChange = (ev) => {\n        let { comment } = this.state\n        comment = ev.target.value\n        this.setState({ comment })\n    }\n\n    onEditActivity = () => {\n        const { isActivitySelected } = this.state\n        isActivitySelected ? this.setState({ isActivitySelected: false }) : this.setState({ isActivitySelected: true })\n    }\n\n    convertToDate = (timestamp) => {\n        let date = new Date(timestamp).toLocaleString();\n        const dateCopy = date.split('/')\n        const day = dateCopy[0];\n        const month = dateCopy[1];\n        const year = dateCopy[2];\n        return (`${day}/${month}/${year}`)\n    }\n\n    render() {\n        const { card } = this.props\n        return <section className=\"cd-cmp flex column\">\n            <div className=\"card-act-title\">\n                <FormatListBulletedIcon className=\"act-icon\" />\n                <h3 className=\"cd-subtitle-words\">Activity</h3>\n            </div>\n            <div className=\"cd-subtitle-txt\">\n                <div className=\"cd-subtitle-txt\">\n                    <div className=\"card-act-textarea\">\n                        <textarea onChange={this.handleChange} className=\"act-textarea\" placeholder=\"Write a comment...\" ></textarea>\n                    </div>\n                    <div className=\"act-original-save flex space-between align-center\">\n                        <button className=\"save-btn\" onClick={() => this.props.onCommentAdd(this.state.comment)} >Save</button>\n                        <div className=\"activity-bar-icons\" >\n                            <AttachFileIcon className=\"activity-icon\" />\n                            <AlternateEmailIcon className=\"activity-icon\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {card.comments.map(comment => {\n                const fullname = (comment.createdBy) ? comment.createdBy.fullname : '';\n                const initials = fullname.substring(0, 1) + fullname.charAt(fullname.indexOf(' ') + 1)\n                const date = this.convertToDate(comment.createdAt)\n                // console.log('date is:', date);\n                return <div key={comment.id} >\n                    <div className=\"card-activity-container flex\">\n                        {\n                            !initials.length ? <Avatar size=\"10\" src=\"frontend/src/assets/imgs/avatar-person.svg\"></Avatar> :\n                                <Avatar size=\"10\" >{initials}</Avatar>\n                        }\n                        <div className=\"card-activity-row\">\n                            <input className=\"card-details-activity-textarea\" onClick={this.onEditActivity} onChange={this.handleChange} value={comment.txt}></input>\n                            <div className=\"card-activity-date\">{date}</div>\n                        </div>\n                    </div>\n                </div>\n            }\n            )\n            }\n\n        </section >\n    }\n}\n\n\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/userService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/stackActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/ChecklistPreview.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/CardDetailsButton.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddStack.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StackList.jsx",["249"],"import React, { Component } from 'react';\nimport { StackPreview } from './StackPreview.jsx';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { connect } from 'react-redux';\nimport {\n  updateDragCard,\n  updateDragCardToOtherList,\n} from '../store/actions/cardActions.js';\n\nexport class _StackList extends Component {\n  dragEnd = (result) => {\n    const { selectedBoard } = this.props;\n    const { stacks } = this.props.selectedBoard;\n    const { destination, source, draggableId } = result;\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    if (result.destination.droppableId === result.source.droppableId) {\n      this.props.updateDragCard(result, stacks, selectedBoard);\n    }\n    if (result.destination.droppableId !== result.source.droppableId) {\n      this.props.updateDragCardToOtherList(result, stacks, selectedBoard);\n    }\n  };\n\n  render() {\n    const { stacks } = this.props.board;\n\n    if (!stacks) return <h1>Loading ...</h1>;\n    return (\n      <div>\n        <div className=\"stack-list-container flex \">\n          <DragDropContext onDragEnd={this.dragEnd}>\n            {this.props.board.stacks.map((stack) => {\n              return (\n                <StackPreview\n                  boardId={this.props.boardId}\n                  key={stack.id}\n                  stack={stack}\n                />\n              );\n            })}\n          </DragDropContext>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n  };\n};\n\nconst mapDispatchToProps = {\n  updateDragCard,\n  updateDragCardToOtherList,\n};\n\nexport const StackList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StackList);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/BoardPreview.jsx",["250"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nexport class BoardPreview extends Component {\n  render() {\n    const { board, onRemove } = this.props;\n    const { bgc } = board.style;\n\n    return (\n      <div className=\"board-preview\">\n        {/* <button onClick={() => onRemove(board._id)}>X</button> */}\n        <div\n          className=\"board-preview-image\"\n          style={\n            bgc.startsWith('#')\n              ? { backgroundColor: bgc }\n              : { backgroundImage: `url(${bgc})` }\n          }\n        >\n          <Link to={`./cardly/${board._id}`}>\n            <div className=\"board-preview-card\">\n              <h3 className=\"board-preview-title\">{board.title}</h3>\n            </div>\n          </Link>\n        </div>\n        {/* <div class=\"board-preview-description\">Board Description and Members</div> */}\n      </div>\n    );\n  }\n}\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StatusBar.jsx",["251"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar';\n\n// import { setSelectedBoard } from '../store/actions/boardActions';\n\nexport class _StatusBar extends React.Component {\n  state = {\n    selectedBoard: {},\n  };\n  componentDidMount() {\n    const { selectedBoard } = this.props;\n    this.setState({ selectedBoard });\n  }\n\n  render() {\n    const { selectedBoard } = this.props;\n    let members = '';\n    if (!selectedBoard) return <h5>Loading...</h5>;\n    if (selectedBoard.members) {\n      members = selectedBoard.members;\n    }\n    return (\n      <section>\n        <div className='status-bar-container flex space-between' >\n          <div className=\"flex align-center\">\n            <h2 style={{ color: 'white' }}>{selectedBoard.title}</h2>\n            {members.length !== 0 && <MembersAvatar users={selectedBoard.members} />}\n          </div>\n          <button onClick={this.onMenuSelect}>Show Menu</button>\n\n        </div>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n  };\n};\n\nconst mapDispatchToProps = {};\n\nexport const StatusBar = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StatusBar);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/CheckListPopup.jsx",["252"],"import React, { Component } from 'react';\n\nexport class CheckListPopup extends Component {\n\n    state = {\n        value: 'Checklist'\n    }\n\n    handleInput = (ev) => {\n        const value = ev.target.value\n        this.setState({ value })\n    }\n\n\n    render() {\n        let { value } = this.state\n        return (\n            <section>\n                <div className=\"pop-up-checklist\">\n                    <p className=\"pop-up-header\">Add Checklist</p>\n                    <hr></hr>\n                    <div className=\"pop-up-title\">Title</div>\n                    <input autoFocus onChange={this.handleInput} defaultValue=\"Checklist\" className=\"checklist-input\"></input>\n                    <button onClick={() => { this.props.onCheckListSelect(this.state.value) }} className=\"save-btn\">Add</button>\n                </div>\n            </section>\n        )\n    }\n}\n\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/LabelsPopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/CoverPopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/MembersPopup.jsx",["253"],"import React, { Component } from 'react';\nimport { MembersList } from '../MembersList.jsx'\n\n\nexport class MembersPopup extends Component {\n\n    state = {\n\n    }\n\n\n\n    componentDidMount() {\n        //    users = getUsers()\n    }\n\n\n    render() {\n        const { isTeamShows } = this.state\n        const boardUsers = this.props.boardUsers;\n        return (\n            <section className=\"members-container\">\n                <div className=\"pop-up-members\">\n                    <p className=\"pop-up-header\"> Members</p>\n                    <hr></hr>\n                    <input autoFocus placeholder=\"Search members\" className=\"members-input\"></input>\n                    <p>BOARD MEMBERS</p>\n                    <MembersList onMemberAdd={this.props.onMemberAdd} users={boardUsers} />\n                </div>\n            </section >\n        )\n    }\n}\n\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/DueDatePopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/AttachmentPopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/storageSession.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StackPreview.jsx",["254","255"],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/httpService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/MembersList.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/cloudinaryService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/EditStack.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/TodoPreview.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddCard.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardList.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardPreview.jsx",["256","257","258","259"],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/EditCard.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/misc/socketService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardImg.jsx",[],{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":11,"column":40,"nodeType":"266","messageId":"267","endLine":11,"endColumn":78},{"ruleId":"268","severity":1,"message":"269","line":16,"column":11,"nodeType":"270","messageId":"271","endLine":16,"endColumn":22},{"ruleId":"268","severity":1,"message":"272","line":3,"column":10,"nodeType":"270","messageId":"271","endLine":3,"endColumn":18},{"ruleId":"268","severity":1,"message":"273","line":63,"column":11,"nodeType":"270","messageId":"271","endLine":63,"endColumn":21},{"ruleId":"268","severity":1,"message":"274","line":6,"column":8,"nodeType":"270","messageId":"271","endLine":6,"endColumn":24},{"ruleId":"268","severity":1,"message":"275","line":7,"column":8,"nodeType":"270","messageId":"271","endLine":7,"endColumn":16},{"ruleId":"276","severity":1,"message":"277","line":80,"column":17,"nodeType":"278","endLine":80,"endColumn":34},{"ruleId":"279","severity":1,"message":"280","line":13,"column":42,"nodeType":"281","messageId":"282","endLine":13,"endColumn":44},{"ruleId":"283","severity":1,"message":"284","line":38,"column":20,"nodeType":"285","endLine":38,"endColumn":30},{"ruleId":"268","severity":1,"message":"286","line":5,"column":10,"nodeType":"270","messageId":"271","endLine":5,"endColumn":22},{"ruleId":"268","severity":1,"message":"287","line":14,"column":34,"nodeType":"270","messageId":"271","endLine":14,"endColumn":45},{"ruleId":"268","severity":1,"message":"288","line":5,"column":20,"nodeType":"270","messageId":"271","endLine":5,"endColumn":28},{"ruleId":"268","severity":1,"message":"289","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"290","line":16,"column":15,"nodeType":"270","messageId":"271","endLine":16,"endColumn":20},{"ruleId":"268","severity":1,"message":"291","line":19,"column":17,"nodeType":"270","messageId":"271","endLine":19,"endColumn":28},{"ruleId":"268","severity":1,"message":"292","line":11,"column":10,"nodeType":"270","messageId":"271","endLine":11,"endColumn":22},{"ruleId":"268","severity":1,"message":"293","line":12,"column":10,"nodeType":"270","messageId":"271","endLine":12,"endColumn":23},{"ruleId":"268","severity":1,"message":"294","line":15,"column":8,"nodeType":"270","messageId":"271","endLine":15,"endColumn":24},{"ruleId":"283","severity":1,"message":"284","line":28,"column":19,"nodeType":"285","endLine":28,"endColumn":29},{"ruleId":"268","severity":1,"message":"295","line":62,"column":21,"nodeType":"270","messageId":"271","endLine":62,"endColumn":30},{"ruleId":"268","severity":1,"message":"296","line":66,"column":11,"nodeType":"270","messageId":"271","endLine":66,"endColumn":18},"no-native-reassign",["297"],"no-negated-in-lhs",["298"],"no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","no-unused-vars","'searchClass' is assigned a value but never used.","Identifier","unusedVar","'eventBus' is defined but never used.","'boardTitle' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'clientsClaim' is defined but never used.","'draggableId' is assigned a value but never used.","'onRemove' is assigned a value but never used.","'Component' is defined but never used.","'value' is assigned a value but never used.","'isTeamShows' is assigned a value but never used.","'boardService' is defined but never used.","'socketService' is defined but never used.","'CircularProgress' is defined but never used.","'onLoadImg' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> 877d507d69d7d90cccf273e68cc7d4b59e1362d1
>>>>>>> df305131be554152f8f78e5a5fe719d499f84dea
