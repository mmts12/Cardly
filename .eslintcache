[{"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/index.js":"1","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/serviceWorkerRegistration.js":"2","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/reportWebVitals.js":"3","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/store.js":"4","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/App.jsx":"5","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/reducers/userReducer.js":"6","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/routes.js":"7","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/reducers/boardReducer.js":"8","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/boardActions.js":"9","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/Header.jsx":"10","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Home.jsx":"11","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/SignUp.jsx":"12","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/About.jsx":"13","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardDetails.jsx":"14","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/CardlyApp.jsx":"15","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Login.jsx":"16","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/userActions.js":"17","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Board.jsx":"18","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/boardService.js":"19","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/cardActions.js":"20","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/eventBusService.js":"21","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/misc/utilService.js":"22","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddBoard.jsx":"23","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx":"24","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx":"25","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx":"26","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx":"27","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx":"28","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx":"29","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/userService.js":"30","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/stackActions.js":"31","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/CardDetailsButton.jsx":"32","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StackList.jsx":"33","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/CheckListPopup.jsx":"34","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/LabelsPopup.jsx":"35","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/DueDatePopup.jsx":"36","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/CoverPopup.jsx":"37","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/AttachmentPopup.jsx":"38","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/BoardPreview.jsx":"39","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddStack.jsx":"40","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/MembersPopup.jsx":"41","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/storageSession.js":"42","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StackPreview.jsx":"43","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/httpService.js":"44","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/cloudinaryService.js":"45","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/MembersList.jsx":"46","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/EditStack.jsx":"47","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddCard.jsx":"48","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardList.jsx":"49","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardPreview.jsx":"50","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/EditCard.jsx":"51","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StatusBar.jsx":"52"},{"size":988,"mtime":1610559629398,"results":"53","hashOfConfig":"54"},{"size":5064,"mtime":1610559629399,"results":"55","hashOfConfig":"54"},{"size":364,"mtime":1610559629399,"results":"56","hashOfConfig":"54"},{"size":504,"mtime":1610559629401,"results":"57","hashOfConfig":"54"},{"size":1094,"mtime":1610655905408,"results":"58","hashOfConfig":"54"},{"size":673,"mtime":1610997094093,"results":"59","hashOfConfig":"54"},{"size":774,"mtime":1610997094097,"results":"60","hashOfConfig":"54"},{"size":925,"mtime":1611141208589,"results":"61","hashOfConfig":"54"},{"size":1600,"mtime":1611141208588,"results":"62","hashOfConfig":"54"},{"size":3333,"mtime":1611140824934,"results":"63","hashOfConfig":"54"},{"size":723,"mtime":1610796436955,"results":"64","hashOfConfig":"54"},{"size":5370,"mtime":1610997094091,"results":"65","hashOfConfig":"54"},{"size":114,"mtime":1610559629399,"results":"66","hashOfConfig":"54"},{"size":7689,"mtime":1611140824941,"results":"67","hashOfConfig":"54"},{"size":2811,"mtime":1611141208588,"results":"68","hashOfConfig":"54"},{"size":4345,"mtime":1611140824935,"results":"69","hashOfConfig":"54"},{"size":1699,"mtime":1610997160597,"results":"70","hashOfConfig":"54"},{"size":2945,"mtime":1611147933672,"results":"71","hashOfConfig":"54"},{"size":6054,"mtime":1611141208588,"results":"72","hashOfConfig":"54"},{"size":1949,"mtime":1610959978417,"results":"73","hashOfConfig":"54"},{"size":395,"mtime":1611076914463,"results":"74","hashOfConfig":"54"},{"size":655,"mtime":1610559629400,"results":"75","hashOfConfig":"54"},{"size":2873,"mtime":1611141208586,"results":"76","hashOfConfig":"54"},{"size":466,"mtime":1610881406706,"results":"77","hashOfConfig":"54"},{"size":1123,"mtime":1611052448186,"results":"78","hashOfConfig":"54"},{"size":4130,"mtime":1611077332612,"results":"79","hashOfConfig":"54"},{"size":380,"mtime":1611049508288,"results":"80","hashOfConfig":"54"},{"size":4811,"mtime":1611140905924,"results":"81","hashOfConfig":"54"},{"size":2954,"mtime":1611140824934,"results":"82","hashOfConfig":"54"},{"size":1558,"mtime":1610997094092,"results":"83","hashOfConfig":"54"},{"size":1124,"mtime":1610907832016,"results":"84","hashOfConfig":"54"},{"size":396,"mtime":1610908012223,"results":"85","hashOfConfig":"54"},{"size":1821,"mtime":1610959978415,"results":"86","hashOfConfig":"54"},{"size":867,"mtime":1611052448186,"results":"87","hashOfConfig":"54"},{"size":1935,"mtime":1611052448187,"results":"88","hashOfConfig":"54"},{"size":598,"mtime":1611052448187,"results":"89","hashOfConfig":"54"},{"size":1941,"mtime":1611052448187,"results":"90","hashOfConfig":"54"},{"size":1915,"mtime":1611053125499,"results":"91","hashOfConfig":"54"},{"size":886,"mtime":1611141208587,"results":"92","hashOfConfig":"54"},{"size":1385,"mtime":1611141208586,"results":"93","hashOfConfig":"54"},{"size":849,"mtime":1611079520672,"results":"94","hashOfConfig":"54"},{"size":540,"mtime":1611064703144,"results":"95","hashOfConfig":"54"},{"size":3487,"mtime":1611079376209,"results":"96","hashOfConfig":"54"},{"size":1039,"mtime":1611081120651,"results":"97","hashOfConfig":"54"},{"size":616,"mtime":1611052448188,"results":"98","hashOfConfig":"54"},{"size":1086,"mtime":1611079376210,"results":"99","hashOfConfig":"54"},{"size":996,"mtime":1610959978415,"results":"100","hashOfConfig":"54"},{"size":1072,"mtime":1610959978415,"results":"101","hashOfConfig":"54"},{"size":749,"mtime":1610833925722,"results":"102","hashOfConfig":"54"},{"size":4717,"mtime":1611052592324,"results":"103","hashOfConfig":"54"},{"size":1045,"mtime":1610959978415,"results":"104","hashOfConfig":"54"},{"size":1130,"mtime":1611149305037,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"sjdzls",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"108"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/index.js",[],["222","223"],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/serviceWorkerRegistration.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/reportWebVitals.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/store.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/App.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/reducers/userReducer.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/routes.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/reducers/boardReducer.js",["224"],"const initialState = {\n    boards: [],\n    selectedBoard: {}\n}\n\nexport function boardReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_BOARDS':\n            return { ...state, boards: action.boards }\n        case 'ADD_BOARD':\n            return { ...state, boards: [, ...state.boards, action.boardAdded], selectedBoard: action.boardAdded }\n        case 'SET_BOARD':\n            return { ...state, selectedBoard: action.board }\n        case 'DELETE_BOARD':\n            return {\n                ...state,\n                boards: state.boards.filter(board => board._id !== action.boardId)\n            }\n        case 'UPDATE_BOARD':\n            return {\n                ...state,\n                boards: state.boards.map(board => (board._id === action.board._id) ? action.board : board),\n                selectedBoard: action.board\n            }\n        default:\n            return state\n    }\n}","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/boardActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/Header.jsx",["225"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport InfoIcon from '@material-ui/icons/Info';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { connect } from 'react-redux';\nimport { logout } from './../store/actions/userActions.js';\n\nexport class _Header extends Component {\n  state = {};\n\n  onOpenSearch() {\n    const searchClass = 'not-searched' ? 'searching-now' : 'not-searched';\n  }\n\n  render() {\n    const { loggedInUser } = this.props;\n    return (\n      <div className=\"header-wrapper\">\n        <div className=\"header-left\">\n          <Link to=\"/\">\n            <button className=\"btn1\">\n              <span className=\"btn1-span\">\n                <span className=\"header-icon\">\n                  <HomeIcon></HomeIcon>\n                </span>\n              </span>\n            </button>\n          </Link>\n          <Link to=\"/Cardly\">\n            <button className=\"btn1\">\n              <span className=\"header-icon\">\n                <DashboardIcon></DashboardIcon>\n              </span>\n              <span className=\"header-icon-word\">Boards</span>\n            </button>\n          </Link>\n          <form className=\"header-input flex\">\n            <label hidden>Search Bar</label>\n            <input type=\"text\" />\n            <div className={this.searchClass} onClick={this.onOpenSearch}>\n              <div className=\"header-icon\">\n                <SearchIcon></SearchIcon>\n              </div>\n            </div>\n          </form>\n        </div>\n        <button className=\"logo-wrapper\">\n          <Link to=\"/\">\n            <span className=\"logo\">Cardly</span>\n          </Link>\n        </button>\n        <div className=\"header-right\">\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <AddIcon></AddIcon>\n              </span>\n            </div>\n          </button>\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <InfoIcon></InfoIcon>\n              </span>\n            </div>\n          </button>\n          <button className=\"btn1\">\n            <div className=\"btn1-span\">\n              <span className=\"header-icon\">\n                <NotificationsIcon></NotificationsIcon>\n              </span>\n            </div>\n          </button>\n\n          {loggedInUser ? (\n            <div>\n              Welcome {loggedInUser.fullname}\n              <Link to=\"/\"><button onClick={this.props.logout}>Logout</button></Link>\n            </div>\n          ) : (\n              <Link to=\"/login\">\n                <button className=\"btn1\">\n                  <span className=\"header-icon-word\">Login</span>\n                </button>\n              </Link>\n            )}\n          <button className=\"header-username\">AS</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedInUser: state.userModule.loggedInUser,\n  };\n};\nconst mapDispatchToProps = {\n  logout,\n};\n\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Home.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/SignUp.jsx",["226","227"],"import React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { signup } from '../store/actions/userActions.js';\n\nexport class _SignUp extends Component {\n  state = {\n    user: {\n      firstname: '',\n      lastname: '',\n      username: '',\n      password: '',\n      isGuest: false,\n      cards: [],\n      imgUrl: '',\n    },\n    msg: '',\n  };\n  handleInput = (ev) => {\n    ev.preventDefault();\n    const { user } = this.state;\n    const name = ev.target.name;\n    const value = ev.target.value;\n    user[name] = value;\n    this.setState({ user });\n  };\n\n  onSubmit = (ev) => {\n    ev.preventDefault();\n    const { user } = this.state;\n    const fullname = user.firstname + ' ' + user.lastname;\n    delete user.firstname;\n    delete user.lastname;\n    user.fullname = fullname;\n    const { username, password } = user;\n    if (!username || !password || !fullname) {\n      return this.setState({ msg: 'All inputs are required' }, () =>\n        console.log(this.state.msg)\n      );\n    }\n    this.props.signup(user).then(() => this.props.history.push('/cardly'));\n  };\n  render() {\n    const classes = makeStyles((theme) => ({\n      paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      },\n      avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n      },\n      form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n      },\n      submit: {\n        margin: theme.spacing(3, 0, 2),\n      },\n    }));\n    return (\n      <div className=\"main-signup\">\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <div className=\"flex column center\">\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <form className={classes.form} onSubmit={this.onSubmit} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"fname\"\n                    name=\"firstname\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstname\"\n                    label=\"First Name\"\n                    autoFocus\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"lastname\"\n                    label=\"Last Name\"\n                    name=\"lastname\"\n                    autoComplete=\"lname\"\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"username\"\n                    name=\"username\"\n                    autoComplete=\"username\"\n                    onChange={this.handleInput}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={this.handleInput}\n                  />\n                  {this.state.msg && <label>{this.state.msg}</label>}\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign Up\n              </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"#/login\" variant=\"body2\">\n                    Already have an account? Log in\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          <Box mt={5}></Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = {\n  signup,\n};\n\nexport const SignUp = connect(mapStateToProps, mapDispatchToProps)(_SignUp);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/About.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardDetails.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/CardlyApp.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Login.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/userActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/pages/Board.jsx",["228"],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/boardService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/cardActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/eventBusService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/misc/utilService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddBoard.jsx",["229"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addBoard } from '../store/actions/boardActions';\nimport { utilService } from './../services/misc/utilService';\n\nexport class _AddBoard extends Component {\n  state = {\n    board: {\n      activities: [],\n      createdAt: Date.now(),\n      createdBy: {},\n      members: [],\n      stacks: [{ id: utilService.makeId(), cards: [], style: {}, title: '' }],\n      style: {\n        bgc: '',\n        mode: '',\n      },\n      title: '',\n    },\n  };\n\n  handleInput = (ev) => {\n    const { board } = this.state;\n    const { value } = ev.target;\n    board.title = value;\n    this.setState({ board });\n  };\n\n  async onSelectNewBoard(bgc) {\n    const { board } = this.state;\n    if (!board.title) return;\n    board.style.bgc = bgc;\n    this.setState({ board });\n    this.props.addBoard(board);\n    this.props.onCloseAddBoardSection();\n  }\n\n  render() {\n    const bgc = {\n      colors: ['#3f89e6', '#3fe6a8', '#f585ae', '#f59f85'],\n      imgsUrl: [\n        'https://res.cloudinary.com/dscb3040k/image/upload/v1611048026/Screenshot_2021-01-12_130444_ihywxs.png',\n        'https://res.cloudinary.com/dscb3040k/image/upload/v1610463893/WhatsApp_Image_2021-01-12_at_17.04.06_idr6gn.jpg',\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553514/img4_ohr2cl.png',\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553508/img3_g44phk.png',\n      ],\n    };\n    const { onCloseAddBoardSection } = this.props;\n    return (\n      <section className=\"add-new-board\">\n        <button onClick={onCloseAddBoardSection}>X</button>\n        <form>\n          <label htmlFor=\"\">Title:</label>\n          <input\n            type=\"text\"\n            name=\"\"\n            onChange={this.handleInput}\n            id=\"\"\n            value={this.state.board.title}\n          />\n        </form>\n        <div className=\" grid\">\n          {bgc.colors.map((color) => {\n            return (\n              <div\n                onClick={() => this.onSelectNewBoard(color)}\n                key={color}\n                className=\"bgc-add-board\"\n                style={{ backgroundColor: color }}\n              ></div>\n            );\n          })}\n          {bgc.imgsUrl.map((img) => {\n            return (\n              <div\n                onClick={() => this.onSelectNewBoard(img)}\n                key={img}\n                className=\"add-new-board-img\"\n              >\n                <img src={img} />\n              </div>\n            );\n          })}\n        </div>\n        {/* <button>Add </button> */}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    boards: state.boardModule.boards,\n    loggedInUser: state.userModule.loggedInUser,\n  };\n};\n\nconst mapDispatchToProps = {\n  addBoard,\n};\n\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx",["230"],"import React, { Component } from 'react';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport { clientsClaim } from 'workbox-core';\nimport { Avatar } from '@material-ui/core';\n\n\n\nexport class CardActivity extends Component {\n\n    state = {\n        comment: '',\n        isActivitySelected: false,\n    }\n\n    componentDidMount() {\n        this.setState({ comment: this.props.comment })\n    }\n\n\n    handleChange = (ev) => {\n        let { comment } = this.state\n        comment = ev.target.value\n        this.setState({ comment })\n    }\n\n    onEditActivity = () => {\n        const { isActivitySelected } = this.state\n        isActivitySelected ? this.setState({ isActivitySelected: false }) : this.setState({ isActivitySelected: true })\n    }\n\n    convertToDate = (timestamp) => {\n        console.log('timestamp is:', timestamp);\n        const date = new Date(timestamp).toLocaleString();\n        console.log('date is:', date);\n        const day = date.substring(0, date.indexOf('/'));\n        const month = date.substring(2, 4);\n        const year = date.substring(5, 7);\n        const time = date.substring(11, 16);\n\n        return (`${day}-${month}-${year} ${time}`)\n    }\n\n    render() {\n        const { card } = this.props\n        return <section className=\"cd-cmp flex column\">\n\n            <div className=\"card-act-title\">\n                <FormatListBulletedIcon className=\"act-icon\" />\n                <h3 className=\"cd-subtitle-words\">Activity</h3>\n            </div>\n            <div className=\"cd-subtitle-txt\">\n                <div className=\"card-act-textarea\">\n                    <textarea onChange={this.handleChange} className=\"act-textarea\" placeholder=\"Write a comment...\" ></textarea>\n                </div>\n                <div className=\"cd-subtitle-txt\">\n                    <div className=\"card-act-textarea\">\n                        <textarea onChange={this.handleChange} className=\"act-textarea\" placeholder=\"Write a comment...\" ></textarea>\n                    </div>\n                    <div className=\"act-original-save flex space-between align-center\">\n                        <button className=\"save-btn\" onClick={() => this.props.onCommentAdd(this.state.comment)} >Save</button>\n                        <div className=\"activity-bar-icons\" >\n                            <AttachFileIcon className=\"activity-icon\" />\n                            <AlternateEmailIcon className=\"activity-icon\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {card.comments.map(comment => {\n                const fullname = (comment.createdBy) ? comment.createdBy.fullname : '';\n                const initials = fullname.substring(0, 1) + fullname.charAt(fullname.indexOf(' ') + 1)\n                const date = this.convertToDate(comment.createdAt)\n                // console.log('date is:', date);\n                return <div key={comment.id} >\n                    {!this.state.isActivitySelected ? (\n                        <div className=\"card-activity-container flex\">\n                            {\n                                !initials.length ? <Avatar size=\"10\" src=\"frontend/src/assets/imgs/avatar-person.svg\"></Avatar> :\n                                    <Avatar size=\"10\" >{initials}</Avatar>\n                            }\n                            <textarea className=\"card-details-activity-textarea\" onClick={this.onEditActivity} onChange={this.handleChange} value={comment.txt}></textarea>\n                            <div>{date}</div>\n                        </div>\n                    ) :\n                        (<>\n                            <div className=\"card-activity-container\">\n                                <textarea className=\"card-details-activity-textarea\" onClick={this.onEditActivity} onChange={this.handleChange} value={comment.txt}></textarea>\n                            </div>\n                            <div className=\"activity-bar flex space-between\">\n                                < div className=\"activity-btn-save\" >\n                                    <button className=\"card-desc-save-btn\" >Save</button>\n                                </div>\n                                <div className=\"activity-bar-icons\" >\n                                    <AttachFileIcon className=\"activity-icon\" />\n                                    <AlternateEmailIcon className=\"activity-icon\" />\n                                </div>\n                            </div>\n                        </>\n                        )\n                    }\n                </div>\n            }\n            )\n            }\n\n        </section >\n    }\n}\n\n\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx",["231","232"],"import React, { Component } from 'react';\nimport { utilService } from '../../../services/misc/utilService.js';\nimport LibraryAddCheckOutlinedIcon from '@material-ui/icons/LibraryAddCheckOutlined';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nexport class CardChecklist extends Component {\n\n    state = {\n        show: false,\n        newTodo: '',\n        todos: []\n    }\n\n    componentDidMount() {\n        let todos = []\n        this.props.checklists.map(todoList => {\n            todos.push(todoList)\n        })\n        this.setState({ todos })\n    }\n\n    toggleAddItem() {\n        let { show } = this.state\n        show = !show\n        this.setState({ show })\n    }\n\n    handleInput = (ev) => {\n        let { newTodo } = this.state\n        newTodo = ev.target.value\n        this.setState({ newTodo })\n    }\n\n    addTodo = (currChecklist) => {\n        currChecklist.todos.push({ id: utilService.makeId(), txt: this.state.newTodo, isDone: false, createdAt: Date.now() })\n        this.setState(this.state.todos = currChecklist.todos)\n    }\n\n    render() {\n        const { checklists } = this.props\n        const { show } = this.state\n        return (<div>\n            {checklists.map(checklist => {\n                return <section key={checklist.id} className=\"checklist flex column\">\n                    <div className=\"flex space-between column\">\n                        <div className=\"cl-subtitle \">\n                            <LibraryAddCheckOutlinedIcon className=\"checklist-icon\" />\n                            <div className=\"cl-inner-span flex space-between\">\n                                <h3 className=\"cl-subtitle-txt flex align-center\"> {checklist.title}</h3>\n                                <button className=\"checklist-del-btn\" onClick={() => { this.props.onRemove(checklist.id) }}>Delete</button>\n                            </div>\n                        </div>\n                        {checklist.todos.map(todo => {\n                            return <div key={todo.id} className=\"todo-row flex space-between\">\n                                <div>\n                                    <input type=\"checkbox\" ></input>\n                                    <span className=\"todo-txt\">{todo.txt}</span>\n                                </div>\n                                <DeleteIcon className=\"todo-delete-icon\"></DeleteIcon>\n                            </div>\n                        })}\n                        <div className=\"flex\"><button className=\"checklist-add\" onClick={() => this.toggleAddItem()} >Add an Item</button></div>\n                        {show && <div>\n                            <input onChange={this.handleInput} placeholder=\"Add an item\" ></input>\n                            <button onClick={() => this.addTodo(checklist)}>Add</button>\n                        </div>\n                        }\n                    </div>\n                </section>\n\n            })}\n        </div>\n        )\n    }\n}\n\n\n\n\n\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/userService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/store/actions/stackActions.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/CardDetailsButton.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StackList.jsx",["233"],"import React, { Component } from 'react';\nimport { StackPreview } from './StackPreview.jsx';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { connect } from 'react-redux';\nimport {\n  updateDragCard,\n  updateDragCardToOtherList,\n} from '../store/actions/cardActions.js';\n\nexport class _StackList extends Component {\n  dragEnd = (result) => {\n    const { selectedBoard } = this.props;\n    const { stacks } = this.props.selectedBoard;\n    const { destination, source, draggableId } = result;\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    if (result.destination.droppableId === result.source.droppableId) {\n      this.props.updateDragCard(result, stacks, selectedBoard);\n    }\n    if (result.destination.droppableId !== result.source.droppableId) {\n      this.props.updateDragCardToOtherList(result, stacks, selectedBoard);\n    }\n  };\n\n  render() {\n    const { stacks } = this.props.board;\n\n    if (!stacks) return <h1>Loading ...(stacks)</h1>;\n    return (\n      <div>\n        <div className=\"stack-list-container flex \">\n          <DragDropContext onDragEnd={this.dragEnd}>\n            {this.props.board.stacks.map((stack) => {\n              return (\n                <StackPreview\n                  boardId={this.props.boardId}\n                  key={stack.id}\n                  stack={stack}\n                />\n              );\n            })}\n          </DragDropContext>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n  };\n};\n\nconst mapDispatchToProps = {\n  updateDragCard,\n  updateDragCardToOtherList,\n};\n\nexport const StackList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StackList);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/CheckListPopup.jsx",["234"],"import React, { Component } from 'react';\n\nexport class CheckListPopup extends Component {\n\n    state = {\n        value: 'Checklist'\n    }\n\n    handleInput = (ev) => {\n        const value = ev.target.value\n        this.setState({ value })\n    }\n\n\n    render() {\n        let { value } = this.state\n        return (\n            <section>\n                <div className=\"pop-up-checklist\">\n                    <p className=\"pop-up-header\">Add Checklist</p>\n                    <hr></hr>\n                    <div className=\"pop-up-title\">Title</div>\n                    <input autoFocus onChange={this.handleInput} defaultValue=\"Checklist\" className=\"checklist-input\"></input>\n                    <button onClick={() => { this.props.onCheckListSelect(this.state.value) }} className=\"save-btn\">Add</button>\n                </div>\n            </section>\n        )\n    }\n}\n\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/LabelsPopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/DueDatePopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/CoverPopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/AttachmentPopup.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/BoardPreview.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddStack.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/cardDetailsPopUps/MembersPopup.jsx",["235"],"import React, { Component } from 'react';\nimport { MembersList } from '../MembersList.jsx'\n\n\nexport class MembersPopup extends Component {\n\n    state = {\n\n    }\n\n\n\n    componentDidMount() {\n        //    users = getUsers()\n    }\n\n\n    render() {\n        const { isTeamShows } = this.state\n        const boardUsers = this.props.boardUsers;\n        return (\n            <section className=\"members-container\">\n                <div className=\"pop-up-members\">\n                    <p className=\"pop-up-header\"> Members</p>\n                    <hr></hr>\n                    <input autoFocus placeholder=\"Search members\" className=\"members-input\"></input>\n                    <p>BOARD MEMBERS</p>\n                    <MembersList onMemberAdd={this.props.onMemberAdd} users={boardUsers} />\n                </div>\n            </section >\n        )\n    }\n}\n\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/storageSession.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StackPreview.jsx",["236"],"import React, { Component } from 'react';\nimport { CardList } from './CardList';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { connect } from 'react-redux';\nimport { removeStack, saveStack } from '../store/actions/stackActions.js';\nimport { addCard } from '../store/actions/cardActions';\nimport { setSelectedBoard } from '../store/actions/boardActions';\nimport { EditStack } from './EditStack.jsx';\nimport AddIcon from '@material-ui/icons/Add';\nimport { AddCard } from './AddCard';\nimport { boardService } from './../services/boardService';\n\nexport class _StackPreview extends Component {\n  state = {\n    isEditShow: false,\n    isAddShow: false,\n  };\n\n  onRemoveStack = () => {\n    const { stack, selectedBoard, removeStack } = this.props;\n    removeStack(stack.id, selectedBoard._id, selectedBoard);\n  };\n\n  onEdit = () => {\n    this.setState({ isEditShow: true });\n  };\n\n  onSaveStack = (stack) => {\n    const { selectedBoard } = this.props;\n    console.log('selectedBoard is:', this.props.selectedBoard);\n    this.props.saveStack(stack, selectedBoard);\n    this.setState({ isEditShow: false });\n  };\n\n  // componentDidUpdate() {\n  //   this.loadBoard();\n  // }\n\n  // loadBoard = () => {\n  //   const { selectedBoard } = this.props;\n  //   this.props.setSelectedBoard(selectedBoard);\n  // };\n\n  onAddCard = () => {\n    this.setState({ isAddShow: true });\n  };\n\n  onCloseAddSection = () => {\n    this.setState({ isAddShow: false });\n  };\n\n  onAddNewCard = (cardToadd) => {\n    const { stack, selectedBoard } = this.props;\n    this.onCloseAddSection();\n    // const board = boardService.addCard(cardToadd, stack, selectedBoard);\n    // console.log(board);\n    this.props.addCard(cardToadd, stack, selectedBoard);\n  };\n\n  render() {\n    const { stack } = this.props;\n    return (\n      <div className=\"stack-preview-card card-list\">\n        <div className=\"stack-title flex\">\n          {this.state.isEditShow ? (\n            <EditStack\n              className=\"stack-preview-edit flex\"\n              saveStack={this.onSaveStack}\n              stack={stack}\n            />\n          ) : (\n            <div className=\"flex space-between align-center\">\n              <h4 onClick={this.onEdit} className=\"stack-title-words\">\n                {stack.title}\n              </h4>\n              <div onClick={this.onRemoveStack} className=\"flex\">\n                <DeleteIcon className=\"stack-preview-delete-icon\"></DeleteIcon>\n              </div>\n            </div>\n          )}\n        </div>\n        <CardList stack={stack} cards={stack.cards} />\n        {this.state.isAddShow ? (\n          <AddCard\n            addNewCard={this.onAddNewCard}\n            closeAddSection={this.onCloseAddSection}\n          />\n        ) : (\n          <div\n            onClick={this.onAddCard}\n            className=\"add-new-card flex align-center\"\n          >\n            <div className=\"add-icon flex justify-center align-center\">\n              <AddIcon></AddIcon>\n            </div>\n            <span className=\"add-text flex justify-center align-center\">\n              Add Another Card\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  removeStack,\n  setSelectedBoard,\n  saveStack,\n  addCard,\n};\n\nexport const StackPreview = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StackPreview);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/httpService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/services/cloudinaryService.js",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/cardDetailsCmps/MembersList.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/EditStack.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/AddCard.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardList.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/CardPreview.jsx",["237","238","239","240"],"import React, { Component } from 'react';\nimport { CardDetails } from './CardDetails';\nimport { CardLabels } from './cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { removeCard, saveCard } from '../store/actions/cardActions.js';\nimport { connect } from 'react-redux';\nimport { EditCard } from './EditCard';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport class _CardPreview extends Component {\n  state = {\n    isCardDetailsSelected: false,\n    isEditCardModalShow: false,\n    card: {},\n    labels: [],\n  };\n\n  componentDidMount() {\n    const { card } = this.props\n    this.setState({ card })\n    this.setState(this.state.labels = this.props.card.labels)\n  }\n\n  onShowCardDetails = () => {\n    this.setState({ isCardDetailsSelected: true });\n  };\n\n  closeModal = (ev) => {\n    ev.stopPropagation();\n    this.setState({ isCardDetailsSelected: false });\n  };\n\n  onRemoveCard = (cardId) => {\n    const { selectedBoard, stack } = this.props;\n    this.props.removeCard(cardId, stack, selectedBoard);\n  };\n\n  onEditCard = () => {\n    this.setState({ isEditCardModalShow: true });\n  };\n\n  onSaveEditedCard = (card) => {\n    const { selectedBoard, stack } = this.props;\n    this.props.saveCard(card, stack, selectedBoard);\n    this.setState({ isEditCardModalShow: false });\n  };\n\n  render() {\n    const { card, stack, index } = this.props;\n    const { labels, onLoadImg } = this.state;\n    const { coverColor } = this.state.card;\n    const { isCardDetailsSelected, isEditCardModalShow } = this.state;\n    if (!card || !stack) return <h1>loading..</h1>;\n    const classes = makeStyles((theme) => ({\n      root: {\n        display: 'flex',\n        '& > * + *': {\n          marginLeft: theme.spacing(2),\n        },\n      },\n    }));\n    return (\n      <>\n        <Draggable draggableId={card.id} index={index}>\n          {(provided) => (\n            <div\n              className=\"card-preview\"\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              {coverColor !== '' && (\n                <div\n                  className=\"card-preview-color\"\n                  style={{ background: `${coverColor}` }}\n                ></div>\n              )}\n              {labels.length !== 0 && <CardLabels labels={labels} />}\n\n              <div className=\"card-preview-line flex space-between\">\n                {!isEditCardModalShow ? (\n                  <div className=\"card-preview-icons flex space-between\">\n                    <div onClick={this.onShowCardDetails}>{card.title}</div>\n                    {card.imgUrl && (\n                      <div>\n                        <img src={card.imgUrl} alt=\"\" />\n                      </div>\n                    )}\n                    {/* {onLoadImg && (\n                      <div className={classes.root}>\n                        <CircularProgress />\n                      </div>\n                    )} */}\n                    <div className=\"icons-container flex\">\n                      <div onClick={this.onEditCard}>\n                        <span>\n                          <EditIcon className=\"card-preview-edit-icon\"></EditIcon>\n                        </span>\n                      </div>\n                      <div onClick={() => this.onRemoveCard(card.id)}>\n                        <span>\n                          <DeleteIcon className=\"card-preview-edit-icon\"></DeleteIcon>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                    <EditCard\n                      saveEditedCard={this.onSaveEditedCard}\n                      card={card}\n                    ></EditCard>\n                  )}\n              </div>\n              {card.members.length !== 0 && <MembersAvatar users={card.members} />}\n            </div>\n          )}\n        </Draggable>\n        {isCardDetailsSelected && (\n          <CardDetails\n            stack={stack}\n            card={card}\n            onCloseModal={this.closeModal}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBoard: state.boardModule.selectedBoard,\n    boards: state.boardModule.boards,\n  };\n};\n\nconst mapDispatchToProps = {\n  removeCard,\n  saveCard,\n};\n\nexport const CardPreview = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_CardPreview);\n","/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/EditCard.jsx",[],"/Users/adimagori/Development/Coding Academy/Final project/cardly/frontend/src/cmps/StatusBar.jsx",["241"],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":11,"column":40,"nodeType":"248","messageId":"249","endLine":11,"endColumn":78},{"ruleId":"250","severity":1,"message":"251","line":16,"column":11,"nodeType":"252","messageId":"253","endLine":16,"endColumn":22},{"ruleId":"250","severity":1,"message":"254","line":6,"column":8,"nodeType":"252","messageId":"253","endLine":6,"endColumn":24},{"ruleId":"250","severity":1,"message":"255","line":7,"column":8,"nodeType":"252","messageId":"253","endLine":7,"endColumn":16},{"ruleId":"250","severity":1,"message":"256","line":55,"column":11,"nodeType":"252","messageId":"253","endLine":55,"endColumn":21},{"ruleId":"257","severity":1,"message":"258","line":80,"column":17,"nodeType":"259","endLine":80,"endColumn":34},{"ruleId":"250","severity":1,"message":"260","line":5,"column":10,"nodeType":"252","messageId":"253","endLine":5,"endColumn":22},{"ruleId":"261","severity":1,"message":"262","line":17,"column":44,"nodeType":"263","messageId":"264","endLine":17,"endColumn":46},{"ruleId":"265","severity":1,"message":"266","line":37,"column":23,"nodeType":"267","endLine":37,"endColumn":33},{"ruleId":"250","severity":1,"message":"268","line":14,"column":34,"nodeType":"252","messageId":"253","endLine":14,"endColumn":45},{"ruleId":"250","severity":1,"message":"269","line":16,"column":15,"nodeType":"252","messageId":"253","endLine":16,"endColumn":20},{"ruleId":"250","severity":1,"message":"270","line":19,"column":17,"nodeType":"252","messageId":"253","endLine":19,"endColumn":28},{"ruleId":"250","severity":1,"message":"271","line":11,"column":10,"nodeType":"252","messageId":"253","endLine":11,"endColumn":22},{"ruleId":"250","severity":1,"message":"272","line":13,"column":8,"nodeType":"252","messageId":"253","endLine":13,"endColumn":24},{"ruleId":"265","severity":1,"message":"266","line":26,"column":19,"nodeType":"267","endLine":26,"endColumn":29},{"ruleId":"250","severity":1,"message":"273","line":55,"column":21,"nodeType":"252","messageId":"253","endLine":55,"endColumn":30},{"ruleId":"250","severity":1,"message":"274","line":59,"column":11,"nodeType":"252","messageId":"253","endLine":59,"endColumn":18},{"ruleId":"250","severity":1,"message":"275","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":26},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],"no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","no-unused-vars","'searchClass' is assigned a value but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'boardTitle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'clientsClaim' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'draggableId' is assigned a value but never used.","'value' is assigned a value but never used.","'isTeamShows' is assigned a value but never used.","'boardService' is defined but never used.","'CircularProgress' is defined but never used.","'onLoadImg' is assigned a value but never used.","'classes' is assigned a value but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]