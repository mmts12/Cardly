[{"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\index.js":"1","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\store.js":"4","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\App.jsx":"5","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\reducers\\userReducer.js":"6","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\reducers\\boardReducer.js":"7","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\routes.js":"8","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\boardActions.js":"9","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\Header.jsx":"10","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\misc\\socketService.js":"11","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\boardService.js":"12","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\CardDetails.jsx":"13","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\Login.jsx":"14","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\CardlyApp.jsx":"15","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\About.jsx":"16","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\SignUp.jsx":"17","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\Home.jsx":"18","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\Board.jsx":"19","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\userActions.js":"20","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\eventBusService.js":"21","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\misc\\utilService.js":"22","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\cardActions.js":"23","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\AddBoard.jsx":"24","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardSideBar.jsx":"25","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardDescription.jsx":"26","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardActivity.jsx":"27","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardLabels.jsx":"28","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\MembersAvatar.jsx":"29","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardImg.jsx":"30","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardChecklist.jsx":"31","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\userService.js":"32","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\stackActions.js":"33","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\CardDetailsButton.jsx":"34","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\BoardPreview.jsx":"35","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\ChecklistPreview.jsx":"36","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\MembersPopup.jsx":"37","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\LabelsPopup.jsx":"38","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\DueDatePopup.jsx":"39","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\CheckListPopup.jsx":"40","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\CoverPopup.jsx":"41","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\AttachmentPopup.jsx":"42","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\AddStack.jsx":"43","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\StackList.jsx":"44","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\StatusBar.jsx":"45","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\storageSession.js":"46","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\httpService.js":"47","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\StackPreview.jsx":"48","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\cloudinaryService.js":"49","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\MembersList.jsx":"50","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\EditStack.jsx":"51","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\TodoPreview.jsx":"52","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\LinearProgressWithLabel.jsx":"53","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\DateAndTimePickers.jsx":"54","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\CardList.jsx":"55","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\AddCard.jsx":"56","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\CardPreview.jsx":"57","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\EditCard.jsx":"58"},{"size":988,"mtime":1610540025241,"results":"59","hashOfConfig":"60"},{"size":364,"mtime":499162500000,"results":"61","hashOfConfig":"60"},{"size":5064,"mtime":499162500000,"results":"62","hashOfConfig":"60"},{"size":518,"mtime":1610624055378,"results":"63","hashOfConfig":"60"},{"size":1143,"mtime":1610654481415,"results":"64","hashOfConfig":"60"},{"size":697,"mtime":1610987957508,"results":"65","hashOfConfig":"60"},{"size":952,"mtime":1611133902578,"results":"66","hashOfConfig":"60"},{"size":813,"mtime":1611401177172,"results":"67","hashOfConfig":"60"},{"size":1791,"mtime":1611265000949,"results":"68","hashOfConfig":"60"},{"size":3890,"mtime":1611409375339,"results":"69","hashOfConfig":"60"},{"size":1637,"mtime":1611254904860,"results":"70","hashOfConfig":"60"},{"size":6380,"mtime":1611410745728,"results":"71","hashOfConfig":"60"},{"size":10904,"mtime":1611402942859,"results":"72","hashOfConfig":"60"},{"size":4504,"mtime":1611141037380,"results":"73","hashOfConfig":"60"},{"size":2153,"mtime":1611254904858,"results":"74","hashOfConfig":"60"},{"size":123,"mtime":1610534575308,"results":"75","hashOfConfig":"60"},{"size":5543,"mtime":1610996021600,"results":"76","hashOfConfig":"60"},{"size":2246,"mtime":1611409375341,"results":"77","hashOfConfig":"60"},{"size":3531,"mtime":1611409375340,"results":"78","hashOfConfig":"60"},{"size":1760,"mtime":1610987967658,"results":"79","hashOfConfig":"60"},{"size":410,"mtime":1611080751603,"results":"80","hashOfConfig":"60"},{"size":681,"mtime":1610539907962,"results":"81","hashOfConfig":"60"},{"size":2390,"mtime":1611339778012,"results":"82","hashOfConfig":"60"},{"size":3326,"mtime":1611325510010,"results":"83","hashOfConfig":"60"},{"size":5046,"mtime":1611347186627,"results":"84","hashOfConfig":"60"},{"size":1372,"mtime":1611402412195,"results":"85","hashOfConfig":"60"},{"size":3588,"mtime":1611169039772,"results":"86","hashOfConfig":"60"},{"size":483,"mtime":1610908339655,"results":"87","hashOfConfig":"60"},{"size":917,"mtime":1611325510018,"results":"88","hashOfConfig":"60"},{"size":774,"mtime":1611401177171,"results":"89","hashOfConfig":"60"},{"size":2005,"mtime":1611255189804,"results":"90","hashOfConfig":"60"},{"size":1620,"mtime":1610988150643,"results":"91","hashOfConfig":"60"},{"size":1849,"mtime":1611264865623,"results":"92","hashOfConfig":"60"},{"size":413,"mtime":1610908339651,"results":"93","hashOfConfig":"60"},{"size":923,"mtime":1611152646021,"results":"94","hashOfConfig":"60"},{"size":2924,"mtime":1611257761271,"results":"95","hashOfConfig":"60"},{"size":1149,"mtime":1611325510023,"results":"96","hashOfConfig":"60"},{"size":2309,"mtime":1611325510022,"results":"97","hashOfConfig":"60"},{"size":1191,"mtime":1611348269872,"results":"98","hashOfConfig":"60"},{"size":1243,"mtime":1611325510020,"results":"99","hashOfConfig":"60"},{"size":2315,"mtime":1611325510021,"results":"100","hashOfConfig":"60"},{"size":2572,"mtime":1611325823667,"results":"101","hashOfConfig":"60"},{"size":1551,"mtime":1611325510013,"results":"102","hashOfConfig":"60"},{"size":2601,"mtime":1611341538956,"results":"103","hashOfConfig":"60"},{"size":1507,"mtime":1611325510014,"results":"104","hashOfConfig":"60"},{"size":566,"mtime":1611080751604,"results":"105","hashOfConfig":"60"},{"size":1081,"mtime":1610988148122,"results":"106","hashOfConfig":"60"},{"size":4673,"mtime":1611343586388,"results":"107","hashOfConfig":"60"},{"size":616,"mtime":1611002443365,"results":"108","hashOfConfig":"60"},{"size":1124,"mtime":1611080751597,"results":"109","hashOfConfig":"60"},{"size":1041,"mtime":1610912531270,"results":"110","hashOfConfig":"60"},{"size":773,"mtime":1611255275191,"results":"111","hashOfConfig":"60"},{"size":689,"mtime":1611257549276,"results":"112","hashOfConfig":"60"},{"size":806,"mtime":1611410829802,"results":"113","hashOfConfig":"60"},{"size":1004,"mtime":1611343632841,"results":"114","hashOfConfig":"60"},{"size":1226,"mtime":1611403742322,"results":"115","hashOfConfig":"60"},{"size":6191,"mtime":1611411567017,"results":"116","hashOfConfig":"60"},{"size":1093,"mtime":1610918504996,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"1ue5d5c",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"120"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"120"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"120"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"120"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"120"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\index.js",[],["252","253"],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\store.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\App.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\reducers\\boardReducer.js",["254"],"const initialState = {\r\n    boards: [],\r\n    selectedBoard: {}\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return { ...state, boards: action.boards }\r\n        case 'ADD_BOARD':\r\n            return { ...state, boards: [, ...state.boards, action.boardAdded], selectedBoard: action.boardAdded }\r\n        case 'SET_BOARD':\r\n            return { ...state, selectedBoard: action.board }\r\n        case 'DELETE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id !== action.boardId)\r\n            }\r\n        case 'UPDATE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.map(board => (board._id === action.board._id) ? action.board : board),\r\n                selectedBoard: action.board\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\routes.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\boardActions.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\Header.jsx",["255","256","257","258"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from './../store/actions/userActions.js';\r\n\r\nexport class _Header extends Component {\r\n  state = {};\r\n\r\n  onOpenSearch() {\r\n    const searchClass = 'not-searched' ? 'searching-now' : 'not-searched';\r\n  }\r\n\r\n  render() {\r\n    const { loggedInUser } = this.props;\r\n    let initials = 'G';\r\n    if (loggedInUser) {\r\n      initials =\r\n        loggedInUser.fullname.substring(0, 1) +\r\n        loggedInUser.fullname.charAt(loggedInUser.fullname.indexOf(' ') + 1);\r\n    }\r\n    return (\r\n      <div className=\"header-wrapper\">\r\n        <div className=\"header-left\">\r\n          <Link to=\"/\">\r\n            <button className=\"btn1\">\r\n              <span className=\"btn1-span\">\r\n                <span className=\"header-icon\">\r\n                  <HomeIcon></HomeIcon>\r\n                </span>\r\n              </span>\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/Cardly\">\r\n            <button className=\"btn1\">\r\n              <span className=\"header-icon\">\r\n                <DashboardIcon></DashboardIcon>\r\n              </span>\r\n              <span className=\"header-icon-word\">Boards</span>\r\n            </button>\r\n          </Link>\r\n          {/* <form className=\"header-input flex\">\r\n            <label hidden>Search Bar</label>\r\n            <input type=\"text\" />\r\n            <div className={this.searchClass} onClick={this.onOpenSearch}>\r\n              <div className=\"header-icon\">\r\n                <SearchIcon></SearchIcon>\r\n              </div>\r\n            </div>\r\n          </form> */}\r\n        </div>\r\n        <button className=\"logo-wrapper\">\r\n          <Link to=\"/\">\r\n            <span className=\"logo\">Cardly</span>\r\n          </Link>\r\n        </button>\r\n        <div className=\"header-right\">\r\n          {/* <button className=\"btn1\">\r\n            <div className=\"btn1-span\">\r\n              <span className=\"header-icon\">\r\n                <AddIcon></AddIcon>\r\n              </span>\r\n            </div>\r\n          </button> */}\r\n          {/* <button className=\"btn1\">\r\n            <div className=\"btn1-span\">\r\n              <span className=\"header-icon\">\r\n                <InfoIcon></InfoIcon>\r\n              </span>\r\n            </div>\r\n          </button> */}\r\n          <button className=\"btn1\">\r\n            <div className=\"btn1-span\">\r\n              <span className=\"header-icon\">\r\n                <NotificationsIcon></NotificationsIcon>\r\n              </span>\r\n            </div>\r\n          </button>\r\n\r\n          {loggedInUser ? (\r\n            <div className=\"flex\">\r\n              {/* Welcome {loggedInUser.fullname} */}\r\n              <Link to=\"/\">\r\n                <button className=\"btn1\" onClick={this.props.logout}>\r\n                  {' '}\r\n                  <span className=\"header-icon-word\">Logout</span>\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <Link to=\"/login\">\r\n              <button className=\"btn1\">\r\n                <span className=\"header-icon-word\">Login</span>\r\n              </button>\r\n            </Link>\r\n          )}\r\n          <div className=\"header-avatar\"> <button className=\"header-username pointer\">{initials}</button></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedInUser: state.userModule.loggedInUser,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  logout,\r\n};\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\misc\\socketService.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\boardService.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\CardDetails.jsx",["259"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { eventBus } from '../services/eventBusService.js';\r\nimport { utilService } from '../services/misc/utilService.js';\r\nimport { CardSideBar } from './cardDetailsCmps/cardDetailsBodyCmps/CardSideBar.jsx';\r\nimport { CardDescription } from './cardDetailsCmps/cardDetailsBodyCmps/CardDescription.jsx';\r\nimport { CardActivity } from './cardDetailsCmps/cardDetailsBodyCmps/CardActivity.jsx';\r\nimport { CardLabels } from './cardDetailsCmps/cardDetailsBodyCmps/CardLabels.jsx';\r\nimport { CardChecklist } from './cardDetailsCmps/cardDetailsBodyCmps/CardChecklist.jsx';\r\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar.jsx';\r\nimport { saveCard } from '../store/actions/cardActions.js';\r\nimport { CardImg } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/CardImg.jsx';\r\nimport { loadUsers } from '../store/actions/userActions.js';\r\nimport { userService } from '../services/userService';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\n\r\nexport class _CardDetails extends Component {\r\n  state = {\r\n    card: {\r\n      comments: [],\r\n      labels: [],\r\n      checklists: [],\r\n      coverColor: '',\r\n      members: [],\r\n      dueDate: '',\r\n    },\r\n    boardUsers: [],\r\n    loggedUser: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { card } = this.props;\r\n    const boardUsers = this.props.selectedBoard.members;\r\n    let loggedUser = userService.getLoggedinUser();\r\n    if (!loggedUser) {\r\n      loggedUser = { fullname: 'Guest' };\r\n      console.log('loggedUser is:', loggedUser);\r\n    }\r\n    this.setState({ loggedUser });\r\n    this.setState({ card });\r\n    this.setState({ boardUsers });\r\n  }\r\n\r\n  onMemberAdd = (user) => {\r\n    let { card } = this.state;\r\n    let { loggedUser } = this.state;\r\n\r\n    const memberIndx = card.members.findIndex(\r\n      (member) => member._id === user._id\r\n    );\r\n    if (memberIndx === -1) {\r\n      card.members.push(user);\r\n      card.comments.unshift({\r\n        id: utilService.makeId(),\r\n        createdAt: Date.now(),\r\n        txt: `${loggedUser.fullname} added ${user.fullname} to this card`,\r\n      });\r\n    } else {\r\n      card.comments.unshift({\r\n        id: utilService.makeId(),\r\n        createdAt: Date.now(),\r\n        txt: `${loggedUser.fullname} removed ${user.fullname} from this card`,\r\n      });\r\n      card.members.splice(memberIndx, 1);\r\n    }\r\n    this.setState({ card }, () => {\r\n      this.props.saveCard(\r\n        this.state.card,\r\n        this.props.stack,\r\n        this.props.selectedBoard\r\n      );\r\n    });\r\n  };\r\n\r\n  setLabelOnCard = (color) => {\r\n    const { card } = this.state;\r\n    let { comments } = card;\r\n    // const { loggedUser } = this.state;\r\n    const colorIndx = card.labels.findIndex(\r\n      (labelColor) => labelColor === color\r\n    );\r\n    if (colorIndx === -1) {\r\n      comments.unshift({\r\n        id: utilService.makeId(),\r\n        createdAt: Date.now(),\r\n        txt: `${this.state.loggedUser.fullname} added card label color`,\r\n      });\r\n      card.labels.push(color);\r\n    } else {\r\n      comments.unshift({\r\n        id: utilService.makeId(),\r\n        createdAt: Date.now(),\r\n        txt: `${this.state.loggedUser.fullname} removed card label color`,\r\n      });\r\n      card.labels.splice(colorIndx, 1);\r\n    }\r\n    this.setState({ card, comments }, () => {\r\n      console.log('this.state.card is:', this.state.card);\r\n      this.props.saveCard(\r\n        this.state.card,\r\n        this.props.stack,\r\n        this.props.selectedBoard\r\n      );\r\n    });\r\n  };\r\n\r\n  setCardColor = (color) => {\r\n    let { card } = this.state;\r\n    let { comments } = card;\r\n    if (card.coverColor === color) {\r\n      comments.unshift({\r\n        id: utilService.makeId(),\r\n        createdAt: Date.now(),\r\n        txt: `${this.state.loggedUser.fullname} removed card cover color`,\r\n      });\r\n      card.coverColor = '';\r\n    } else {\r\n      comments.unshift({\r\n        id: utilService.makeId(),\r\n        createdAt: Date.now(),\r\n        txt: `${this.state.loggedUser.fullname} added card cover color`,\r\n      });\r\n      card.coverColor = color;\r\n    }\r\n    this.setState({ card, comments }, () => {\r\n      this.props.saveCard(\r\n        this.state.card,\r\n        this.props.stack,\r\n        this.props.selectedBoard\r\n      );\r\n    });\r\n  };\r\n\r\n  addChecklist = (checklistName) => {\r\n    const { card } = this.state;\r\n    let { comments } = card;\r\n    let checkListItem = {\r\n      id: utilService.makeId(),\r\n      title: checklistName,\r\n      todos: [],\r\n      createdAt: Date.now(),\r\n    };\r\n    comments.unshift({\r\n      id: utilService.makeId(),\r\n      createdAt: Date.now(),\r\n      txt: `${this.state.loggedUser.fullname} added checklist - ${checklistName}`,\r\n    });\r\n    card.checklists.push(checkListItem);\r\n    this.setState({ card });\r\n  };\r\n\r\n  updateChecklist = (checklist) => {\r\n    const { card } = this.state;\r\n    const checklistsToAdd = card.checklists.map((currChecklist) =>\r\n      currChecklist.id === checklist.id ? checklist : currChecklist\r\n    );\r\n    card.checklists = checklistsToAdd;\r\n    this.props.saveCard(card, this.props.stack, this.props.selectedBoard);\r\n  };\r\n\r\n  onRemoveTodo = (todoId, checklists) => {\r\n    const { card } = this.state;\r\n    const copyChecklists = { ...checklists };\r\n    const { todos } = copyChecklists;\r\n    const filteredTodos = todos.filter((todo) => todo.id !== todoId);\r\n    copyChecklists.todos = filteredTodos;\r\n    const filteredChecklists = card.checklists.map((currChecklist) =>\r\n      currChecklist.id === copyChecklists.id ? copyChecklists : currChecklist\r\n    );\r\n    card.checklists = filteredChecklists;\r\n    this.props.saveCard(card, this.props.stack, this.props.selectedBoard);\r\n  };\r\n\r\n  onClosePopUps = () => {\r\n    // eventBus.emit('close');\r\n  };\r\n\r\n  deleteChecklist = (checklistId) => {\r\n    const { card } = this.state;\r\n    const { stack, selectedBoard } = this.props;\r\n    let { comments } = card;\r\n    const currChecklistIdx = card.checklists.findIndex(\r\n      (cl) => cl.id === checklistId\r\n    );\r\n    const checklistName = card.checklists[currChecklistIdx].title;\r\n    card.checklists.splice(currChecklistIdx, 1);\r\n    comments.unshift({\r\n      id: utilService.makeId(),\r\n      createdAt: Date.now(),\r\n      txt: `${this.state.loggedUser.fullname} deleted checklist - ${checklistName}`,\r\n    });\r\n\r\n    this.setState({ card });\r\n    this.props.saveCard(card, stack, selectedBoard);\r\n  };\r\n\r\n  addComment = (comment) => {\r\n    const { card } = this.state;\r\n    card.comments.unshift({\r\n      id: utilService.makeId(),\r\n      createdBy: this.state.loggedUser,\r\n      createdAt: Date.now(),\r\n      txt: `${this.state.loggedUser.fullname} added comment - ${comment}`,\r\n    });\r\n    this.setState({ card });\r\n  };\r\n  onRemoveImage = (card) => {\r\n    const { stack, selectedBoard } = this.props;\r\n    console.log('Remove IMG');\r\n    const copyCard = { ...card };\r\n    copyCard.imgUrl = '';\r\n    console.log(copyCard);\r\n    this.props.saveCard(copyCard, stack, selectedBoard);\r\n  };\r\n\r\n  onSetDueDate = (dueDate) => {\r\n    const { stack, selectedBoard } = this.props;\r\n    const { card } = this.state;\r\n    card.dueDate = dueDate;\r\n    this.setState({ card }, () => {\r\n      this.props.saveCard(card, stack, selectedBoard);\r\n    });\r\n  };\r\n\r\n  onSaveCard = (card) => {\r\n    const { stack, selectedBoard } = this.props;\r\n    this.props.saveCard(card, stack, selectedBoard);\r\n  };\r\n\r\n  render() {\r\n    const { card, onCloseModal, stack } = this.props;\r\n    const { checklists } = this.state.card;\r\n    const labels = this.state.card.labels;\r\n    const cardMembers = this.state.card.members;\r\n    const { dueDate } = this.state.card;\r\n    return (\r\n      <>\r\n        <div className=\"modal-bg\" onClick={(ev) => onCloseModal(ev)}></div>\r\n        <main>\r\n          <section\r\n            onClick={this.onClosePopUps}\r\n            className=\"card-details-container\"\r\n          >\r\n            <div\r\n              className=\"card-details-cover\"\r\n              style={{ background: `${this.state.card.coverColor}` }}\r\n            >\r\n              <CloseIcon\r\n                className=\"close-cd\"\r\n                onClick={(ev) => onCloseModal(ev)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"card-details-body\">\r\n              <div className=\"card-details-top\">\r\n                <h2 className=\"card-details-title\">{card.title}</h2>\r\n                <p className=\"card-details-list\">\r\n                  in list <span className=\"list-fake-link\">{stack.title}</span>\r\n                </p>\r\n              </div>\r\n              <div className=\"details-list-container flex\">\r\n                <div className=\"column-container flex column\">\r\n                  {/* CARD LABELS */}\r\n                  {labels.length !== 0 && (\r\n                    <CardLabels className=\"labels-txt\" labels={labels} />\r\n                  )}\r\n                  {dueDate && (\r\n                    <div>\r\n                      <ScheduleIcon />\r\n                      <p>{dueDate}</p>\r\n                    </div>\r\n                  )}\r\n                  {cardMembers.length !== 0 && (\r\n                    <MembersAvatar users={cardMembers} />\r\n                  )}\r\n                  <CardDescription onSaveCard={this.onSaveCard} card={card} />\r\n                  {card.imgUrl && (\r\n                    <CardImg onRemoveImage={this.onRemoveImage} card={card} />\r\n                  )}\r\n                  {checklists.length !== 0 && (\r\n                    <CardChecklist\r\n                      updateChecklist={this.updateChecklist}\r\n                      onRemoveTodo={this.onRemoveTodo}\r\n                      onRemove={this.deleteChecklist}\r\n                      checklists={checklists}\r\n                    />\r\n                  )}\r\n\r\n                  <CardActivity card={card} onCommentAdd={this.addComment} />\r\n                </div>\r\n                <div className=\"sidebar-container\">\r\n                  <CardSideBar\r\n                    onSetDueDate={this.onSetDueDate}\r\n                    card={card}\r\n                    stack={stack}\r\n                    onMemberAdd={this.onMemberAdd}\r\n                    boardUsers={this.state.boardUsers}\r\n                    onCheckListSelect={this.addChecklist}\r\n                    onCoverColorSelect={this.setCardColor}\r\n                    onLabelColorSelect={this.setLabelOnCard}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedBoard: state.boardModule.selectedBoard,\r\n    users: state.userModule.users,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  saveCard,\r\n  loadUsers,\r\n};\r\n\r\nexport const CardDetails = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_CardDetails);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\Login.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\CardlyApp.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\About.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\SignUp.jsx",["260","261"],"import React, { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../store/actions/userActions.js';\r\n\r\nexport class _SignUp extends Component {\r\n  state = {\r\n    user: {\r\n      firstname: '',\r\n      lastname: '',\r\n      username: '',\r\n      password: '',\r\n      isGuest: false,\r\n      cards: [],\r\n      imgUrl: '',\r\n    },\r\n    msg: '',\r\n  };\r\n  handleInput = (ev) => {\r\n    ev.preventDefault();\r\n    const { user } = this.state;\r\n    const name = ev.target.name;\r\n    const value = ev.target.value;\r\n    user[name] = value;\r\n    this.setState({ user });\r\n  };\r\n\r\n  onSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    const { user } = this.state;\r\n    const fullname = user.firstname + ' ' + user.lastname;\r\n    delete user.firstname;\r\n    delete user.lastname;\r\n    user.fullname = fullname;\r\n    const { username, password } = user;\r\n    if (!username || !password || !fullname) {\r\n      return this.setState({ msg: 'All inputs are required' }, () =>\r\n        console.log(this.state.msg)\r\n      );\r\n    }\r\n    this.props.signup(user).then(() => this.props.history.push('/cardly'));\r\n  };\r\n  render() {\r\n    const classes = makeStyles((theme) => ({\r\n      paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n    }));\r\n    return (\r\n      <div className=\"main-signup\">\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"flex column center\">\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={this.onSubmit} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"fname\"\r\n                    name=\"firstname\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstname\"\r\n                    label=\"First Name\"\r\n                    autoFocus\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"lastname\"\r\n                    label=\"Last Name\"\r\n                    name=\"lastname\"\r\n                    autoComplete=\"lname\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"username\"\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                  {this.state.msg && <label>{this.state.msg}</label>}\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Link href=\"#/login\" variant=\"body2\">\r\n                    Already have an account? Log in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <Box mt={5}></Box>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  signup,\r\n};\r\n\r\nexport const SignUp = connect(mapStateToProps, mapDispatchToProps)(_SignUp);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\Home.jsx",["262"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function Home() {\r\n  return (\r\n    <section className=\"hero\">\r\n      <div className=\"home-container\">\r\n        <div className=\"home-content\">\r\n          <div className=\"home-words\">\r\n            <h1>Cardly</h1>\r\n            <p className=\"p1\">Get your work organized just how you like it.</p>\r\n            <p className=\"p2\">Cardly's boards, lists, and cards enable teams to organize and prioritize projects in a fun, flexible, and rewarding way.</p>\r\n            <div className=\"btn\">\r\n            <Link to=\"/Cardly\">\r\n              <button className=\"home-btn\">Get Started</button>\r\n            </Link>\r\n          </div>\r\n          </div>\r\n          <div className=\"home-img\">\r\n            <img src=\"https://res.cloudinary.com/drak3llqt/image/upload/v1611398666/undraw_teamwork_hpdk_qoijno.svg\" className=\"cardly-img\" />\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n      <footer className=\"home-footer flex space-between\">\r\n        <Link to=\"/\">\r\n          <button className=\"btn1\">\r\n            <span className=\"btn1-span\">about us</span>\r\n          </button>\r\n        </Link>\r\n        <p className=\"footer-p\">coffeerights 2021</p>\r\n      </footer>\r\n    </section>\r\n  )\r\n}\r\n\r\n// export function Home() {\r\n//   return (\r\n//     <section className=\"home-page flex column justify-center align-center\">\r\n//       <div className=\"home-container\">\r\n//         <div className=\"home-title\">Cardly</div>\r\n//         <p className=\"home-slogan\">\r\n//           Get your work organized just how you like it\r\n//       </p>\r\n//         <p className=\"subtitle\">Cardly's boards, lists, and cards enable teams to organize and prioritize projects in a fun, flexible, and rewarding way.</p>\r\n//         <Link to=\"/Cardly\">\r\n//           <button className=\"home-btn\">Get Started</button>\r\n//         </Link>\r\n//       </div>\r\n//       <footer className=\"home-footer flex space-between\">\r\n//         <Link to=\"/\">\r\n//           <button className=\"btn1\">\r\n//             <span className=\"btn1-span\">about us</span>\r\n//           </button>\r\n//         </Link>\r\n//         <p className=\"footer-p\">coffeerights 2021</p>\r\n//       </footer>\r\n//     </section>\r\n//   );\r\n// }\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\pages\\Board.jsx",["263"],"import React, { Component } from 'react';\r\nimport { StackList } from './../cmps/StackList';\r\nimport { setSelectedBoard, updateBoard } from '../store/actions/boardActions';\r\nimport { addStack } from '../store/actions/stackActions';\r\nimport { connect } from 'react-redux';\r\nimport { AddStack } from '../cmps/AddStack';\r\nimport { StatusBar } from '../cmps/StatusBar';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { socketService } from '../services/misc/socketService';\r\n\r\nexport class _Board extends Component {\r\n  state = {\r\n    isAddStack: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadBoard();\r\n    socketService.setup(); //on the road\r\n    socketService.emit('join board', this.props.match.params.id); //notify server i joined the lane\r\n    socketService.on('update board', this.handleUpdateBoard); // let me know on every change\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socketService.terminate();\r\n  }\r\n\r\n  handleUpdateBoard = (board) => {\r\n    this.props.updateBoard(board); //call action\r\n  };\r\n\r\n  loadBoard() {\r\n    const boardId = this.props.match.params.id;\r\n    this.props.setSelectedBoard(boardId);\r\n  }\r\n\r\n  onAddSection = () => {\r\n    this.setState({ isAddStack: true });\r\n  };\r\n\r\n  onCloseAddSection = () => {\r\n    this.setState({ isAddStack: false });\r\n  };\r\n\r\n  onAddNewStack = (stack) => {\r\n    const { selectedBoard } = this.props;\r\n    this.props\r\n      .addStack(stack, selectedBoard)\r\n      .then(() => this.setState({ isAddStack: false }));\r\n  };\r\n\r\n  render() {\r\n    // const classes = makeStyles((theme) => ({\r\n    //   root: {\r\n    //     display: 'flex',\r\n    //     '& > * + *': {\r\n    //       marginLeft: theme.spacing(2),\r\n    //     },\r\n    //   },\r\n    // }));\r\n    const { selectedBoard } = this.props;\r\n    let style = { backgroundColor: 'white' };\r\n    if (!selectedBoard) return <CircularProgress />;\r\n    if (selectedBoard.style) {\r\n      const bgc = selectedBoard.style.bgc;\r\n      style = bgc.startsWith('#')\r\n        ? { backgroundColor: bgc }\r\n        : { backgroundImage: `url(${bgc})` };\r\n    }\r\n    // const boardTitle = selectedBoard ? selectedBoard.title : '';\r\n    return (\r\n      <section className=\"board-container\" style={style}>\r\n        <StatusBar />\r\n\r\n        <div className=\"board-inner mt flex column\">\r\n          <div className=\"stack-container flex \">\r\n            {selectedBoard && <StackList board={selectedBoard} />}\r\n            <div className=\"add-new-stack\">\r\n              <button\r\n                className=\"board-open-modal-btn\"\r\n                onClick={this.onAddSection}\r\n              >\r\n                <span className=\"board-icon\">\r\n                  <AddIcon></AddIcon>\r\n                </span>\r\n                <span className=\"btn1-span\">Add another list</span>\r\n              </button>\r\n              {this.state.isAddStack && (\r\n                <AddStack\r\n                  addNewStack={this.onAddNewStack}\r\n                  closeAddSection={this.onCloseAddSection}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedBoard: state.boardModule.selectedBoard,\r\n    boards: state.boardModule.boards,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setSelectedBoard,\r\n  addStack,\r\n  updateBoard,\r\n};\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\eventBusService.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\misc\\utilService.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\cardActions.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\AddBoard.jsx",["264"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addBoard } from '../store/actions/boardActions';\r\nimport { utilService } from './../services/misc/utilService';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nexport class _AddBoard extends Component {\r\n  state = {\r\n    board: {\r\n      activities: [],\r\n      createdAt: Date.now(),\r\n      createdBy: {},\r\n      members: [],\r\n      stacks: [{ id: utilService.makeId(), cards: [], style: {}, title: '' }],\r\n      style: {\r\n        bgc: '',\r\n        mode: '',\r\n      },\r\n      title: '',\r\n    },\r\n  };\r\n\r\n  handleInput = (ev) => {\r\n    const { board } = this.state;\r\n    const { value } = ev.target;\r\n    board.title = value;\r\n    this.setState({ board });\r\n  };\r\n\r\n  async onSelectNewBoard(bgc) {\r\n    const { board } = this.state;\r\n    if (!board.title) return;\r\n    board.style.bgc = bgc;\r\n    this.setState({ board });\r\n    this.props.addBoard(board);\r\n    this.props.onCloseAddBoardSection();\r\n  }\r\n\r\n  render() {\r\n    const bgc = {\r\n      colors: ['#2e6cb0', '#889BC0', '#A36890', '#F0EFBD'],\r\n      imgsUrl: [\r\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1611243032/forest_bjdy6y.png',\r\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553512/img1_uyzefw.jpg',\r\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553514/img4_ohr2cl.png',\r\n        'https://res.cloudinary.com/drak3llqt/image/upload/v1610553508/img3_g44phk.png',\r\n      ],\r\n    };\r\n    const { onCloseAddBoardSection } = this.props;\r\n    return (\r\n      <section className=\"add-board-background\">\r\n        <div className=\"add-new-board\">\r\n          <button className=\"clear-btn no-growth flex justify-center align-center\" onClick={onCloseAddBoardSection}><ClearIcon></ClearIcon></button>\r\n          <form className=\"add-board-form flex align-center justify-center\">\r\n            <label className=\"add-board-title\">Title:</label>\r\n            <input\r\n              className=\"add-board-input\"\r\n              type=\"text\"\r\n              name=\"\"\r\n              onChange={this.handleInput}\r\n              id=\"\"\r\n              value={this.state.board.title}\r\n            />\r\n          </form>\r\n          <div className=\" grid\">\r\n            {bgc.colors.map((color) => {\r\n              return (\r\n                <div\r\n                  onClick={() => this.onSelectNewBoard(color)}\r\n                  key={color}\r\n                  className=\"bgc-add-board pointer\"\r\n                  style={{ backgroundColor: color }}\r\n                ></div>\r\n              );\r\n            })}\r\n            {bgc.imgsUrl.map((img) => {\r\n              return (\r\n                <div\r\n                  onClick={() => this.onSelectNewBoard(img)}\r\n                  key={img}\r\n                  className=\"add-new-board-img pointer\"\r\n                >\r\n                  <img src={img} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        {/* <button>Add </button> */}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    boards: state.boardModule.boards,\r\n    loggedInUser: state.userModule.loggedInUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addBoard,\r\n};\r\n\r\nexport const AddBoard = connect(mapStateToProps, mapDispatchToProps)(_AddBoard);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardSideBar.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardDescription.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardActivity.jsx",["265"],"import React, { Component } from 'react';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport { clientsClaim } from 'workbox-core';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\n\r\n\r\nexport class CardActivity extends Component {\r\n\r\n    state = {\r\n        comment: '',\r\n        isActivitySelected: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ comment: this.props.comment })\r\n    }\r\n\r\n\r\n    handleChange = (ev) => {\r\n        let { comment } = this.state\r\n        comment = ev.target.value\r\n        this.setState({ comment })\r\n    }\r\n\r\n    onEditActivity = () => {\r\n        const { isActivitySelected } = this.state\r\n        isActivitySelected ? this.setState({ isActivitySelected: false }) : this.setState({ isActivitySelected: true })\r\n    }\r\n\r\n    convertToDate = (timestamp) => {\r\n        let date = new Date(timestamp).toLocaleString();\r\n        const dateCopy = date.split('/')\r\n        const day = dateCopy[0];\r\n        const month = dateCopy[1];\r\n        const year = dateCopy[2];\r\n        return (`${day}/${month}/${year}`)\r\n    }\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        return <section className=\"cd-cmp flex column\">\r\n            <div className=\"card-act-title\">\r\n                <FormatListBulletedIcon className=\"act-icon\" />\r\n                <h3 className=\"cd-subtitle-words\">Activity</h3>\r\n            </div>\r\n            <div className=\"cd-subtitle-txt\">\r\n                <div className=\"cd-subtitle-txt\">\r\n                    <div className=\"card-act-textarea\">\r\n                        <textarea onChange={this.handleChange} className=\"act-textarea\" placeholder=\"Write a comment...\" ></textarea>\r\n                    </div>\r\n                    <div className=\"act-original-save flex space-between align-center\">\r\n                        <button className=\"save-btn\" onClick={() => this.props.onCommentAdd(this.state.comment)} >Save</button>\r\n                        <div className=\"activity-bar-icons\" >\r\n                            <AttachFileIcon className=\"activity-icon\" />\r\n                            <AlternateEmailIcon className=\"activity-icon\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {card.comments.map(comment => {\r\n                const fullname = (comment.createdBy) ? comment.createdBy.fullname : '';\r\n                const initials = fullname.substring(0, 1) + fullname.charAt(fullname.indexOf(' ') + 1)\r\n                const date = this.convertToDate(comment.createdAt)\r\n                // console.log('date is:', date);\r\n                return <div key={comment.id} >\r\n                    <div className=\"card-activity-container flex\">\r\n                        {\r\n                            !initials.length ? <Avatar size=\"10\" src=\"frontend/src/assets/imgs/avatar-person.svg\"></Avatar> :\r\n                                <Avatar size=\"10\" >{initials}</Avatar>\r\n                        }\r\n                        <div className=\"card-activity-row\">\r\n                            <input className=\"card-details-activity-textarea\" onClick={this.onEditActivity} onChange={this.handleChange} value={comment.txt}></input>\r\n                            <div className=\"card-activity-date\">{date}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            )\r\n            }\r\n\r\n        </section >\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardLabels.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\MembersAvatar.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardImg.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\CardChecklist.jsx",["266"],"import React, { Component } from 'react';\r\nimport { utilService } from '../../../services/misc/utilService.js';\r\nimport { ChecklistPreview } from './ChecklistPreview.jsx';\r\nimport { eventBus } from './../../../services/eventBusService';\r\n\r\nexport class CardChecklist extends Component {\r\n  state = {\r\n    newTodo: '',\r\n    todos: [],\r\n    closeAddTodoSection: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let todos = [];\r\n    this.props.checklists.map((todoList) => {\r\n      todos.push(todoList);\r\n    });\r\n    this.setState({ todos });\r\n  }\r\n\r\n  handleInput = (ev) => {\r\n    let { newTodo } = this.state;\r\n    newTodo = ev.target.value;\r\n    this.setState({ newTodo });\r\n  };\r\n\r\n  addTodo = (currChecklist) => {\r\n    currChecklist.todos.push({\r\n      id: utilService.makeId(),\r\n      txt: this.state.newTodo,\r\n      isDone: false,\r\n      createdAt: Date.now(),\r\n    });\r\n    this.setState({ todos: currChecklist.todos });\r\n    this.props.updateChecklist(currChecklist);\r\n    eventBus.emit('closeAddSection', false);\r\n  };\r\n\r\n  handleCheckboxTodo = (todoId, checklist) => {\r\n    const { ...copyChecklist } = checklist;\r\n    const todoToUpdate = copyChecklist.todos.find((todo) => todo.id === todoId);\r\n    todoToUpdate.isDone = !todoToUpdate.isDone;\r\n    const checklistToUpdate = copyChecklist.todos.map((todo) =>\r\n      todo.id === todoToUpdate.id ? todoToUpdate : todo\r\n    );\r\n\r\n    this.props.updateChecklist(checklistToUpdate);\r\n  };\r\n\r\n  render() {\r\n    const { checklists } = this.props;\r\n    return (\r\n      <div>\r\n        {checklists.map((checklist) => {\r\n          return (\r\n            <ChecklistPreview\r\n              handleCheckboxTodo={this.handleCheckboxTodo}\r\n              key={checklist.id}\r\n              checklist={checklist}\r\n              onRemoveTodo={this.props.onRemoveTodo}\r\n              handleInput={this.handleInput}\r\n              addTodo={this.addTodo}\r\n              onRemove={this.props.onRemove}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\userService.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\store\\actions\\stackActions.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\CardDetailsButton.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\BoardPreview.jsx",["267"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport class BoardPreview extends Component {\r\n  render() {\r\n    const { board, onRemove } = this.props;\r\n    const { bgc } = board.style;\r\n\r\n    return (\r\n      <div className=\"board-preview\">\r\n        {/* <button onClick={() => onRemove(board._id)}>X</button> */}\r\n        <div\r\n          className=\"board-preview-image\"\r\n          style={\r\n            bgc.startsWith('#')\r\n              ? { backgroundColor: bgc }\r\n              : { backgroundImage: `url(${bgc})` }\r\n          }\r\n        >\r\n          <Link to={`./cardly/${board._id}`}>\r\n            <div className=\"board-preview-card\">\r\n              <h3 className=\"board-preview-title\">{board.title}</h3>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n        {/* <div class=\"board-preview-description\">Board Description and Members</div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\ChecklistPreview.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\MembersPopup.jsx",["268"],"import React, { Component } from 'react';\r\nimport { MembersList } from '../MembersList.jsx'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport class MembersPopup extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    togglePopUp = (ev) => {\r\n        const { name, onButtonClick } = this.props\r\n        onButtonClick(name)\r\n    }\r\n\r\n    render() {\r\n        const { isTeamShows } = this.state\r\n        const boardUsers = this.props.boardUsers;\r\n        return (\r\n            <section className=\"members-container\">\r\n                <div className=\"pop-up-members\">\r\n                    <CloseIcon\r\n                        className=\"close-pop-up-btn\"\r\n                        onClick={(ev) => this.togglePopUp(ev)}\r\n                    />\r\n                    <p className=\"pop-up-header\"> Members</p>\r\n                    <hr></hr>\r\n                    <input autoFocus placeholder=\"Search members\" className=\"members-input\"></input>\r\n                    <p>BOARD MEMBERS</p>\r\n                    <MembersList onMemberAdd={this.props.onMemberAdd} users={boardUsers} />\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\LabelsPopup.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\DueDatePopup.jsx",["269"],"import React, { Component } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { DateAndTimePickers } from './../DateAndTimePickers';\r\n\r\nexport class DueDatePopup extends Component {\r\n  state = {\r\n    dueDate: '',\r\n  };\r\n  togglePopUp = (ev) => {\r\n    const { name, onButtonClick } = this.props;\r\n    onButtonClick(name);\r\n  };\r\n\r\n  onSetDate = ({ target }) => {\r\n    let value = target.value;\r\n    this.setState({ dueDate: value });\r\n  };\r\n\r\n  onSaveDueDate = () => {\r\n    const { onSetDueDate } = this.props;\r\n    const { dueDate } = this.state;\r\n    onSetDueDate(dueDate);\r\n    this.togglePopUp();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <div className=\"pop-up-due-date\">\r\n          <CloseIcon\r\n            className=\"close-pop-up-btn\"\r\n            onClick={(ev) => this.togglePopUp(ev)}\r\n          />\r\n          <p className=\"pop-up-header\">Change Due Date</p>\r\n          <hr></hr>\r\n          <DateAndTimePickers onSetDate={this.onSetDate} />\r\n          <button className=\"save-btn\" onClick={this.onSaveDueDate}>\r\n            Save\r\n          </button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\CheckListPopup.jsx",["270"],"import React, { Component } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport class CheckListPopup extends Component {\r\n\r\n    state = {\r\n        value: 'Checklist'\r\n    }\r\n\r\n    togglePopUp = (ev) => {\r\n        const { name, onButtonClick } = this.props\r\n        onButtonClick(name)\r\n    }\r\n\r\n    handleInput = (ev) => {\r\n        const value = ev.target.value\r\n        this.setState({ value })\r\n    }\r\n\r\n\r\n    render() {\r\n        let { value } = this.state\r\n        return (\r\n            <section>\r\n                <div className=\"pop-up-checklist\">\r\n                    <CloseIcon\r\n                        className=\"close-pop-up-btn\"\r\n                        onClick={(ev) => this.togglePopUp(ev)}\r\n                    />\r\n                    <p className=\"pop-up-header\">Add Checklist</p>\r\n                    <hr></hr>\r\n                    <div className=\"pop-up-title\">Title</div>\r\n                    <input autoFocus onChange={this.handleInput} defaultValue=\"Checklist\" className=\"checklist-input\"></input>\r\n                    <button onClick={() => { this.props.onCheckListSelect(this.state.value) }} className=\"save-btn\">Add</button>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\CoverPopup.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsPopUps\\AttachmentPopup.jsx",["271"],"import React, { Component } from 'react';\r\nimport { cloudinaryService } from '../../../services/cloudinaryService.js';\r\nimport { saveCard } from './../../../store/actions/cardActions';\r\nimport { connect } from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport class _AttachmentPopup extends Component {\r\n  state = {\r\n    card: {},\r\n    imageUpload: '',\r\n  };\r\n  componentDidMount() {\r\n    const { card } = this.props;\r\n    this.setState({ card });\r\n  }\r\n\r\n  togglePopUp = (ev) => {\r\n    const { name, onButtonClick } = this.props;\r\n    onButtonClick(name);\r\n  };\r\n\r\n  upload = (ev) => {\r\n    this.setState({ imageUpload: 'Uploading' });\r\n    cloudinaryService.uploadImg(ev).then((url) => {\r\n      const { card } = this.state;\r\n      const { stack, selectedBoard } = this.props;\r\n      card.imgUrl = url.secure_url;\r\n      this.setState({ card, imageUpload: '' }, () => {\r\n        this.props.saveCard(card, stack, selectedBoard);\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { card, imageUpload } = this.state;\r\n    return (\r\n      <section>\r\n        <div className=\"pop-up-attachments\">\r\n          <CloseIcon\r\n            className=\"close-pop-up-btn\"\r\n            onClick={(ev) => this.togglePopUp(ev)}\r\n          />\r\n          <p className=\"pop-up-header\"> Attach From...</p>\r\n          <hr></hr>\r\n          <div className=\"attach-choice\">\r\n            <input\r\n              id=\"file-upload\"\r\n              placeholder=\"Computer\"\r\n              onChange={this.upload}\r\n              type=\"file\"\r\n            ></input>\r\n            <label className=\"pointer\" htmlFor=\"file-upload\">\r\n              {imageUpload ? <CircularProgress /> : 'Computer'}\r\n            </label>\r\n          </div>\r\n          <p className=\"attach-choice\">Google Drive</p>\r\n          <p className=\"attach-choice\">DropBox</p>\r\n          <p className=\"attach-choice\">One Drive</p>\r\n          <hr></hr>\r\n          <label className=\"attach-label\">Attach a link</label>\r\n          <input\r\n            autoFocus\r\n            placeholder=\"Paste any link here\"\r\n            className=\"attach-input\"\r\n          ></input>\r\n          <button className=\"pop-up-attach-btn\">Attach</button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedBoard: state.boardModule.selectedBoard,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  saveCard,\r\n};\r\n\r\nexport const AttachmentPopup = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_AttachmentPopup);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\AddStack.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\StackList.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\StatusBar.jsx",["272","273"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { MembersAvatar } from '../cmps/cardDetailsCmps/cardDetailsBodyCmps/MembersAvatar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n// import { setSelectedBoard } from '../store/actions/boardActions';\r\n\r\nexport class _StatusBar extends React.Component {\r\n  state = {\r\n    selectedBoard: {},\r\n  };\r\n  componentDidMount() {\r\n    const { selectedBoard } = this.props;\r\n    this.setState({ selectedBoard });\r\n  }\r\n\r\n  render() {\r\n    const { selectedBoard } = this.props;\r\n    let members = '';\r\n    if (!selectedBoard) return <h5>Loading...</h5>;\r\n    if (selectedBoard.members) {\r\n      members = selectedBoard.members;\r\n    }\r\n    return (\r\n      <section>\r\n        <div className='status-bar-container flex space-between align-center' >\r\n          <div className=\"flex align-center\">\r\n            <h2 style={{ color: 'white' }} className=\"status-board-title\">{selectedBoard.title}</h2>\r\n            {members.length !== 0 && <MembersAvatar users={selectedBoard.members} />}\r\n          </div>\r\n          <button className=\"btn1 diff-bgc\" onClick={this.onMenuSelect}><span className=\"btn1-span\">Show Menu</span></button>\r\n\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedBoard: state.boardModule.selectedBoard,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport const StatusBar = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_StatusBar);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\storageSession.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\StackPreview.jsx",["274","275"],"import React, { Component } from 'react';\r\nimport { CardList } from './CardList';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { connect } from 'react-redux';\r\nimport { removeStack, saveStack } from '../store/actions/stackActions.js';\r\nimport { addCard } from '../store/actions/cardActions';\r\nimport { updateBoard, setSelectedBoard } from '../store/actions/boardActions';\r\nimport { EditStack } from './EditStack.jsx';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { AddCard } from './AddCard';\r\n// import { boardService } from './../services/boardService';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { boardService } from './../services/boardService';\r\nimport { socketService } from '../services/misc/socketService';\r\n\r\nexport class _StackPreview extends Component {\r\n  state = {\r\n    isEditShow: false,\r\n    isAddShow: false,\r\n    dragEnable: true,\r\n  };\r\n\r\n  disableStackDrag = () => {\r\n    this.setState({ dragEnable: false });\r\n  };\r\n  allowStackDrag = () => {\r\n    this.setState({ dragEnable: true });\r\n  };\r\n\r\n  onRemoveStack = () => {\r\n    const { stack, selectedBoard, removeStack } = this.props;\r\n    removeStack(stack.id, selectedBoard._id, selectedBoard);\r\n  };\r\n\r\n  onEdit = () => {\r\n    this.setState({ isEditShow: true });\r\n  };\r\n\r\n  onSaveStack = (stack) => {\r\n    const { selectedBoard } = this.props;\r\n    console.log('selectedBoard is:', this.props.selectedBoard);\r\n    this.props.saveStack(stack, selectedBoard);\r\n    this.setState({ isEditShow: false });\r\n  };\r\n\r\n  onAddCard = () => {\r\n    this.setState({ isAddShow: true });\r\n  };\r\n\r\n  onCloseAddSection = () => {\r\n    this.setState({ isAddShow: false });\r\n  };\r\n\r\n  onAddNewCard = (cardToadd) => {\r\n    const { stack, selectedBoard } = this.props;\r\n    this.onCloseAddSection();\r\n    // const board = boardService.addCard(cardToadd, stack, selectedBoard);\r\n    // console.log(board);\r\n    this.props.addCard(cardToadd, stack, selectedBoard);\r\n  };\r\n\r\n  onDragDis = () => {\r\n    return true;\r\n  };\r\n\r\n  render() {\r\n    const { stack } = this.props;\r\n    const { dragEnable } = this.state;\r\n    return (\r\n      <>\r\n        <Draggable\r\n          isDragDisabled={dragEnable === false}\r\n          draggableId={stack.id}\r\n          index={this.props.index}\r\n        >\r\n          {(provided) => (\r\n            <div\r\n              {...provided.draggableProps}\r\n              ref={provided.innerRef}\r\n              {...provided.dragHandleProps}\r\n              className=\"stack-preview-card card-list\"\r\n            >\r\n              <div className=\"stack-title flex\">\r\n                {this.state.isEditShow ? (\r\n                  <EditStack\r\n                    className=\"stack-preview-edit flex\"\r\n                    saveStack={this.onSaveStack}\r\n                    stack={stack}\r\n                  />\r\n                ) : (\r\n                  <div className=\"flex space-between align-center\">\r\n                    <h4 onClick={this.onEdit} className=\"stack-title-words\">\r\n                      {stack.title}\r\n                    </h4>\r\n                    <div onClick={this.onRemoveStack} className=\"flex\">\r\n                      <DeleteIcon className=\"stack-preview-delete-icon\"></DeleteIcon>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <CardList\r\n                allowStackDrag={this.allowStackDrag}\r\n                disableStackDrag={this.disableStackDrag}\r\n                stack={stack}\r\n                cards={stack.cards}\r\n              />\r\n              {this.state.isAddShow ? (\r\n                <AddCard\r\n                  addNewCard={this.onAddNewCard}\r\n                  closeAddSection={this.onCloseAddSection}\r\n                />\r\n              ) : (\r\n                <div\r\n                  onClick={this.onAddCard}\r\n                  className=\"add-new-card flex align-center\"\r\n                >\r\n                  <div className=\"add-icon flex justify-center align-center\">\r\n                    <AddIcon></AddIcon>\r\n                  </div>\r\n                  <span className=\"add-text flex justify-center align-center\">\r\n                    Add Another Card\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedBoard: state.boardModule.selectedBoard,\r\n    boards: state.boardModule.boards,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  removeStack,\r\n  setSelectedBoard,\r\n  saveStack,\r\n  addCard,\r\n  updateBoard,\r\n};\r\n\r\nexport const StackPreview = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_StackPreview);\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\services\\cloudinaryService.js",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\MembersList.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\EditStack.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\TodoPreview.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\cardDetailsBodyCmps\\LinearProgressWithLabel.jsx",["276","277"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport function LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value\r\n        )}%`}</Typography>\r\n      </Box>\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\cardDetailsCmps\\DateAndTimePickers.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\CardList.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\AddCard.jsx",[],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\CardPreview.jsx",["278","279"],"C:\\Users\\moshikomalka\\Desktop\\NodeJs\\Sprint 4\\Cardly\\frontend\\src\\cmps\\EditCard.jsx",[],{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":11,"column":40,"nodeType":"286","messageId":"287","endLine":11,"endColumn":78},{"ruleId":"288","severity":1,"message":"289","line":5,"column":8,"nodeType":"290","messageId":"291","endLine":5,"endColumn":18},{"ruleId":"288","severity":1,"message":"292","line":6,"column":8,"nodeType":"290","messageId":"291","endLine":6,"endColumn":15},{"ruleId":"288","severity":1,"message":"293","line":7,"column":8,"nodeType":"290","messageId":"291","endLine":7,"endColumn":16},{"ruleId":"288","severity":1,"message":"294","line":16,"column":11,"nodeType":"290","messageId":"291","endLine":16,"endColumn":22},{"ruleId":"288","severity":1,"message":"295","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":18},{"ruleId":"288","severity":1,"message":"296","line":6,"column":8,"nodeType":"290","messageId":"291","endLine":6,"endColumn":24},{"ruleId":"288","severity":1,"message":"297","line":7,"column":8,"nodeType":"290","messageId":"291","endLine":7,"endColumn":16},{"ruleId":"298","severity":1,"message":"299","line":20,"column":13,"nodeType":"300","endLine":20,"endColumn":143},{"ruleId":"288","severity":1,"message":"301","line":9,"column":10,"nodeType":"290","messageId":"291","endLine":9,"endColumn":20},{"ruleId":"298","severity":1,"message":"299","line":83,"column":19,"nodeType":"300","endLine":83,"endColumn":36},{"ruleId":"288","severity":1,"message":"302","line":5,"column":10,"nodeType":"290","messageId":"291","endLine":5,"endColumn":22},{"ruleId":"303","severity":1,"message":"304","line":15,"column":42,"nodeType":"305","messageId":"306","endLine":15,"endColumn":44},{"ruleId":"288","severity":1,"message":"307","line":5,"column":20,"nodeType":"290","messageId":"291","endLine":5,"endColumn":28},{"ruleId":"288","severity":1,"message":"308","line":17,"column":17,"nodeType":"290","messageId":"291","endLine":17,"endColumn":28},{"ruleId":"288","severity":1,"message":"309","line":2,"column":8,"nodeType":"290","messageId":"291","endLine":2,"endColumn":16},{"ruleId":"288","severity":1,"message":"310","line":23,"column":15,"nodeType":"290","messageId":"291","endLine":23,"endColumn":20},{"ruleId":"288","severity":1,"message":"311","line":36,"column":13,"nodeType":"290","messageId":"291","endLine":36,"endColumn":17},{"ruleId":"288","severity":1,"message":"312","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":26},{"ruleId":"288","severity":1,"message":"313","line":4,"column":8,"nodeType":"290","messageId":"291","endLine":4,"endColumn":16},{"ruleId":"288","severity":1,"message":"314","line":13,"column":10,"nodeType":"290","messageId":"291","endLine":13,"endColumn":22},{"ruleId":"288","severity":1,"message":"315","line":14,"column":10,"nodeType":"290","messageId":"291","endLine":14,"endColumn":23},{"ruleId":"288","severity":1,"message":"316","line":2,"column":8,"nodeType":"290","messageId":"291","endLine":2,"endColumn":17},{"ruleId":"288","severity":1,"message":"301","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":20},{"ruleId":"288","severity":1,"message":"317","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":14},{"ruleId":"303","severity":1,"message":"304","line":74,"column":36,"nodeType":"305","messageId":"306","endLine":74,"endColumn":38},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],"no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","no-unused-vars","'SearchIcon' is defined but never used.","Identifier","unusedVar","'AddIcon' is defined but never used.","'InfoIcon' is defined but never used.","'searchClass' is assigned a value but never used.","'eventBus' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'makeStyles' is defined but never used.","'clientsClaim' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'onRemove' is assigned a value but never used.","'isTeamShows' is assigned a value but never used.","'Calendar' is defined but never used.","'value' is assigned a value but never used.","'card' is assigned a value but never used.","'Component' is defined but never used.","'MenuIcon' is defined but never used.","'boardService' is defined but never used.","'socketService' is defined but never used.","'PropTypes' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]